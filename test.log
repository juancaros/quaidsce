------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\jccaro\quaidsce\test.log
  log type:  text
 opened on:  15 Oct 2021, 13:28:36

. webuse food, clear

. program drop _all

. 
. use "C:\Users\jccaro\quaidsce\docs\DS_STATA_3_2__pci2sls_.dta", clear

. 
. ***debugginb tools
. *set trace on
. *set tracedepth 4
. *set matadebug on
. *mata: mata set matalnum on
. 
. foreach i of numlist 1/4 {
  2. gen aux = cond(runiform() < 0.2, 0, 1)
  3. replace w`i'=0 if aux==0
  4. drop aux 
  5. }
(1,921 real changes made)
(2,936 real changes made)
(784 real changes made)
(2,632 real changes made)

. 
. gen w5=1-w1-w2-w3-w4
variable w5 already defined
r(110);

end of do-file

r(110);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. use "C:\Users\jccaro\quaidsce\docs\DS_STATA_3_2__pci2sls_.dta", clear

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1-w17, anot(10) prices(p1-p17) expenditure(total_exp) demographics(EA  x1-x8) nolog 
>  method(nls) 
expenditure shares do not sum to one
r(499);

end of do-file

r(499);

. set trace on

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1-w17, anot(10) prices(p1-p17) expenditure(total_exp) demographics(EA  x1-x8) nolog 
>  method(nls) 
  --------------------------------------------------------------------------- begin quaidsce ---
  - version 12
  - if replay() {
    if "`e(cmd)'" != "quaidsce" {
    error 301
    }
    Display `0'
    exit
    }
  - Estimate `0'
  = Estimate w1-w17, anot(10) prices(p1-p17) expenditure(total_exp) demographics(EA  x1-x8) nolo
> g  method(nls)
    ---------------------------------------------------------------- begin quaidsce.Estimate ---
    - version 12
    - syntax varlist [if] [in] , ANOT(real) [ LNEXPenditure(varlist min=1 max=1 numeric) EXPendi
> ture(varlist min=1 max=1 numeric) PRices(varlist numeric) LNPRices(varlist numeric) DEMOgraphi
> cs(varlist numeric) noQUadratic noCEnsor INITial(name) noLOg Level(cilevel) VCE(passthru) Meth
> od(name) * ]
    - local shares `varlist'
    = local shares w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17
    - if "`options'" != "" {
    = if "" != "" {
      di as error "`options' not allowed"
      exit 198
      }
    - if "`prices'" != "" & "`lnprices'" != "" {
    = if "p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17" != "" & "" != "" {
      di as error "cannot specify both {cmd:prices()} and " as error "{cmd:lnprices()}"
      exit 198
      }
    - if "`prices'`lnprices'" == "" {
    = if "p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17" == "" {
      di as error "must specify {cmd:prices()} or {cmd:lnprices()}"
      exit 198
      }
    - if "`expenditure'" != "" & "`lnexpenditure'" != "" {
    = if "total_exp" != "" & "" != "" {
      di as error "cannot specify both {cmd:expenditure()} " as error "and {cmd:lnexpenditure()}
> "
      exit 198
      }
    - if "`expenditure'`lnexpenditure'" == "" {
    = if "total_exp" == "" {
      di as error "must specify {cmd:expenditure()} or {cmd:lnexpenditure()}"
      exit 198
      }
    - local neqn : word count `shares'
    = local neqn : word count w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17
    - if `neqn' < 3 {
    = if 17 < 3 {
      di as error "must specify at least 3 expenditure shares"
      exit 498
      }
    - if `=`:word count `prices'' + `:word count `lnprices''' != `neqn' {
    = if 17 != 17 {
      if "`prices'" != "" {
      di as error "number of price variables must " as error "equal number of equations " as err
> or "(`neqn')"
      }
      else {
      di as error "number of log price variables " as error "must equal number of " as error "eq
> uations (`neqn')"
      }
      exit 498
      }
    - marksample touse
    - markout `touse' `prices' `lnprices' `demographics'
    = markout __000000 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17  EA x1 x2 x3 x
> 4 x5 x6 x7 x8
    - markout `touse' `expenditure' `lnexpenditure'
    = markout __000000 total_exp 
    - local i 1
    - while (`i' < `neqn') {
    = while (1 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2  w1
    - local `++i'
    = local 2
    - }
    - while (`i' < `neqn') {
    = while (2 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2
    - local `++i'
    = local 3
    - }
    - while (`i' < `neqn') {
    = while (3 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3
    - local `++i'
    = local 4
    - }
    - while (`i' < `neqn') {
    = while (4 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4
    - local `++i'
    = local 5
    - }
    - while (`i' < `neqn') {
    = while (5 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5
    - local `++i'
    = local 6
    - }
    - while (`i' < `neqn') {
    = while (6 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6
    - local `++i'
    = local 7
    - }
    - while (`i' < `neqn') {
    = while (7 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7
    - local `++i'
    = local 8
    - }
    - while (`i' < `neqn') {
    = while (8 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8
    - local `++i'
    = local 9
    - }
    - while (`i' < `neqn') {
    = while (9 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9
    - local `++i'
    = local 10
    - }
    - while (`i' < `neqn') {
    = while (10 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10
    - local `++i'
    = local 11
    - }
    - while (`i' < `neqn') {
    = while (11 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11
    - local `++i'
    = local 12
    - }
    - while (`i' < `neqn') {
    = while (12 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12
    - local `++i'
    = local 13
    - }
    - while (`i' < `neqn') {
    = while (13 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13
    - local `++i'
    = local 14
    - }
    - while (`i' < `neqn') {
    = while (14 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14
    - local `++i'
    = local 15
    - }
    - while (`i' < `neqn') {
    = while (15 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15
    - local `++i'
    = local 16
    - }
    - while (`i' < `neqn') {
    = while (16 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16
    - local `++i'
    = local 17
    - }
    - while (`i' < `neqn') {
    = while (17 < 17) {
      local shares2 `shares2' `:word `i' of `shares''
      local `++i'
      }
    - tempvar sumw
    - egen double `sumw' = rsum(`shares') if `touse'
    = egen double __000001 = rsum(w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17) if
>  __000000
    - cap assert reldif(`sumw', 1) < 1e-4 if `touse'
    = cap assert reldif(__000001, 1) < 1e-4 if __000000
    - if _rc {
    - di as error "expenditure shares do not sum to one"
expenditure shares do not sum to one
    - exit 499
      }
    ------------------------------------------------------------------ end quaidsce.Estimate ---
  ----------------------------------------------------------------------------- end quaidsce ---
r(499);

end of do-file

r(499);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1-w17, anot(10) prices(p1-p17) expenditure(total_exp) demographics(EA  x1-x8) nolog 
>  method(nls) 
  --------------------------------------------------------------------------- begin quaidsce ---
  - version 12
  - if replay() {
    if "`e(cmd)'" != "quaidsce" {
    error 301
    }
    Display `0'
    exit
    }
  - Estimate `0'
  = Estimate w1-w17, anot(10) prices(p1-p17) expenditure(total_exp) demographics(EA  x1-x8) nolo
> g  method(nls)
    ---------------------------------------------------------------- begin quaidsce.Estimate ---
    - version 12
    - syntax varlist [if] [in] , ANOT(real) [ LNEXPenditure(varlist min=1 max=1 numeric) EXPendi
> ture(varlist min=1 max=1 numeric) PRices(varlist numeric) LNPRices(varlist numeric) DEMOgraphi
> cs(varlist numeric) noQUadratic noCEnsor INITial(name) noLOg Level(cilevel) VCE(passthru) Meth
> od(name) * ]
    - local shares `varlist'
    = local shares w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17
    - if "`options'" != "" {
    = if "" != "" {
      di as error "`options' not allowed"
      exit 198
      }
    - if "`prices'" != "" & "`lnprices'" != "" {
    = if "p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17" != "" & "" != "" {
      di as error "cannot specify both {cmd:prices()} and " as error "{cmd:lnprices()}"
      exit 198
      }
    - if "`prices'`lnprices'" == "" {
    = if "p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17" == "" {
      di as error "must specify {cmd:prices()} or {cmd:lnprices()}"
      exit 198
      }
    - if "`expenditure'" != "" & "`lnexpenditure'" != "" {
    = if "total_exp" != "" & "" != "" {
      di as error "cannot specify both {cmd:expenditure()} " as error "and {cmd:lnexpenditure()}
> "
      exit 198
      }
    - if "`expenditure'`lnexpenditure'" == "" {
    = if "total_exp" == "" {
      di as error "must specify {cmd:expenditure()} or {cmd:lnexpenditure()}"
      exit 198
      }
    - local neqn : word count `shares'
    = local neqn : word count w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17
    - if `neqn' < 3 {
    = if 17 < 3 {
      di as error "must specify at least 3 expenditure shares"
      exit 498
      }
    - if `=`:word count `prices'' + `:word count `lnprices''' != `neqn' {
    = if 17 != 17 {
      if "`prices'" != "" {
      di as error "number of price variables must " as error "equal number of equations " as err
> or "(`neqn')"
      }
      else {
      di as error "number of log price variables " as error "must equal number of " as error "eq
> uations (`neqn')"
      }
      exit 498
      }
    - marksample touse
    - markout `touse' `prices' `lnprices' `demographics'
    = markout __000000 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17  EA x1 x2 x3 x
> 4 x5 x6 x7 x8
    - markout `touse' `expenditure' `lnexpenditure'
    = markout __000000 total_exp 
    - local i 1
    - while (`i' < `neqn') {
    = while (1 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2  w1
    - local `++i'
    = local 2
    - }
    - while (`i' < `neqn') {
    = while (2 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2
    - local `++i'
    = local 3
    - }
    - while (`i' < `neqn') {
    = while (3 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3
    - local `++i'
    = local 4
    - }
    - while (`i' < `neqn') {
    = while (4 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4
    - local `++i'
    = local 5
    - }
    - while (`i' < `neqn') {
    = while (5 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5
    - local `++i'
    = local 6
    - }
    - while (`i' < `neqn') {
    = while (6 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6
    - local `++i'
    = local 7
    - }
    - while (`i' < `neqn') {
    = while (7 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7
    - local `++i'
    = local 8
    - }
    - while (`i' < `neqn') {
    = while (8 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8
    - local `++i'
    = local 9
    - }
    - while (`i' < `neqn') {
    = while (9 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9
    - local `++i'
    = local 10
    - }
    - while (`i' < `neqn') {
    = while (10 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10
    - local `++i'
    = local 11
    - }
    - while (`i' < `neqn') {
    = while (11 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11
    - local `++i'
    = local 12
    - }
    - while (`i' < `neqn') {
    = while (12 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12
    - local `++i'
    = local 13
    - }
    - while (`i' < `neqn') {
    = while (13 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13
    - local `++i'
    = local 14
    - }
    - while (`i' < `neqn') {
    = while (14 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14
    - local `++i'
    = local 15
    - }
    - while (`i' < `neqn') {
    = while (15 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15
    - local `++i'
    = local 16
    - }
    - while (`i' < `neqn') {
    = while (16 < 17) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16
    - local `++i'
    = local 17
    - }
    - while (`i' < `neqn') {
    = while (17 < 17) {
      local shares2 `shares2' `:word `i' of `shares''
      local `++i'
      }
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      tempvar sumw
      egen double `sumw' = rsum(`shares') if `touse'
      cap assert reldif(`sumw', 1) < 1e-4 if `touse'
      if _rc {
      di as error "expenditure shares do not sum to one"
      exit 499
      }
      }
    - if "`prices'" != "" {
    = if "p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17" != "" {
    - local usrprices 1
    - local lnprices
    - foreach x of varlist `prices' {
    = foreach x of varlist p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17 {
    - summ `x' if `touse', mean
    = summ p1 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp1
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000001 = ln(p1) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices  __000001
    - }
    - summ `x' if `touse', mean
    = summ p2 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp2
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000002 = ln(p2) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002
    - }
    - summ `x' if `touse', mean
    = summ p3 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp3
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000003 = ln(p3) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003
    - }
    - summ `x' if `touse', mean
    = summ p4 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp4
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000004 = ln(p4) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004
    - }
    - summ `x' if `touse', mean
    = summ p5 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp5
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000005 = ln(p5) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005
    - }
    - summ `x' if `touse', mean
    = summ p6 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp6
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000006 = ln(p6) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006
    - }
    - summ `x' if `touse', mean
    = summ p7 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp7
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000007 = ln(p7) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007
    - }
    - summ `x' if `touse', mean
    = summ p8 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp8
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000008 = ln(p8) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008
    - }
    - summ `x' if `touse', mean
    = summ p9 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp9
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000009 = ln(p9) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009
    - }
    - summ `x' if `touse', mean
    = summ p10 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp10
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __00000A = ln(p10) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009 __00000A
    - }
    - summ `x' if `touse', mean
    = summ p11 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp11
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __00000B = ln(p11) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009 __00000A __00000B
    - }
    - summ `x' if `touse', mean
    = summ p12 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp12
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __00000C = ln(p12) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009 __00000A __00000B __00000C
    - }
    - summ `x' if `touse', mean
    = summ p13 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp13
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __00000D = ln(p13) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009 __00000A __00000B __00000C __00000D
    - }
    - summ `x' if `touse', mean
    = summ p14 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp14
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __00000E = ln(p14) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009 __00000A __00000B __00000C __00000D __00000E
    - }
    - summ `x' if `touse', mean
    = summ p15 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp15
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __00000F = ln(p15) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009 __00000A __00000B __00000C __00000D __00000E __00000F
    - }
    - summ `x' if `touse', mean
    = summ p16 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp16
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __00000G = ln(p16) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G
    - }
    - summ `x' if `touse', mean
    = summ p17 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp17
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __00000H = ln(p17) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __0
> 00009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H
    - }
    - }
    - if "`expenditure'" != "" {
    = if "total_exp" != "" {
    - local usrexpenditure 1
    - summ `expenditure' if `touse', mean
    = summ total_exp if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for " as error "`expenditure' found"
      exit 499
      }
    - tempvar lnexp
    - qui gen double `lnexp' = ln(`expenditure') if `touse'
    = qui gen double __00000I = ln(total_exp) if __000000
    - local lnexpenditure `lnexp'
    = local lnexpenditure __00000I
    - }
    - if "`quadratic'" == "noquadratic" {
    = if "" == "noquadratic" {
      local np = 2*(`neqn'-1) + `neqn'*(`neqn'-1)/2
      local np2 = 2*(`neqn') + `neqn'*(`neqn'-1)/2
      }
    - else {
    - local np = 3*(`neqn'-1) + `neqn'*(`neqn'-1)/2
    = local np = 3*(17-1) + 17*(17-1)/2
    - local np2 = 3*(`neqn') + `neqn'*(`neqn'-1)/2
    = local np2 = 3*(17) + 17*(17-1)/2
    - }
    - if "`demographics'" == "" {
    = if "EA x1 x2 x3 x4 x5 x6 x7 x8" == "" {
      local demos "nodemos"
      local demoopt ""
      local ndemos = 0
      }
    - else {
    - local demos ""
    - local demoopt "demographics(`demographics')"
    = local demoopt "demographics(EA x1 x2 x3 x4 x5 x6 x7 x8)"
    - local ndemos : word count `demographics'
    = local ndemos : word count EA x1 x2 x3 x4 x5 x6 x7 x8
    - local np = `np' + `ndemos'*(`neqn'-1) + `ndemos'
    = local np = 184 + 9*(17-1) + 9
    - local np2 = `np2' + `ndemos'*(`neqn'-1) + `ndemos'
    = local np2 = 187 + 9*(17-1) + 9
    - }
    - if "`initial'" != "" {
    = if "" != "" {
      local rf = rowsof(`initial')
      local cf = colsof(`initial')
      if `rf' != 1 | `cf' != `np' {
      di "Initial vector must be 1 x `np'"
      exit 503
      }
      else {
      local initialopt initial(`initial')
      }
      }
    - if "`method'" == "" {
    = if "nls" == "" {
      local estimator "ifgnls"
      }
    - else {
    - local estimator `method'
    = local estimator nls
    - }
    - local pdf
    - local cdf
    - capture drop cdf??
    - capture drop pdf??
    - capture drop du??
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      foreach x of varlist `shares2' {
      qui gen pdf`x'=0
      qui gen cdf`x'=1
      local pdf `pdf' pdf`x'
      local cdf `cdf' cdf`x'
      }
      }
    - else {
    - local np_prob : word count `lnprices' `lnexp' `demographics' intercept
    = local np_prob : word count __000001 __000002 __000003 __000004 __000005 __000006 __000007 
> __000008 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00
> 000I EA x1 x2 x3 x4 x5 x6 x7 x8 intercept
    - local nprob M `demographics' cons
    = local nprob M EA x1 x2 x3 x4 x5 x6 x7 x8 cons
    - mat tau=J(1,`np_prob',0)
    = mat tau=J(1,28,0)
    - mat setau=J(`np_prob'*`neqn',`np_prob'*`neqn',0)
    = mat setau=J(28*17,28*17,0)
    - foreach x of varlist `shares' {
    = foreach x of varlist w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17 {
    - summ `x' if `touse', mean
    = summ w1 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw1
    - local pdf`x'
    = local pdfw1
    - local cdf`x'
    = local cdfw1
    - local du`x'
    = local duw1
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000J = 1 if w1 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000J = 0 if w1 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw1=0
    - qui gen cdf`x'=1
    = qui gen cdfw1=1
    - summ `z`x'' if `touse', mean
    = summ __00000J if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000J __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w1",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw1
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw1= normalden(duw1)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw1= normal(duw1)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf  pdfw1
    - local cdf `cdf' cdf`x'
    = local cdf  cdfw1
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w2 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw2
    - local pdf`x'
    = local pdfw2
    - local cdf`x'
    = local cdfw2
    - local du`x'
    = local duw2
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000N = 1 if w2 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000N = 0 if w2 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw2=0
    - qui gen cdf`x'=1
    = qui gen cdfw2=1
    - summ `z`x'' if `touse', mean
    = summ __00000N if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000N __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w2",2,1)
    - if `xn'==1 {
    = if 2==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 28*(2-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[29,29] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw2
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw2= normalden(duw2)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw2= normal(duw2)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w3 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw3
    - local pdf`x'
    = local pdfw3
    - local cdf`x'
    = local cdfw3
    - local du`x'
    = local duw3
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000R = 1 if w3 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000R = 0 if w3 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw3=0
    - qui gen cdf`x'=1
    = qui gen cdfw3=1
    - summ `z`x'' if `touse', mean
    = summ __00000R if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000R __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w3",2,1)
    - if `xn'==1 {
    = if 3==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 28*(3-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[57,57] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw3
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw3= normalden(duw3)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw3= normal(duw3)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w4 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw4
    - local pdf`x'
    = local pdfw4
    - local cdf`x'
    = local cdfw4
    - local du`x'
    = local duw4
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000V = 1 if w4 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000V = 0 if w4 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw4=0
    - qui gen cdf`x'=1
    = qui gen cdfw4=1
    - summ `z`x'' if `touse', mean
    = summ __00000V if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000V __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w4",2,1)
    - if `xn'==1 {
    = if 4==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 28*(4-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[85,85] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw4
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw4= normalden(duw4)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw4= normal(duw4)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w5 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw5
    - local pdf`x'
    = local pdfw5
    - local cdf`x'
    = local cdfw5
    - local du`x'
    = local duw5
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000Z = 1 if w5 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000Z = 0 if w5 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw5=0
    - qui gen cdf`x'=1
    = qui gen cdfw5=1
    - summ `z`x'' if `touse', mean
    = summ __00000Z if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000Z __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w5",2,1)
    - if `xn'==1 {
    = if 5==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 28*(5-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[113,113] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw5
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw5= normalden(duw5)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw5= normal(duw5)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w6 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw6
    - local pdf`x'
    = local pdfw6
    - local cdf`x'
    = local cdfw6
    - local du`x'
    = local duw6
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __000013 = 1 if w6 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __000013 = 0 if w6 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw6=0
    - qui gen cdf`x'=1
    = qui gen cdfw6=1
    - summ `z`x'' if `touse', mean
    = summ __000013 if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __000013 __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w6",2,1)
    - if `xn'==1 {
    = if 6==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 28*(6-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[141,141] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw6
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw6= normalden(duw6)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw6= normal(duw6)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w7 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw7
    - local pdf`x'
    = local pdfw7
    - local cdf`x'
    = local cdfw7
    - local du`x'
    = local duw7
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __000017 = 1 if w7 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __000017 = 0 if w7 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw7=0
    - qui gen cdf`x'=1
    = qui gen cdfw7=1
    - summ `z`x'' if `touse', mean
    = summ __000017 if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __000017 __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w7",2,1)
    - if `xn'==1 {
    = if 7==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 28*(7-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[169,169] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw7
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw7= normalden(duw7)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw7= normal(duw7)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w8 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw8
    - local pdf`x'
    = local pdfw8
    - local cdf`x'
    = local cdfw8
    - local du`x'
    = local duw8
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00001B = 1 if w8 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00001B = 0 if w8 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw8=0
    - qui gen cdf`x'=1
    = qui gen cdfw8=1
    - summ `z`x'' if `touse', mean
    = summ __00001B if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00001B __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w8",2,1)
    - if `xn'==1 {
    = if 8==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 28*(8-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[197,197] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw8
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw8= normalden(duw8)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw8= normal(duw8)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w9 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw9
    - local pdf`x'
    = local pdfw9
    - local cdf`x'
    = local cdfw9
    - local du`x'
    = local duw9
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00001F = 1 if w9 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00001F = 0 if w9 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw9=0
    - qui gen cdf`x'=1
    = qui gen cdfw9=1
    - summ `z`x'' if `touse', mean
    = summ __00001F if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00001F __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w9",2,1)
    - if `xn'==1 {
    = if 9==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 28*(9-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[225,225] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw9
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw9= normalden(duw9)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw9= normal(duw9)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w10 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw10
    - local pdf`x'
    = local pdfw10
    - local cdf`x'
    = local cdfw10
    - local du`x'
    = local duw10
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00001J = 1 if w10 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00001J = 0 if w10 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw10=0
    - qui gen cdf`x'=1
    = qui gen cdfw10=1
    - summ `z`x'' if `touse', mean
    = summ __00001J if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00001J __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w10",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw10
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw10= normalden(duw10)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw10= normal(duw10)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w11 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw11
    - local pdf`x'
    = local pdfw11
    - local cdf`x'
    = local cdfw11
    - local du`x'
    = local duw11
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00001N = 1 if w11 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00001N = 0 if w11 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw11=0
    - qui gen cdf`x'=1
    = qui gen cdfw11=1
    - summ `z`x'' if `touse', mean
    = summ __00001N if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00001N __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w11",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw11
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw11= normalden(duw11)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw11= normal(duw11)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10 pdfw11
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10 cdfw11
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w12 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw12
    - local pdf`x'
    = local pdfw12
    - local cdf`x'
    = local cdfw12
    - local du`x'
    = local duw12
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00001R = 1 if w12 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00001R = 0 if w12 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw12=0
    - qui gen cdf`x'=1
    = qui gen cdfw12=1
    - summ `z`x'' if `touse', mean
    = summ __00001R if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00001R __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w12",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw12
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw12= normalden(duw12)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw12= normal(duw12)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10 pdfw11 pdfw12
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10 cdfw11 cdfw12
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w13 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw13
    - local pdf`x'
    = local pdfw13
    - local cdf`x'
    = local cdfw13
    - local du`x'
    = local duw13
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00001V = 1 if w13 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00001V = 0 if w13 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw13=0
    - qui gen cdf`x'=1
    = qui gen cdfw13=1
    - summ `z`x'' if `touse', mean
    = summ __00001V if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00001V __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w13",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw13
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw13= normalden(duw13)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw13= normal(duw13)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10 pdfw11 pdfw12 pdfw1
> 3
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10 cdfw11 cdfw12 cdfw1
> 3
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w14 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw14
    - local pdf`x'
    = local pdfw14
    - local cdf`x'
    = local cdfw14
    - local du`x'
    = local duw14
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00001Z = 1 if w14 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00001Z = 0 if w14 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw14=0
    - qui gen cdf`x'=1
    = qui gen cdfw14=1
    - summ `z`x'' if `touse', mean
    = summ __00001Z if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00001Z __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w14",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw14
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw14= normalden(duw14)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw14= normal(duw14)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10 pdfw11 pdfw12 pdfw1
> 3 pdfw14
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10 cdfw11 cdfw12 cdfw1
> 3 cdfw14
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w15 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw15
    - local pdf`x'
    = local pdfw15
    - local cdf`x'
    = local cdfw15
    - local du`x'
    = local duw15
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __000023 = 1 if w15 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __000023 = 0 if w15 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw15=0
    - qui gen cdf`x'=1
    = qui gen cdfw15=1
    - summ `z`x'' if `touse', mean
    = summ __000023 if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __000023 __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w15",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw15
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw15= normalden(duw15)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw15= normal(duw15)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10 pdfw11 pdfw12 pdfw1
> 3 pdfw14 pdfw15
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10 cdfw11 cdfw12 cdfw1
> 3 cdfw14 cdfw15
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w16 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw16
    - local pdf`x'
    = local pdfw16
    - local cdf`x'
    = local cdfw16
    - local du`x'
    = local duw16
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __000027 = 1 if w16 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __000027 = 0 if w16 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw16=0
    - qui gen cdf`x'=1
    = qui gen cdfw16=1
    - summ `z`x'' if `touse', mean
    = summ __000027 if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __000027 __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w16",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw16
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw16= normalden(duw16)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw16= normal(duw16)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10 pdfw11 pdfw12 pdfw1
> 3 pdfw14 pdfw15 pdfw16
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10 cdfw11 cdfw12 cdfw1
> 3 cdfw14 cdfw15 cdfw16
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w17 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw17
    - local pdf`x'
    = local pdfw17
    - local cdf`x'
    = local cdfw17
    - local du`x'
    = local duw17
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00002B = 1 if w17 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00002B = 0 if w17 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw17=0
    - qui gen cdf`x'=1
    = qui gen cdfw17=1
    - summ `z`x'' if `touse', mean
    = summ __00002B if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00002B __000001 __000002 __000003 __000004 __000005 __000006 __000007 __00000
> 8 __000009 __00000A __00000B __00000C __00000D __00000E __00000F __00000G __00000H __00000I EA
>  x1 x2 x3 x4 x5 x6 x7 x8
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w17",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw17
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw17= normalden(duw17)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw17= normal(duw17)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10 pdfw11 pdfw12 pdfw1
> 3 pdfw14 pdfw15 pdfw16 pdfw17
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10 cdfw11 cdfw12 cdfw1
> 3 cdfw14 cdfw15 cdfw16 cdfw17
    - local du `du' `du`x''
    = local du  
    - }
    - }
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      local shares `shares2'
      local np2= `np'
      local neqn2=`=`neqn'-1'
      }
    - else {
    - local np2= `np2' + `neqn'
    = local np2= 340 + 17
    - local neqn2 `neqn'
    = local neqn2 17
    - }
    - nlsur __quaidsce @ `shares' if `touse', lnp(`lnprices') lnexp(`lnexpenditure') cdfi(`cdf')
>  pdfi(`pdf') a0(`anot') nparam(`np2') neq(`neqn2') `estimator' noeqtab nocoeftab `quadratic' `
> options' `censor' `demoopt' `initialopt' `log' `vce'
    = nlsur __quaidsce @ w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17 if __000000,
>  lnp(__000001 __000002 __000003 __000004 __000005 __000006 __000007 __000008 __000009 __00000A
>  __00000B __00000C __00000D __00000E __00000F __00000G __00000H) lnexp(__00000I) cdfi(cdfw1 cd
> fw2 cdfw3 cdfw4 cdfw5 cdfw6 cdfw7 cdfw8 cdfw9 cdfw10 cdfw11 cdfw12 cdfw13 cdfw14 cdfw15 cdfw16
>  cdfw17) pdfi(pdfw1 pdfw2 pdfw3 pdfw4 pdfw5 pdfw6 pdfw7 pdfw8 pdfw9 pdfw10 pdfw11 pdfw12 pdfw1
> 3 pdfw14 pdfw15 pdfw16 pdfw17) a0(10) nparam(357) neq(17) nls noeqtab nocoeftab    demographic
> s(EA x1 x2 x3 x4 x5 x6 x7 x8)  nolog 
(obs = 15,151)
Calculating NLS estimates...
    ------------------------------------------------------------------ end quaidsce.Estimate ---
  ----------------------------------------------------------------------------- end quaidsce ---
--Break--
r(1);

end of do-file

--Break--
r(1);

. set trace off

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. webuse food, clear

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1 w2 w3 w4, anot(10) prices(p1 p2 p3 p4) expenditure(expfd) nolog nocensor noquadrat
> ic method(nls) 
(obs = 4,048)
Calculating NLS estimates...

Censored Quadratic AIDS model
--------------------
Number of obs          =       4048
Number of demographics =          0
Alpha_0                =         10
Log-likelihood         =  13085.742

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
alpha        |
     alpha_1 |   .4061249   .0218462    18.59   0.000     .3633072    .4489426
     alpha_2 |    .139951    .016793     8.33   0.000     .1070374    .1728646
     alpha_3 |   .1098431   .0089197    12.31   0.000     .0923609    .1273253
     alpha_4 |   .3440811   .0285112    12.07   0.000     .2882001     .399962
-------------+----------------------------------------------------------------
beta         |
      beta_1 |   .0164336    .003402     4.83   0.000     .0097658    .0231015
      beta_2 |  -.0261002   .0026226    -9.95   0.000    -.0312404     -.02096
      beta_3 |    .001324   .0013883     0.95   0.340    -.0013971     .004045
      beta_4 |   .0083426   .0045146     1.85   0.065    -.0005058     .017191
-------------+----------------------------------------------------------------
gamma        |
   gamma_1_1 |   .1183871   .0049267    24.03   0.000      .108731    .1280431
   gamma_2_1 |  -.0558836   .0034714   -16.10   0.000    -.0626875   -.0490798
   gamma_3_1 |  -.0375826    .002013   -18.67   0.000    -.0415281   -.0336372
   gamma_4_1 |  -.0249208   .0043465    -5.73   0.000    -.0334397   -.0164019
   gamma_2_2 |   .0681134   .0042013    16.21   0.000      .059879    .0763479
   gamma_3_2 |   .0011405    .001914     0.60   0.551     -.002611    .0048919
   gamma_4_2 |  -.0133703   .0035841    -3.73   0.000     -.020395   -.0063456
   gamma_3_3 |   .0464434   .0017323    26.81   0.000     .0430482    .0498386
   gamma_4_3 |  -.0100013   .0018098    -5.53   0.000    -.0135484   -.0064541
   gamma_4_4 |   .0482923   .0061334     7.87   0.000     .0362711    .0603136
------------------------------------------------------------------------------

. 
end of do-file

. predict ww*
(4,046 real changes made)
(4,038 real changes made)
(4,044 real changes made)
(4,036 real changes made)
(4,044 real changes made)
(4,046 real changes made)
(4,044 real changes made)
(4,043 real changes made)
(4,029 real changes made)
(4,044 real changes made)
(4,038 real changes made)
(4,036 real changes made)
(4,029 real changes made)
(4,023 real changes made)
(4,036 real changes made)
(4,046 real changes made)
(4,044 real changes made)
(4,044 real changes made)
(4,036 real changes made)
(4,039 real changes made)
(4,048 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)
(4,048 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)
(4,048 real changes made)
(0 real changes made)
(4,038 real changes made)
(0 real changes made)
(4,039 real changes made)
(0 real changes made)
(4,039 real changes made)
(0 real changes made)
(4,048 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)
(4,046 real changes made)
(0 real changes made)

. sum ww* w*

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        ww_1 |      4,048     .291002    .0152688   .2252548   .3394819
        ww_2 |      4,048    .3124095    .0158555   .2587656   .3737475
        ww_3 |      4,048    .0986002    .0050681   .0813105   .1203228
        ww_4 |      4,048     .263014    .0202418   .1807659   .3814524
          w1 |      4,048    .4008241    .1416505          0   .9206853
-------------+---------------------------------------------------------
          w2 |      4,048    .2401759    .1065029          0     .82085
          w3 |      4,048     .102189    .0580385          0   .4984845
          w4 |      4,048     .256811    .1092822          0          1
        ww_1 |      4,048     .291002    .0152688   .2252548   .3394819
        ww_2 |      4,048    .3124095    .0158555   .2587656   .3737475
-------------+---------------------------------------------------------
        ww_3 |      4,048    .0986002    .0050681   .0813105   .1203228
        ww_4 |      4,048     .263014    .0202418   .1807659   .3814524

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1 w2 w3 w4 w5, anot(10) prices(p1 p2 p3 p4 p5) expenditure(expfd) nolog demographics
> (income) noquadratic method(nls) 
variable w5 not found
r(111);

end of do-file

r(111);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. gen w5=1-w1-w2-w3-w4

. replace w5=0 if w5<0.0001
(3,651 real changes made)

. gen p5=0.5*p1+0.5*p3+exp(rnormal())

. gen lnp5=ln(p5)

. 
. set seed 1

. gen nkids = int(runiform()*4)

. gen rural = (runiform() > 0.2)

. gen income = exp(rnormal())+exp(rnormal())

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1 w2 w3 w4 w5, anot(10) prices(p1 p2 p3 p4 p5) expenditure(expfd) nolog demographics
> (income) noquadratic method(nls) 
r(2000);

end of do-file

r(2000);

. set trace on

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1 w2 w3 w4 w5, anot(10) prices(p1 p2 p3 p4 p5) expenditure(expfd) nolog demographics
> (income) noquadratic method(nls) 
  --------------------------------------------------------------------------- begin quaidsce ---
  - version 12
  - if replay() {
    if "`e(cmd)'" != "quaidsce" {
    error 301
    }
    Display `0'
    exit
    }
  - Estimate `0'
  = Estimate w1 w2 w3 w4 w5, anot(10) prices(p1 p2 p3 p4 p5) expenditure(expfd) nolog demographi
> cs(income) noquadratic method(nls)
    ---------------------------------------------------------------- begin quaidsce.Estimate ---
    - version 12
    - syntax varlist [if] [in] , ANOT(real) [ LNEXPenditure(varlist min=1 max=1 numeric) EXPendi
> ture(varlist min=1 max=1 numeric) PRices(varlist numeric) LNPRices(varlist numeric) DEMOgraphi
> cs(varlist numeric) noQUadratic noCEnsor INITial(name) noLOg Level(cilevel) VCE(passthru) Meth
> od(name) * ]
    - local shares `varlist'
    = local shares w1 w2 w3 w4 w5
    - if "`options'" != "" {
    = if "" != "" {
      di as error "`options' not allowed"
      exit 198
      }
    - if "`prices'" != "" & "`lnprices'" != "" {
    = if "p1 p2 p3 p4 p5" != "" & "" != "" {
      di as error "cannot specify both {cmd:prices()} and " as error "{cmd:lnprices()}"
      exit 198
      }
    - if "`prices'`lnprices'" == "" {
    = if "p1 p2 p3 p4 p5" == "" {
      di as error "must specify {cmd:prices()} or {cmd:lnprices()}"
      exit 198
      }
    - if "`expenditure'" != "" & "`lnexpenditure'" != "" {
    = if "expfd" != "" & "" != "" {
      di as error "cannot specify both {cmd:expenditure()} " as error "and {cmd:lnexpenditure()}
> "
      exit 198
      }
    - if "`expenditure'`lnexpenditure'" == "" {
    = if "expfd" == "" {
      di as error "must specify {cmd:expenditure()} or {cmd:lnexpenditure()}"
      exit 198
      }
    - local neqn : word count `shares'
    = local neqn : word count w1 w2 w3 w4 w5
    - if `neqn' < 3 {
    = if 5 < 3 {
      di as error "must specify at least 3 expenditure shares"
      exit 498
      }
    - if `=`:word count `prices'' + `:word count `lnprices''' != `neqn' {
    = if 5 != 5 {
      if "`prices'" != "" {
      di as error "number of price variables must " as error "equal number of equations " as err
> or "(`neqn')"
      }
      else {
      di as error "number of log price variables " as error "must equal number of " as error "eq
> uations (`neqn')"
      }
      exit 498
      }
    - marksample touse
    - markout `touse' `prices' `lnprices' `demographics'
    = markout __000000 p1 p2 p3 p4 p5  income
    - markout `touse' `expenditure' `lnexpenditure'
    = markout __000000 expfd 
    - local i 1
    - while (`i' < `neqn') {
    = while (1 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2  w1
    - local `++i'
    = local 2
    - }
    - while (`i' < `neqn') {
    = while (2 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2
    - local `++i'
    = local 3
    - }
    - while (`i' < `neqn') {
    = while (3 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3
    - local `++i'
    = local 4
    - }
    - while (`i' < `neqn') {
    = while (4 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4
    - local `++i'
    = local 5
    - }
    - while (`i' < `neqn') {
    = while (5 < 5) {
      local shares2 `shares2' `:word `i' of `shares''
      local `++i'
      }
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      tempvar sumw
      egen double `sumw' = rsum(`shares') if `touse'
      cap assert reldif(`sumw', 1) < 1e-4 if `touse'
      if _rc {
      di as error "expenditure shares do not sum to one"
      exit 499
      }
      }
    - if "`prices'" != "" {
    = if "p1 p2 p3 p4 p5" != "" {
    - local usrprices 1
    - local lnprices
    - foreach x of varlist `prices' {
    = foreach x of varlist p1 p2 p3 p4 p5 {
    - summ `x' if `touse', mean
    = summ p1 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp1
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000001 = ln(p1) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices  __000001
    - }
    - summ `x' if `touse', mean
    = summ p2 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp2
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000002 = ln(p2) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002
    - }
    - summ `x' if `touse', mean
    = summ p3 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp3
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000003 = ln(p3) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003
    - }
    - summ `x' if `touse', mean
    = summ p4 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp4
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000004 = ln(p4) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004
    - }
    - summ `x' if `touse', mean
    = summ p5 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp5
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000005 = ln(p5) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005
    - }
    - }
    - if "`expenditure'" != "" {
    = if "expfd" != "" {
    - local usrexpenditure 1
    - summ `expenditure' if `touse', mean
    = summ expfd if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for " as error "`expenditure' found"
      exit 499
      }
    - tempvar lnexp
    - qui gen double `lnexp' = ln(`expenditure') if `touse'
    = qui gen double __000006 = ln(expfd) if __000000
    - local lnexpenditure `lnexp'
    = local lnexpenditure __000006
    - }
    - if "`quadratic'" == "noquadratic" {
    = if "noquadratic" == "noquadratic" {
    - local np = 2*(`neqn'-1) + `neqn'*(`neqn'-1)/2
    = local np = 2*(5-1) + 5*(5-1)/2
    - local np2 = 2*(`neqn') + `neqn'*(`neqn'-1)/2
    = local np2 = 2*(5) + 5*(5-1)/2
    - }
    - else {
      local np = 3*(`neqn'-1) + `neqn'*(`neqn'-1)/2
      local np2 = 3*(`neqn') + `neqn'*(`neqn'-1)/2
      }
    - if "`demographics'" == "" {
    = if "income" == "" {
      local demos "nodemos"
      local demoopt ""
      local ndemos = 0
      }
    - else {
    - local demos ""
    - local demoopt "demographics(`demographics')"
    = local demoopt "demographics(income)"
    - local ndemos : word count `demographics'
    = local ndemos : word count income
    - local np = `np' + `ndemos'*(`neqn'-1) + `ndemos'
    = local np = 18 + 1*(5-1) + 1
    - local np2 = `np2' + `ndemos'*(`neqn'-1) + `ndemos'
    = local np2 = 20 + 1*(5-1) + 1
    - }
    - if "`initial'" != "" {
    = if "" != "" {
      local rf = rowsof(`initial')
      local cf = colsof(`initial')
      if `rf' != 1 | `cf' != `np' {
      di "Initial vector must be 1 x `np'"
      exit 503
      }
      else {
      local initialopt initial(`initial')
      }
      }
    - if "`method'" == "" {
    = if "nls" == "" {
      local estimator "ifgnls"
      }
    - else {
    - local estimator `method'
    = local estimator nls
    - }
    - local pdf
    - local cdf
    - capture drop cdf??
    - capture drop pdf??
    - capture drop du??
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      foreach x of varlist `shares2' {
      qui gen pdf`x'=0
      qui gen cdf`x'=1
      local pdf `pdf' pdf`x'
      local cdf `cdf' cdf`x'
      }
      }
    - else {
    - local np_prob : word count `lnprices' `lnexp' `demographics' intercept
    = local np_prob : word count __000001 __000002 __000003 __000004 __000005 __000006 income in
> tercept
    - local nprob M `demographics' cons
    = local nprob M income cons
    - mat tau=J(1,`np_prob',0)
    = mat tau=J(1,8,0)
    - mat setau=J(`np_prob'*`neqn',`np_prob'*`neqn',0)
    = mat setau=J(8*5,8*5,0)
    - foreach x of varlist `shares' {
    = foreach x of varlist w1 w2 w3 w4 w5 {
    - summ `x' if `touse', mean
    = summ w1 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw1
    - local pdf`x'
    = local pdfw1
    - local cdf`x'
    = local cdfw1
    - local du`x'
    = local duw1
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __000007 = 1 if w1 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __000007 = 0 if w1 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw1=0
    - qui gen cdf`x'=1
    = qui gen cdfw1=1
    - summ `z`x'' if `touse', mean
    = summ __000007 if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __000007 __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w1",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw1
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw1= normalden(duw1)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw1= normal(duw1)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf  pdfw1
    - local cdf `cdf' cdf`x'
    = local cdf  cdfw1
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w2 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw2
    - local pdf`x'
    = local pdfw2
    - local cdf`x'
    = local cdfw2
    - local du`x'
    = local duw2
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000B = 1 if w2 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000B = 0 if w2 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw2=0
    - qui gen cdf`x'=1
    = qui gen cdfw2=1
    - summ `z`x'' if `touse', mean
    = summ __00000B if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000B __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w2",2,1)
    - if `xn'==1 {
    = if 2==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(2-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[9,9] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw2
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw2= normalden(duw2)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw2= normal(duw2)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w3 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw3
    - local pdf`x'
    = local pdfw3
    - local cdf`x'
    = local cdfw3
    - local du`x'
    = local duw3
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000F = 1 if w3 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000F = 0 if w3 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw3=0
    - qui gen cdf`x'=1
    = qui gen cdfw3=1
    - summ `z`x'' if `touse', mean
    = summ __00000F if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000F __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w3",2,1)
    - if `xn'==1 {
    = if 3==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(3-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[17,17] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw3
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw3= normalden(duw3)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw3= normal(duw3)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w4 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw4
    - local pdf`x'
    = local pdfw4
    - local cdf`x'
    = local cdfw4
    - local du`x'
    = local duw4
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000J = 1 if w4 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000J = 0 if w4 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw4=0
    - qui gen cdf`x'=1
    = qui gen cdfw4=1
    - summ `z`x'' if `touse', mean
    = summ __00000J if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000J __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w4",2,1)
    - if `xn'==1 {
    = if 4==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(4-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[25,25] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw4
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw4= normalden(duw4)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw4= normal(duw4)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w5 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw5
    - local pdf`x'
    = local pdfw5
    - local cdf`x'
    = local cdfw5
    - local du`x'
    = local duw5
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000N = 1 if w5 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000N = 0 if w5 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw5=0
    - qui gen cdf`x'=1
    = qui gen cdfw5=1
    - summ `z`x'' if `touse', mean
    = summ __00000N if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000N __000001 __000002 __000003 __000004 __000005 __000006 income
      tempname xn loc lof
      local xn = substr("`x'",2,1)
      if `xn'==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
      else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
      quietly predict du`x'
      if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
      qui replace pdf`x'= normalden(du`x')
      qui replace cdf`x'= normal(du`x')
      }
      local pdf `pdf' pdf`x'
      local cdf `cdf' cdf`x'
      local du `du' `du`x''
      }
      }
    ------------------------------------------------------------------ end quaidsce.Estimate ---
  ----------------------------------------------------------------------------- end quaidsce ---
r(2000);

end of do-file

r(2000);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1 w2 w3 w4 w5, anot(10) prices(p1 p2 p3 p4 p5) expenditure(expfd) nolog demographics
> (income) noquadratic method(nls) 
  --------------------------------------------------------------------------- begin quaidsce ---
  - version 12
  - if replay() {
    if "`e(cmd)'" != "quaidsce" {
    error 301
    }
    Display `0'
    exit
    }
  - Estimate `0'
  = Estimate w1 w2 w3 w4 w5, anot(10) prices(p1 p2 p3 p4 p5) expenditure(expfd) nolog demographi
> cs(income) noquadratic method(nls)
    ---------------------------------------------------------------- begin quaidsce.Estimate ---
    - version 12
    - syntax varlist [if] [in] , ANOT(real) [ LNEXPenditure(varlist min=1 max=1 numeric) EXPendi
> ture(varlist min=1 max=1 numeric) PRices(varlist numeric) LNPRices(varlist numeric) DEMOgraphi
> cs(varlist numeric) noQUadratic noCEnsor INITial(name) noLOg Level(cilevel) VCE(passthru) Meth
> od(name) * ]
    - local shares `varlist'
    = local shares w1 w2 w3 w4 w5
    - if "`options'" != "" {
    = if "" != "" {
      di as error "`options' not allowed"
      exit 198
      }
    - if "`prices'" != "" & "`lnprices'" != "" {
    = if "p1 p2 p3 p4 p5" != "" & "" != "" {
      di as error "cannot specify both {cmd:prices()} and " as error "{cmd:lnprices()}"
      exit 198
      }
    - if "`prices'`lnprices'" == "" {
    = if "p1 p2 p3 p4 p5" == "" {
      di as error "must specify {cmd:prices()} or {cmd:lnprices()}"
      exit 198
      }
    - if "`expenditure'" != "" & "`lnexpenditure'" != "" {
    = if "expfd" != "" & "" != "" {
      di as error "cannot specify both {cmd:expenditure()} " as error "and {cmd:lnexpenditure()}
> "
      exit 198
      }
    - if "`expenditure'`lnexpenditure'" == "" {
    = if "expfd" == "" {
      di as error "must specify {cmd:expenditure()} or {cmd:lnexpenditure()}"
      exit 198
      }
    - local neqn : word count `shares'
    = local neqn : word count w1 w2 w3 w4 w5
    - if `neqn' < 3 {
    = if 5 < 3 {
      di as error "must specify at least 3 expenditure shares"
      exit 498
      }
    - if `=`:word count `prices'' + `:word count `lnprices''' != `neqn' {
    = if 5 != 5 {
      if "`prices'" != "" {
      di as error "number of price variables must " as error "equal number of equations " as err
> or "(`neqn')"
      }
      else {
      di as error "number of log price variables " as error "must equal number of " as error "eq
> uations (`neqn')"
      }
      exit 498
      }
    - marksample touse
    - markout `touse' `prices' `lnprices' `demographics'
    = markout __000000 p1 p2 p3 p4 p5  income
    - markout `touse' `expenditure' `lnexpenditure'
    = markout __000000 expfd 
    - local i 1
    - while (`i' < `neqn') {
    = while (1 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2  w1
    - local `++i'
    = local 2
    - }
    - while (`i' < `neqn') {
    = while (2 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2
    - local `++i'
    = local 3
    - }
    - while (`i' < `neqn') {
    = while (3 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3
    - local `++i'
    = local 4
    - }
    - while (`i' < `neqn') {
    = while (4 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4
    - local `++i'
    = local 5
    - }
    - while (`i' < `neqn') {
    = while (5 < 5) {
      local shares2 `shares2' `:word `i' of `shares''
      local `++i'
      }
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      tempvar sumw
      egen double `sumw' = rsum(`shares') if `touse'
      cap assert reldif(`sumw', 1) < 1e-4 if `touse'
      if _rc {
      di as error "expenditure shares do not sum to one"
      exit 499
      }
      }
    - if "`prices'" != "" {
    = if "p1 p2 p3 p4 p5" != "" {
    - local usrprices 1
    - local lnprices
    - foreach x of varlist `prices' {
    = foreach x of varlist p1 p2 p3 p4 p5 {
    - summ `x' if `touse', mean
    = summ p1 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp1
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000001 = ln(p1) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices  __000001
    - }
    - summ `x' if `touse', mean
    = summ p2 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp2
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000002 = ln(p2) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002
    - }
    - summ `x' if `touse', mean
    = summ p3 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp3
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000003 = ln(p3) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003
    - }
    - summ `x' if `touse', mean
    = summ p4 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp4
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000004 = ln(p4) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004
    - }
    - summ `x' if `touse', mean
    = summ p5 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp5
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000005 = ln(p5) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005
    - }
    - }
    - if "`expenditure'" != "" {
    = if "expfd" != "" {
    - local usrexpenditure 1
    - summ `expenditure' if `touse', mean
    = summ expfd if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for " as error "`expenditure' found"
      exit 499
      }
    - tempvar lnexp
    - qui gen double `lnexp' = ln(`expenditure') if `touse'
    = qui gen double __000006 = ln(expfd) if __000000
    - local lnexpenditure `lnexp'
    = local lnexpenditure __000006
    - }
    - if "`quadratic'" == "noquadratic" {
    = if "noquadratic" == "noquadratic" {
    - local np = 2*(`neqn'-1) + `neqn'*(`neqn'-1)/2
    = local np = 2*(5-1) + 5*(5-1)/2
    - local np2 = 2*(`neqn') + `neqn'*(`neqn'-1)/2
    = local np2 = 2*(5) + 5*(5-1)/2
    - }
    - else {
      local np = 3*(`neqn'-1) + `neqn'*(`neqn'-1)/2
      local np2 = 3*(`neqn') + `neqn'*(`neqn'-1)/2
      }
    - if "`demographics'" == "" {
    = if "income" == "" {
      local demos "nodemos"
      local demoopt ""
      local ndemos = 0
      }
    - else {
    - local demos ""
    - local demoopt "demographics(`demographics')"
    = local demoopt "demographics(income)"
    - local ndemos : word count `demographics'
    = local ndemos : word count income
    - local np = `np' + `ndemos'*(`neqn'-1) + `ndemos'
    = local np = 18 + 1*(5-1) + 1
    - local np2 = `np2' + `ndemos'*(`neqn'-1) + `ndemos'
    = local np2 = 20 + 1*(5-1) + 1
    - }
    - if "`initial'" != "" {
    = if "" != "" {
      local rf = rowsof(`initial')
      local cf = colsof(`initial')
      if `rf' != 1 | `cf' != `np' {
      di "Initial vector must be 1 x `np'"
      exit 503
      }
      else {
      local initialopt initial(`initial')
      }
      }
    - if "`method'" == "" {
    = if "nls" == "" {
      local estimator "ifgnls"
      }
    - else {
    - local estimator `method'
    = local estimator nls
    - }
    - local pdf
    - local cdf
    - capture drop cdf??
    - capture drop pdf??
    - capture drop du??
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      foreach x of varlist `shares2' {
      qui gen pdf`x'=0
      qui gen cdf`x'=1
      local pdf `pdf' pdf`x'
      local cdf `cdf' cdf`x'
      }
      }
    - else {
    - local np_prob : word count `lnprices' `lnexp' `demographics' intercept
    = local np_prob : word count __000001 __000002 __000003 __000004 __000005 __000006 income in
> tercept
    - local nprob M `demographics' cons
    = local nprob M income cons
    - mat tau=J(1,`np_prob',0)
    = mat tau=J(1,8,0)
    - mat setau=J(`np_prob'*`neqn',`np_prob'*`neqn',0)
    = mat setau=J(8*5,8*5,0)
    - foreach x of varlist `shares' {
    = foreach x of varlist w1 w2 w3 w4 w5 {
    - summ `x' if `touse', mean
    = summ w1 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw1
    - local pdf`x'
    = local pdfw1
    - local cdf`x'
    = local cdfw1
    - local du`x'
    = local duw1
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __000007 = 1 if w1 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __000007 = 0 if w1 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw1=0
    - qui gen cdf`x'=1
    = qui gen cdfw1=1
    - summ `z`x'' if `touse', mean
    = summ __000007 if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __000007 __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w1",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw1
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw1= normalden(duw1)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw1= normal(duw1)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf  pdfw1
    - local cdf `cdf' cdf`x'
    = local cdf  cdfw1
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w2 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw2
    - local pdf`x'
    = local pdfw2
    - local cdf`x'
    = local cdfw2
    - local du`x'
    = local duw2
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000B = 1 if w2 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000B = 0 if w2 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw2=0
    - qui gen cdf`x'=1
    = qui gen cdfw2=1
    - summ `z`x'' if `touse', mean
    = summ __00000B if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000B __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w2",2,1)
    - if `xn'==1 {
    = if 2==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(2-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[9,9] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw2
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw2= normalden(duw2)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw2= normal(duw2)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w3 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw3
    - local pdf`x'
    = local pdfw3
    - local cdf`x'
    = local cdfw3
    - local du`x'
    = local duw3
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000F = 1 if w3 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000F = 0 if w3 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw3=0
    - qui gen cdf`x'=1
    = qui gen cdfw3=1
    - summ `z`x'' if `touse', mean
    = summ __00000F if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000F __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w3",2,1)
    - if `xn'==1 {
    = if 3==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(3-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[17,17] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw3
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw3= normalden(duw3)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw3= normal(duw3)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w4 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw4
    - local pdf`x'
    = local pdfw4
    - local cdf`x'
    = local cdfw4
    - local du`x'
    = local duw4
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000J = 1 if w4 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000J = 0 if w4 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw4=0
    - qui gen cdf`x'=1
    = qui gen cdfw4=1
    - summ `z`x'' if `touse', mean
    = summ __00000J if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000J __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w4",2,1)
    - if `xn'==1 {
    = if 4==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(4-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[25,25] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw4
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw4= normalden(duw4)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw4= normal(duw4)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w5 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw5
    - local pdf`x'
    = local pdfw5
    - local cdf`x'
    = local cdfw5
    - local du`x'
    = local duw5
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000N = 1 if w5 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000N = 0 if w5 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw5=0
    - qui gen cdf`x'=1
    = qui gen cdfw5=1
    - summ `z`x'' if `touse', mean
    = summ __00000N if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000N __000001 __000002 __000003 __000004 __000005 __000006 income
      tempname xn loc lof
      local xn = substr("`x'",2,1)
      if `xn'==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
      else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
      quietly predict du`x'
      if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
      qui replace pdf`x'= normalden(du`x')
      qui replace cdf`x'= normal(du`x')
      }
      local pdf `pdf' pdf`x'
      local cdf `cdf' cdf`x'
      local du `du' `du`x''
      }
      }
    ------------------------------------------------------------------ end quaidsce.Estimate ---
  ----------------------------------------------------------------------------- end quaidsce ---
r(2000);

end of do-file

r(2000);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. webuse food, clear
  ----------------------------------------------------------------------------- begin webuse ---
  - version 8
  - if `"`0'"' == "" {
  = if `"food, clear"' == "" {
    error 198
    }
  - gettoken sub : 0, parse(" ,") quotes
  - if `"`sub'"'=="set" | `"`sub'"'=="query" {
  = if `"food"'=="set" | `"food"'=="query" {
    gettoken sub 0 : 0, parse(" ,")
    if "`sub'"=="set" {
    Set `0'
    }
    else Query `0'
    exit
    }
  - local 0 `"using `0'"'
  = local 0 `"using food, clear"'
  - syntax using/ [, CLEAR noLabel]
  - GetDefault prefix
    ---------------------------------------------------------------- begin webuse.GetDefault ---
    - args d
    - if `"$S_WEB"'=="" {
    = if `""'=="" {
    - c_local `d' "https://www.stata-press.com/data/r16"
    = c_local prefix "https://www.stata-press.com/data/r16"
    - }
    - else c_local `d' `"$S_WEB"'
    = else c_local prefix `""'
    ------------------------------------------------------------------ end webuse.GetDefault ---
  - capture noisily use `"`prefix'/`using'"', `clear' `label'
  = capture noisily use `"https://www.stata-press.com/data/r16/food"', clear 
  - if _rc==0 {
  - if (strlower(substr(`"`using'"',-4,.))!=".dta") {
  = if (strlower(substr(`"food"',-4,.))!=".dta") {
  - local using `"`using'.dta"'
  = local using `"food.dta"'
  - }
  - capture window menu add_recentfiles `"`prefix'/`using'"', rlevel(1)
  = capture window menu add_recentfiles `"https://www.stata-press.com/data/r16/food.dta"', rleve
> l(1)
  - }
  - else {
    exit _rc
    }
  ------------------------------------------------------------------------------- end webuse ---

. program drop _all

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. foreach i of numlist 1/4 {
  2. gen aux = cond(runiform() < 0.2, 0, 1)
  3. replace w`i'=0 if aux==0
  4. drop aux 
  5. }
- foreach i of numlist 1/4 {
- gen aux = cond(runiform() < 0.2, 0, 1)
- replace w`i'=0 if aux==0
= replace w1=0 if aux==0
(784 real changes made)
- drop aux
- }
- gen aux = cond(runiform() < 0.2, 0, 1)
- replace w`i'=0 if aux==0
= replace w2=0 if aux==0
(845 real changes made)
- drop aux
- }
- gen aux = cond(runiform() < 0.2, 0, 1)
- replace w`i'=0 if aux==0
= replace w3=0 if aux==0
(806 real changes made)
- drop aux
- }
- gen aux = cond(runiform() < 0.2, 0, 1)
- replace w`i'=0 if aux==0
= replace w4=0 if aux==0
(805 real changes made)
- drop aux
- }

. 
. gen w5=1-w1-w2-w3-w4

. replace w5=0 if w5<0.0001
(1,497 real changes made)

. gen p5=0.5*p1+0.5*p3+exp(rnormal())

. gen lnp5=ln(p5)

. 
. set seed 1

. gen nkids = int(runiform()*4)

. gen rural = (runiform() > 0.2)

. gen income = exp(rnormal())+exp(rnormal())

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1 w2 w3 w4 w5, anot(10) prices(p1 p2 p3 p4 p5) expenditure(expfd) nolog demographics
> (income) noquadratic method(nls) 
  --------------------------------------------------------------------------- begin quaidsce ---
  - version 12
  - if replay() {
    if "`e(cmd)'" != "quaidsce" {
    error 301
    }
    Display `0'
    exit
    }
  - Estimate `0'
  = Estimate w1 w2 w3 w4 w5, anot(10) prices(p1 p2 p3 p4 p5) expenditure(expfd) nolog demographi
> cs(income) noquadratic method(nls)
    ---------------------------------------------------------------- begin quaidsce.Estimate ---
    - version 12
    - syntax varlist [if] [in] , ANOT(real) [ LNEXPenditure(varlist min=1 max=1 numeric) EXPendi
> ture(varlist min=1 max=1 numeric) PRices(varlist numeric) LNPRices(varlist numeric) DEMOgraphi
> cs(varlist numeric) noQUadratic noCEnsor INITial(name) noLOg Level(cilevel) VCE(passthru) Meth
> od(name) * ]
    - local shares `varlist'
    = local shares w1 w2 w3 w4 w5
    - if "`options'" != "" {
    = if "" != "" {
      di as error "`options' not allowed"
      exit 198
      }
    - if "`prices'" != "" & "`lnprices'" != "" {
    = if "p1 p2 p3 p4 p5" != "" & "" != "" {
      di as error "cannot specify both {cmd:prices()} and " as error "{cmd:lnprices()}"
      exit 198
      }
    - if "`prices'`lnprices'" == "" {
    = if "p1 p2 p3 p4 p5" == "" {
      di as error "must specify {cmd:prices()} or {cmd:lnprices()}"
      exit 198
      }
    - if "`expenditure'" != "" & "`lnexpenditure'" != "" {
    = if "expfd" != "" & "" != "" {
      di as error "cannot specify both {cmd:expenditure()} " as error "and {cmd:lnexpenditure()}
> "
      exit 198
      }
    - if "`expenditure'`lnexpenditure'" == "" {
    = if "expfd" == "" {
      di as error "must specify {cmd:expenditure()} or {cmd:lnexpenditure()}"
      exit 198
      }
    - local neqn : word count `shares'
    = local neqn : word count w1 w2 w3 w4 w5
    - if `neqn' < 3 {
    = if 5 < 3 {
      di as error "must specify at least 3 expenditure shares"
      exit 498
      }
    - if `=`:word count `prices'' + `:word count `lnprices''' != `neqn' {
    = if 5 != 5 {
      if "`prices'" != "" {
      di as error "number of price variables must " as error "equal number of equations " as err
> or "(`neqn')"
      }
      else {
      di as error "number of log price variables " as error "must equal number of " as error "eq
> uations (`neqn')"
      }
      exit 498
      }
    - marksample touse
    - markout `touse' `prices' `lnprices' `demographics'
    = markout __000000 p1 p2 p3 p4 p5  income
    - markout `touse' `expenditure' `lnexpenditure'
    = markout __000000 expfd 
    - local i 1
    - while (`i' < `neqn') {
    = while (1 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2  w1
    - local `++i'
    = local 2
    - }
    - while (`i' < `neqn') {
    = while (2 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2
    - local `++i'
    = local 3
    - }
    - while (`i' < `neqn') {
    = while (3 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3
    - local `++i'
    = local 4
    - }
    - while (`i' < `neqn') {
    = while (4 < 5) {
    - local shares2 `shares2' `:word `i' of `shares''
    = local shares2 w1 w2 w3 w4
    - local `++i'
    = local 5
    - }
    - while (`i' < `neqn') {
    = while (5 < 5) {
      local shares2 `shares2' `:word `i' of `shares''
      local `++i'
      }
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      tempvar sumw
      egen double `sumw' = rsum(`shares') if `touse'
      cap assert reldif(`sumw', 1) < 1e-4 if `touse'
      if _rc {
      di as error "expenditure shares do not sum to one"
      exit 499
      }
      }
    - if "`prices'" != "" {
    = if "p1 p2 p3 p4 p5" != "" {
    - local usrprices 1
    - local lnprices
    - foreach x of varlist `prices' {
    = foreach x of varlist p1 p2 p3 p4 p5 {
    - summ `x' if `touse', mean
    = summ p1 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp1
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000001 = ln(p1) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices  __000001
    - }
    - summ `x' if `touse', mean
    = summ p2 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp2
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000002 = ln(p2) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002
    - }
    - summ `x' if `touse', mean
    = summ p3 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp3
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000003 = ln(p3) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003
    - }
    - summ `x' if `touse', mean
    = summ p4 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp4
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000004 = ln(p4) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004
    - }
    - summ `x' if `touse', mean
    = summ p5 if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for `x' found"
      exit 499
      }
    - tempvar ln`x'
    = tempvar lnp5
    - qui gen double `ln`x'' = ln(`x') if `touse'
    = qui gen double __000005 = ln(p5) if __000000
    - local lnprices `lnprices' `ln`x''
    = local lnprices __000001 __000002 __000003 __000004 __000005
    - }
    - }
    - if "`expenditure'" != "" {
    = if "expfd" != "" {
    - local usrexpenditure 1
    - summ `expenditure' if `touse', mean
    = summ expfd if __000000, mean
    - if r(min) <= 0 {
      di as error "nonpositive value(s) for " as error "`expenditure' found"
      exit 499
      }
    - tempvar lnexp
    - qui gen double `lnexp' = ln(`expenditure') if `touse'
    = qui gen double __000006 = ln(expfd) if __000000
    - local lnexpenditure `lnexp'
    = local lnexpenditure __000006
    - }
    - if "`quadratic'" == "noquadratic" {
    = if "noquadratic" == "noquadratic" {
    - local np = 2*(`neqn'-1) + `neqn'*(`neqn'-1)/2
    = local np = 2*(5-1) + 5*(5-1)/2
    - local np2 = 2*(`neqn') + `neqn'*(`neqn'-1)/2
    = local np2 = 2*(5) + 5*(5-1)/2
    - }
    - else {
      local np = 3*(`neqn'-1) + `neqn'*(`neqn'-1)/2
      local np2 = 3*(`neqn') + `neqn'*(`neqn'-1)/2
      }
    - if "`demographics'" == "" {
    = if "income" == "" {
      local demos "nodemos"
      local demoopt ""
      local ndemos = 0
      }
    - else {
    - local demos ""
    - local demoopt "demographics(`demographics')"
    = local demoopt "demographics(income)"
    - local ndemos : word count `demographics'
    = local ndemos : word count income
    - local np = `np' + `ndemos'*(`neqn'-1) + `ndemos'
    = local np = 18 + 1*(5-1) + 1
    - local np2 = `np2' + `ndemos'*(`neqn'-1) + `ndemos'
    = local np2 = 20 + 1*(5-1) + 1
    - }
    - if "`initial'" != "" {
    = if "" != "" {
      local rf = rowsof(`initial')
      local cf = colsof(`initial')
      if `rf' != 1 | `cf' != `np' {
      di "Initial vector must be 1 x `np'"
      exit 503
      }
      else {
      local initialopt initial(`initial')
      }
      }
    - if "`method'" == "" {
    = if "nls" == "" {
      local estimator "ifgnls"
      }
    - else {
    - local estimator `method'
    = local estimator nls
    - }
    - local pdf
    - local cdf
    - capture drop cdf??
    - capture drop pdf??
    - capture drop du??
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      foreach x of varlist `shares2' {
      qui gen pdf`x'=0
      qui gen cdf`x'=1
      local pdf `pdf' pdf`x'
      local cdf `cdf' cdf`x'
      }
      }
    - else {
    - local np_prob : word count `lnprices' `lnexp' `demographics' intercept
    = local np_prob : word count __000001 __000002 __000003 __000004 __000005 __000006 income in
> tercept
    - local nprob M `demographics' cons
    = local nprob M income cons
    - mat tau=J(1,`np_prob',0)
    = mat tau=J(1,8,0)
    - mat setau=J(`np_prob'*`neqn',`np_prob'*`neqn',0)
    = mat setau=J(8*5,8*5,0)
    - foreach x of varlist `shares' {
    = foreach x of varlist w1 w2 w3 w4 w5 {
    - summ `x' if `touse', mean
    = summ w1 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw1
    - local pdf`x'
    = local pdfw1
    - local cdf`x'
    = local cdfw1
    - local du`x'
    = local duw1
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __000007 = 1 if w1 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __000007 = 0 if w1 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw1=0
    - qui gen cdf`x'=1
    = qui gen cdfw1=1
    - summ `z`x'' if `touse', mean
    = summ __000007 if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __000007 __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w1",2,1)
    - if `xn'==1 {
    = if 1==1 {
    - mat tau= e(b)'
    - mat setau[1,1]= e(V)
    - }
    - else {
      mat tau=tau \ e(b)'
      local loc = `np_prob'*(`xn'-1)+1
      mat setau[`loc',`loc'] = e(V)
      }
    - quietly predict du`x'
    = quietly predict duw1
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw1= normalden(duw1)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw1= normal(duw1)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf  pdfw1
    - local cdf `cdf' cdf`x'
    = local cdf  cdfw1
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w2 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw2
    - local pdf`x'
    = local pdfw2
    - local cdf`x'
    = local cdfw2
    - local du`x'
    = local duw2
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000B = 1 if w2 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000B = 0 if w2 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw2=0
    - qui gen cdf`x'=1
    = qui gen cdfw2=1
    - summ `z`x'' if `touse', mean
    = summ __00000B if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000B __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w2",2,1)
    - if `xn'==1 {
    = if 2==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(2-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[9,9] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw2
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw2= normalden(duw2)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw2= normal(duw2)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w3 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw3
    - local pdf`x'
    = local pdfw3
    - local cdf`x'
    = local cdfw3
    - local du`x'
    = local duw3
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000F = 1 if w3 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000F = 0 if w3 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw3=0
    - qui gen cdf`x'=1
    = qui gen cdfw3=1
    - summ `z`x'' if `touse', mean
    = summ __00000F if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000F __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w3",2,1)
    - if `xn'==1 {
    = if 3==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(3-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[17,17] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw3
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw3= normalden(duw3)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw3= normal(duw3)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w4 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw4
    - local pdf`x'
    = local pdfw4
    - local cdf`x'
    = local cdfw4
    - local du`x'
    = local duw4
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000J = 1 if w4 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000J = 0 if w4 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw4=0
    - qui gen cdf`x'=1
    = qui gen cdfw4=1
    - summ `z`x'' if `touse', mean
    = summ __00000J if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000J __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w4",2,1)
    - if `xn'==1 {
    = if 4==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(4-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[25,25] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw4
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw4= normalden(duw4)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw4= normal(duw4)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4
    - local du `du' `du`x''
    = local du  
    - }
    - summ `x' if `touse', mean
    = summ w5 if __000000, mean
    - if r(min) > 0 {
      di as error "noncensoring for `x' found"
      exit 499
      }
    - tempvar z`x'
    = tempvar zw5
    - local pdf`x'
    = local pdfw5
    - local cdf`x'
    = local cdfw5
    - local du`x'
    = local duw5
    - qui gen double `z`x'' = 1 if `x' > 0 & `touse'
    = qui gen double __00000N = 1 if w5 > 0 & __000000
    - qui replace `z`x'' = 0 if `x' == 0 & `touse'
    = qui replace __00000N = 0 if w5 == 0 & __000000
    - qui gen pdf`x'=0
    = qui gen pdfw5=0
    - qui gen cdf`x'=1
    = qui gen cdfw5=1
    - summ `z`x'' if `touse', mean
    = summ __00000N if __000000, mean
    - if r(min) == 0 {
    - qui probit `z`x'' `lnprices' `lnexp' `demographics'
    = qui probit __00000N __000001 __000002 __000003 __000004 __000005 __000006 income
    - tempname xn loc lof
    - local xn = substr("`x'",2,1)
    = local xn = substr("w5",2,1)
    - if `xn'==1 {
    = if 5==1 {
      mat tau= e(b)'
      mat setau[1,1]= e(V)
      }
    - else {
    - mat tau=tau \ e(b)'
    - local loc = `np_prob'*(`xn'-1)+1
    = local loc = 8*(5-1)+1
    - mat setau[`loc',`loc'] = e(V)
    = mat setau[33,33] = e(V)
    - }
    - quietly predict du`x'
    = quietly predict duw5
    - if e(N) < _N {
      di as error "at least one variable completely predicts probit outcome, check your data"
      exit 499
      }
    - qui replace pdf`x'= normalden(du`x')
    = qui replace pdfw5= normalden(duw5)
    - qui replace cdf`x'= normal(du`x')
    = qui replace cdfw5= normal(duw5)
    - }
    - local pdf `pdf' pdf`x'
    = local pdf pdfw1 pdfw2 pdfw3 pdfw4 pdfw5
    - local cdf `cdf' cdf`x'
    = local cdf cdfw1 cdfw2 cdfw3 cdfw4 cdfw5
    - local du `du' `du`x''
    = local du  
    - }
    - }
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      local shares `shares2'
      local np2= `np'
      local neqn2=`=`neqn'-1'
      }
    - else {
    - local np2= `np2' + `neqn'
    = local np2= 25 + 5
    - local neqn2 `neqn'
    = local neqn2 5
    - }
    - nlsur __quaidsce @ `shares' if `touse', lnp(`lnprices') lnexp(`lnexpenditure') cdfi(`cdf')
>  pdfi(`pdf') a0(`anot') nparam(`np2') neq(`neqn2') `estimator' noeqtab nocoeftab `quadratic' `
> options' `censor' `demoopt' `initialopt' `log' `vce'
    = nlsur __quaidsce @ w1 w2 w3 w4 w5 if __000000, lnp(__000001 __000002 __000003 __000004 __0
> 00005) lnexp(__000006) cdfi(cdfw1 cdfw2 cdfw3 cdfw4 cdfw5) pdfi(pdfw1 pdfw2 pdfw3 pdfw4 pdfw5)
>  a0(10) nparam(30) neq(5) nls noeqtab nocoeftab noquadratic   demographics(income)  nolog 
(obs = 4,048)
Calculating NLS estimates...
    - if "`censor'" == "nocensor" {
    = if "" == "nocensor" {
      capture drop cdf?? pdf??
      }
    - tempname b bfull V Vfull Delta aux auxt Vfullc bfullc
    - mat `b' = e(b)
    = mat __00000R = e(b)
    - mat `V' = e(V)
    = mat __00000T = e(V)
    - mata:_quaidsce__fullvector("`b'", `neqn', "`quadratic'", `ndemos', "`bfull'", "`censor'")
    = mata:_quaidsce__fullvector("__00000R", 5, "noquadratic", 1, "__00000S", "")
    - mata:_quaidsce__delta(`neqn', "`quadratic'", "`censor'", `ndemos', "`Delta'")
    = mata:_quaidsce__delta(5, "noquadratic", "", 1, "__00000V")
    - mat `Vfull' = `Delta'*`V'*`Delta''
    = mat __00000U = __00000V*__00000T*__00000V'
    - if "`censor'" == "" {
    = if "" == "" {
    - mat `bfullc' = `bfull' , tau'
    = mat __00000Z = __00000S , tau'
    - mat `aux' = J(rowsof(`Vfull'),rowsof(setau),0)
    = mat __00000W = J(rowsof(__00000U),rowsof(setau),0)
    - mat `auxt' = J(rowsof(setau),rowsof(`Vfull'),0)
    = mat __00000X = J(rowsof(setau),rowsof(__00000U),0)
    - mat `auxt' = `auxt' , setau
    = mat __00000X = __00000X , setau
    - mat `aux' = `Vfull' , `aux'
    = mat __00000W = __00000U , __00000W
    - mat `Vfullc' = `aux' \ `auxt'
    = mat __00000Y = __00000W \ __00000X
    - }
    - else {
      mat `bfullc' = `bfull'
      mat `Vfullc' = `Vfull'
      }
    - forvalues i = 1/`neqn' {
    = forvalues i = 1/5 {
    - local namestripe `namestripe' alpha:alpha_`i'
    = local namestripe  alpha:alpha_1
    - }
    - local namestripe `namestripe' alpha:alpha_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2
    - }
    - local namestripe `namestripe' alpha:alpha_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3
    - }
    - local namestripe `namestripe' alpha:alpha_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4
    - }
    - local namestripe `namestripe' alpha:alpha_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5
    - }
    - forvalues i = 1/`neqn' {
    = forvalues i = 1/5 {
    - local namestripe `namestripe' beta:beta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1
    - }
    - local namestripe `namestripe' beta:beta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2
    - }
    - local namestripe `namestripe' beta:beta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3
    - }
    - local namestripe `namestripe' beta:beta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4
    - }
    - local namestripe `namestripe' beta:beta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5
    - }
    - forvalues j = 1/`neqn' {
    = forvalues j = 1/5 {
    - forvalues i = `j'/`neqn' {
    = forvalues i = 1/5 {
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1
    - }
    - }
    - forvalues i = `j'/`neqn' {
    = forvalues i = 2/5 {
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2
    - }
    - }
    - forvalues i = `j'/`neqn' {
    = forvalues i = 3/5 {
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3
    - }
    - }
    - forvalues i = `j'/`neqn' {
    = forvalues i = 4/5 {
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4
    - }
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4
    - }
    - }
    - forvalues i = `j'/`neqn' {
    = forvalues i = 5/5 {
    - local namestripe `namestripe' gamma:gamma_`i'_`j'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5
    - }
    - }
    - if "`quadratic'" == "" {
    = if "noquadratic" == "" {
      forvalues i = 1/`neqn' {
      local namestripe `namestripe' lambda:lambda_`i'
      }
      }
    - if "`censor'" == "" {
    = if "" == "" {
    - forvalues i = 1/`neqn' {
    = forvalues i = 1/5 {
    - local namestripe `namestripe' delta:delta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1
    - }
    - local namestripe `namestripe' delta:delta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2
    - }
    - local namestripe `namestripe' delta:delta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3
    - }
    - local namestripe `namestripe' delta:delta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4
    - }
    - local namestripe `namestripe' delta:delta_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5
    - }
    - }
    - if `ndemos' > 0 {
    = if 1 > 0 {
    - foreach var of varlist `demographics' {
    = foreach var of varlist income {
    - forvalues i = 1/`neqn' {
    = forvalues i = 1/5 {
    - local namestripe `namestripe' eta:eta_`var'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1
    - }
    - local namestripe `namestripe' eta:eta_`var'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2
    - }
    - local namestripe `namestripe' eta:eta_`var'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3
    - }
    - local namestripe `namestripe' eta:eta_`var'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4
    - }
    - local namestripe `namestripe' eta:eta_`var'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5
    - }
    - }
    - foreach var of varlist `demographics' {
    = foreach var of varlist income {
    - local namestripe `namestripe' rho:rho_`var'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income
    - }
    - }
    - if "`censor'" == "" {
    = if "" == "" {
    - forvalues i = 1/`neqn' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`neqn' {
    = forvalues j = 1/5 {
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1
    - }
    - foreach x in `nprob' {
    = foreach x in M income cons {
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1
    - }
    - }
    - forvalues j = 1/`neqn' {
    = forvalues j = 1/5 {
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2
    - }
    - foreach x in `nprob' {
    = foreach x in M income cons {
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2
    - }
    - }
    - forvalues j = 1/`neqn' {
    = forvalues j = 1/5 {
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3
    - }
    - foreach x in `nprob' {
    = foreach x in M income cons {
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3
    - }
    - }
    - forvalues j = 1/`neqn' {
    = forvalues j = 1/5 {
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4
    - }
    - foreach x in `nprob' {
    = foreach x in M income cons {
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4
    - }
    - }
    - forvalues j = 1/`neqn' {
    = forvalues j = 1/5 {
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4 tau:p1_5
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4 tau:p1_5 tau:p2_5
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5 tau:p4_5
    - }
    - local namestripe `namestripe' tau:p`j'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5 tau:p4_5 tau:p5_5
    - }
    - foreach x in `nprob' {
    = foreach x in M income cons {
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5 tau:p4_5 tau:p5_5 tau:M_5
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5 tau:p4_5 tau:p5_5 tau:M_5 tau:income_5
    - }
    - local namestripe `namestripe' tau:`x'_`i'
    = local namestripe alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alpha_5 bet
> a:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_1 gamma
> :gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_4_2 gam
> ma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamma_5_4 g
> amma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 eta:eta_i
> ncome_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_income tau
> :p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:p2_2 ta
> u:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau:p4_3 t
> au:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 tau:M_4 t
> au:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5 tau:p4_5 tau:p5_5 tau:M_5 tau:income_5 tau:c
> ons_5
    - }
    - }
    - }
    - mat colnames `bfullc' = `namestripe'
    = mat colnames __00000Z = alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alph
> a_5 beta:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_
> 1 gamma:gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_
> 4_2 gamma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamm
> a_5_4 gamma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 et
> a:eta_income_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_inc
> ome tau:p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:
> p2_2 tau:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau
> :p4_3 tau:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 ta
> u:M_4 tau:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5 tau:p4_5 tau:p5_5 tau:M_5 tau:income_
> 5 tau:cons_5
    - mat colnames `Vfullc' = `namestripe'
    = mat colnames __00000Y = alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alph
> a_5 beta:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_
> 1 gamma:gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_
> 4_2 gamma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamm
> a_5_4 gamma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 et
> a:eta_income_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_inc
> ome tau:p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:
> p2_2 tau:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau
> :p4_3 tau:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 ta
> u:M_4 tau:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5 tau:p4_5 tau:p5_5 tau:M_5 tau:income_
> 5 tau:cons_5
    - mat rownames `Vfullc' = `namestripe'
    = mat rownames __00000Y = alpha:alpha_1 alpha:alpha_2 alpha:alpha_3 alpha:alpha_4 alpha:alph
> a_5 beta:beta_1 beta:beta_2 beta:beta_3 beta:beta_4 beta:beta_5 gamma:gamma_1_1 gamma:gamma_2_
> 1 gamma:gamma_3_1 gamma:gamma_4_1 gamma:gamma_5_1 gamma:gamma_2_2 gamma:gamma_3_2 gamma:gamma_
> 4_2 gamma:gamma_5_2 gamma:gamma_3_3 gamma:gamma_4_3 gamma:gamma_5_3 gamma:gamma_4_4 gamma:gamm
> a_5_4 gamma:gamma_5_5 delta:delta_1 delta:delta_2 delta:delta_3 delta:delta_4 delta:delta_5 et
> a:eta_income_1 eta:eta_income_2 eta:eta_income_3 eta:eta_income_4 eta:eta_income_5 rho:rho_inc
> ome tau:p1_1 tau:p2_1 tau:p3_1 tau:p4_1 tau:p5_1 tau:M_1 tau:income_1 tau:cons_1 tau:p1_2 tau:
> p2_2 tau:p3_2 tau:p4_2 tau:p5_2 tau:M_2 tau:income_2 tau:cons_2 tau:p1_3 tau:p2_3 tau:p3_3 tau
> :p4_3 tau:p5_3 tau:M_3 tau:income_3 tau:cons_3 tau:p1_4 tau:p2_4 tau:p3_4 tau:p4_4 tau:p5_4 ta
> u:M_4 tau:income_4 tau:cons_4 tau:p1_5 tau:p2_5 tau:p3_5 tau:p4_5 tau:p5_5 tau:M_5 tau:income_
> 5 tau:cons_5
    - tempname alpha beta gamma lambda delta eta rho ll
    - mata:_quaidsce__getcoefs("`b'", `neqn', "`quadratic'", "`censor'", `ndemos', "`alpha'", "`
> beta'", "`gamma'", "`lambda'", "`delta'", "`eta'", "`rho'")
    = mata:_quaidsce__getcoefs("__00000R", 5, "noquadratic", "", 1, "__000010", "__000011", "__0
> 00012", "__000013", "__000014", "__000015", "__000016")
    - scalar `ll' = e(ll)
    = scalar __000017 = e(ll)
    - local vcetype `e(vcetype)'
    = local vcetype 
    - local clustvar `e(clustvar)'
    = local clustvar 
    - local vcer `e(vce)'
    = local vcer gnr
    - local nclust `e(N_clust)'
    = local nclust 
    - qui count if `touse'
    = qui count if __000000
    - local capn = r(N)
    - eret post `bfullc' `Vfullc', esample(`touse')
    = eret post __00000Z __00000Y, esample(__000000)
    - eret matrix alpha = `alpha'
    = eret matrix alpha = __000010
    - eret matrix beta = `beta'
    = eret matrix beta = __000011
    - eret matrix gamma = `gamma'
    = eret matrix gamma = __000012
    - if "`quadratic'" == "" {
    = if "noquadratic" == "" {
      eret matrix lambda = `lambda'
      eret local quadratic "quadratic"
      }
    - else {
    - eret local quadratic "noquadratic"
    - }
    - if "`censor'" == "" {
    = if "" == "" {
    - eret matrix delta = `delta'
    = eret matrix delta = __000014
    - mat tau = tau'
    - eret matrix tau tau
    - eret local censor "censor"
    - }
    - else {
      eret local censor "nocensor"
      }
    - if `ndemos' > 0 {
    = if 1 > 0 {
    - eret matrix eta = `eta'
    = eret matrix eta = __000015
    - eret matrix rho = `rho'
    = eret matrix rho = __000016
    - eret local demographics `demographics'
    = eret local demographics income
    - eret scalar ndemos = `ndemos'
    = eret scalar ndemos = 1
    - }
    - else {
      eret scalar ndemos = 0
      }
    - eret scalar N = `capn'
    = eret scalar N = 4048
    - eret scalar ll = `ll'
    = eret scalar ll = __000017
    - eret scalar anot = `anot'
    = eret scalar anot = 10
    - eret scalar ngoods = `neqn'
    = eret scalar ngoods = 5
    - if "`usrprices'" != "" {
    = if "1" != "" {
    - eret local prices `prices'
    = eret local prices p1 p2 p3 p4 p5
    - }
    - else {
      eret local lnprices `lnprices'
      }
    - if "`usrexpenditure'" != "" {
    = if "1" != "" {
    - eret local expenditure `expenditure'
    = eret local expenditure expfd
    - }
    - else {
      eret local lnexpenditure `lnexpenditure'
      }
    - eret local lhs "`shares'"
    = eret local lhs "w1 w2 w3 w4 w5"
    - eret local demographics "`demographics'"
    = eret local demographics "income"
    - eret local vcetype `vcetype'
    = eret local vcetype 
    - eret local clustvar `clustvar'
    = eret local clustvar 
    - eret local vcer `vce'
    = eret local vcer 
    - if "`nclust'" != "" {
    = if "" != "" {
      eret scalar N_clust = `nclust'
      }
    - eret local predict "quaidsce_p"
    - eret local estat_cmd "quaidsce_estat"
    - eret local cmd "quaidsce"
    - Display, level(`level')
    = Display, level(95)

Censored Quadratic AIDS model
--------------------
Number of obs          =       4048
Number of demographics =          1
Alpha_0                =         10
Log-likelihood         =  23899.389

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
alpha        |
     alpha_1 |  -.1071668   .0320903    -3.34   0.001    -.1700627   -.0442709
     alpha_2 |   .2675221   .0232659    11.50   0.000     .2219217    .3131225
     alpha_3 |   .5012336   .0641803     7.81   0.000     .3754425    .6270248
     alpha_4 |   .5556664   .0222682    24.95   0.000     .5120216    .5993112
     alpha_5 |    .543002   .0379713    14.30   0.000     .4685796    .6174244
-------------+----------------------------------------------------------------
beta         |
      beta_1 |   .0187959   .0051486     3.65   0.000     .0087049    .0288869
      beta_2 |  -.0214258   .0037056    -5.78   0.000    -.0286885    -.014163
      beta_3 |  -.0026491   .0020022    -1.32   0.186    -.0065734    .0012752
      beta_4 |   .0058486   .0036187     1.62   0.106    -.0012439     .012941
      beta_5 |    -.00225   .0065499    -0.34   0.731    -.0150876    .0105875
-------------+----------------------------------------------------------------
gamma        |
   gamma_1_1 |   .1222193   .0097602    12.52   0.000     .1030896     .141349
   gamma_2_1 |  -.0422412     .00618    -6.84   0.000    -.0543538   -.0301285
   gamma_3_1 |  -.0435693   .0035215   -12.37   0.000    -.0504713   -.0366673
   gamma_4_1 |  -.0427585   .0054834    -7.80   0.000    -.0535057   -.0320112
   gamma_5_1 |   .0063497   .0067902     0.94   0.350    -.0069589    .0196583
   gamma_2_2 |   .0683606   .0071706     9.53   0.000     .0543065    .0824147
   gamma_3_2 |   .0072136   .0036858     1.96   0.050    -.0000104    .0144377
   gamma_4_2 |  -.0125703    .004576    -2.75   0.006    -.0215391   -.0036015
   gamma_5_2 |  -.0207628   .0052296    -3.97   0.000    -.0310125    -.010513
   gamma_3_3 |   .0491336   .0029113    16.88   0.000     .0434276    .0548396
   gamma_4_3 |  -.0106438   .0025583    -4.16   0.000    -.0156579   -.0056297
   gamma_5_3 |  -.0021341     .00318    -0.67   0.502    -.0083668    .0040985
   gamma_4_4 |   .0554936    .005588     9.93   0.000     .0445413    .0664459
   gamma_5_4 |   .0104789   .0048267     2.17   0.030     .0010188     .019939
   gamma_5_5 |   .0060683    .008451     0.72   0.473    -.0104954     .022632
-------------+----------------------------------------------------------------
delta        |
     delta_1 |   1.451752          .        .       .            .           .
     delta_2 |  -.2299098          .        .       .            .           .
     delta_3 |  -1.099361   .1786465    -6.15   0.000    -1.449502   -.7492208
     delta_4 |  -.6094138          .        .       .            .           .
     delta_5 |  -.6256147          .        .       .            .           .
-------------+----------------------------------------------------------------
eta          |
eta_income_1 |   -.000015   .0001606    -0.09   0.925    -.0003298    .0002997
eta_income_2 |  -.0000402   .0001228    -0.33   0.744    -.0002809    .0002005
eta_income_3 |  -.0001548   .0000633    -2.45   0.014    -.0002788   -.0000308
eta_income_4 |   -.000209   .0001233    -1.70   0.090    -.0004506    .0000326
eta_income_5 |    .000419   .0001809     2.32   0.021     .0000643    .0007736
-------------+----------------------------------------------------------------
rho          |
  rho_income |  -.0177426   1.63e-08 -1.1e+06   0.000    -.0177427   -.0177426
-------------+----------------------------------------------------------------
tau          |
        p1_1 |  -.0008546   .0709893    -0.01   0.990    -.1399911    .1382819
        p2_1 |    .017968   .0734144     0.24   0.807    -.1259216    .1618575
        p3_1 |  -.0205454   .0505113    -0.41   0.684    -.1195458    .0784549
        p4_1 |   -.102228   .0532126    -1.92   0.055    -.2065227    .0020667
        p5_1 |  -.0055527   .0508834    -0.11   0.913    -.1052824     .094177
         M_1 |  -.0036539    .039438    -0.09   0.926    -.0809509    .0736431
    income_1 |   .0050959   .0069136     0.74   0.461    -.0084545    .0186462
      cons_1 |   .8168392    .167684     4.87   0.000     .4881847    1.145494
        p1_2 |  -.0603486   .0685274    -0.88   0.379    -.1946598    .0739625
        p2_2 |    .099748    .071158     1.40   0.161    -.0397192    .2392151
        p3_2 |    .067747    .049244     1.38   0.169    -.0287695    .1642635
        p4_2 |  -.0491308   .0523419    -0.94   0.348    -.1517191    .0534574
        p5_2 |  -.0119006   .0500438    -0.24   0.812    -.1099846    .0861833
         M_2 |   .0515782   .0386764     1.33   0.182    -.0242261    .1273825
    income_2 |  -.0044922   .0065446    -0.69   0.492    -.0173195    .0083351
      cons_2 |   .6766641   .1644328     4.12   0.000     .3543817    .9989465
        p1_3 |   .0392463   .0691686     0.57   0.570    -.0963216    .1748143
        p2_3 |  -.2149576   .0719687    -2.99   0.003    -.3560137   -.0739016
        p3_3 |  -.0684354   .0500796    -1.37   0.172    -.1665897    .0297189
        p4_3 |  -.0108127   .0525061    -0.21   0.837    -.1137228    .0920974
        p5_3 |   .0412664   .0506968     0.81   0.416    -.0580976    .1406304
         M_3 |   .0189311   .0388155     0.49   0.626    -.0571458     .095008
    income_3 |  -.0048426   .0065003    -0.74   0.456     -.017583    .0078977
      cons_3 |    .558803   .1648873     3.39   0.001     .2356299    .8819761
        p1_4 |  -.0022143   .0703382    -0.03   0.975    -.1400747    .1356461
        p2_4 |  -.0244972   .0728647    -0.34   0.737    -.1673095     .118315
        p3_4 |   .0508755   .0500307     1.02   0.309    -.0471829    .1489339
        p4_4 |  -.0306516   .0535987    -0.57   0.567    -.1357031       .0744
        p5_4 |   .0537394   .0513871     1.05   0.296    -.0469775    .1544562
         M_4 |  -.0114365   .0391606    -0.29   0.770    -.0881898    .0653169
    income_4 |  -.0059305   .0065322    -0.91   0.364    -.0187334    .0068724
      cons_4 |   .8043087    .167457     4.80   0.000     .4760991    1.132518
        p1_5 |  -.0176705   .0618018    -0.29   0.775    -.1387999    .1034589
        p2_5 |   .0397381   .0642866     0.62   0.536    -.0862614    .1657376
        p3_5 |  -.0308773   .0444246    -0.70   0.487    -.1179479    .0561934
        p4_5 |   .0303323   .0471292     0.64   0.520    -.0620393    .1227039
        p5_5 |  -.0371914    .044829    -0.83   0.407    -.1250546    .0506719
         M_5 |   .0089292   .0349019     0.26   0.798    -.0594773    .0773357
    income_5 |   -.003109   .0059655    -0.52   0.602    -.0148011    .0085831
      cons_5 |   .3065806   .1481937     2.07   0.039     .0161262     .597035
------------------------------------------------------------------------------
    ------------------------------------------------------------------ end quaidsce.Estimate ---
  ----------------------------------------------------------------------------- end quaidsce ---

. 
end of do-file

. predict ww*
------------------------------------------------------------------------------ begin predict ---
- version 8.2, missing
- if "`e(cmd)'" == "rocreg" & "`e(predict)'" == "" {
= if "quaidsce" == "rocreg" & "quaidsce_p" == "" {
  di as err "predict not allowed after nonparametric ROC"
  exit 198
  }
- if "`e(mi)'"!="" & "`e(b)'"!="matrix" {
= if ""!="" & "matrix"!="matrix" {
  error 321
  }
- if _caller()<=5 | "`e(predict)'"=="" {
= if _caller()<=5 | "quaidsce_p"=="" {
  _predict `0'
  }
- else {
- local v : display string(_caller())
- version `v', missing
= version 16, missing
- `e(predict)' `0'
= quaidsce_p ww*
  ------------------------------------------------------------------------- begin quaidsce_p ---
  - version 12
  - if "`e(cmd)'" != "quaidsce" {
  = if "quaidsce" != "quaidsce" {
    exit 301
    }
  - syntax [anything(name = vlist id = "newvarlist")] [if] [in]
  - marksample touse
  - _stubstar2names `vlist', nvars(`=e(ngoods)')
  = _stubstar2names ww*, nvars(5)
    ------------------------------------------------------------------ begin _stubstar2names ---
    - version 9
    - syntax [anything(name=vlist)] [, nvars(integer 0) zero outcome SINGLEok noVERIFY noSUBComm
> and]
    - if "`outcome'" == "" {
    = if "" == "" {
    - local outcome equation
    - }
    - else if "`verify'" != "" {
    = else if "" != "" {
      di as err "options outcome and noverify may not be combined"
      exit 184
      }
    - if `"`vlist'"' == "" {
    = if `"ww*"' == "" {
      local 0
      syntax newvarlist
      exit 100
      }
    - if `nvars' <= 0 {
    = if 5 <= 0 {
      di as err "invalid number of variables specified"
      exit 198
      }
    - if index(`"`vlist'"',"*") {
    = if index(`"ww*"',"*") {
    - local stub 1
    - gettoken first vlist : vlist, match(par) bind
    - if index(`"`first'"',"*") {
    = if index(`"ww*"',"*") {
    - if ("`vlist'"!="") error 103
    = if (""!="") error 103
    - local type `c(type)'
    = local type float
    - local vlist `first'
    = local vlist ww*
    - }
    - else {
      tempvar newvar
      local 0 `first' `newvar'
      syntax newvarname
      local type `typlist'
      }
    - gettoken vlist rest : vlist, match(par) bind
    - if (`"`rest'"'!="" | `:word count `vlist''!=1) error 103
    = if (`""'!="" | 1!=1) error 103
    - if index("`vlist'","*") != `:length local vlist' {
    = if index("ww*","*") != 3 {
      di as err "{it:stub}{bf:*} incorrectly specified"
      exit 198
      }
    - local vlist = bsubstr("`vlist'",1,length("`vlist'")-1)
    = local vlist = bsubstr("ww*",1,length("ww*")-1)
    - local varlist
    - local typlist
    - if "`zero'" == "" {
    = if "" == "" {
    - local nlist "1/`nvars'"
    = local nlist "1/5"
    - }
    - else local nlist "0/`=`nvars'-1'"
    = else local nlist "0/4"
    - forval i = `nlist' {
    = forval i = 1/5 {
    - local varlist `varlist' `vlist'`i'
    = local varlist  ww1
    - local typlist `typlist' `type'
    = local typlist  float
    - }
    - local varlist `varlist' `vlist'`i'
    = local varlist ww1 ww2
    - local typlist `typlist' `type'
    = local typlist float float
    - }
    - local varlist `varlist' `vlist'`i'
    = local varlist ww1 ww2 ww3
    - local typlist `typlist' `type'
    = local typlist float float float
    - }
    - local varlist `varlist' `vlist'`i'
    = local varlist ww1 ww2 ww3 ww4
    - local typlist `typlist' `type'
    = local typlist float float float float
    - }
    - local varlist `varlist' `vlist'`i'
    = local varlist ww1 ww2 ww3 ww4 ww5
    - local typlist `typlist' `type'
    = local typlist float float float float float
    - }
    - confirm new var `varlist'
    = confirm new var ww1 ww2 ww3 ww4 ww5
    - }
    - else {
      if "`subcommand'" == "" {
      local oscmd ", or you can use the {bf:`outcome'()} option"
      local oscmd "`oscmd' and specify one variable at a time"
      }
      else {
      local oscmd ", or you can use the {it:stub}{bf:*}"
      local oscmd "`oscmd' notation"
      }
      local stub 0
      local 0 `"`vlist'"'
      syntax newvarlist
      if "`verify'" != "" {
      sreturn clear
      sreturn local varlist `varlist'
      sreturn local typlist `typlist'
      sreturn local stub `stub'
      exit
      }
      local kvars : word count `varlist'
      if `kvars' != `nvars' {
      if `kvars' == 1 {
      if "`singleok'" == "" {
      local problem 1
      }
      else local problem 0
      }
      else local problem 1
      if `problem' {
      capture noisily syntax newvarlist(min=`nvars' max=`nvars')
      if `nvars' > 1 & "`e(depvar)'" != "" {
      if "`e(cmd)'" != "" {
      local for "for {bf:`e(cmd)'} "
      }
      di as err "{p 4 4 2}The current " "estimation results `for'have " "`nvars' `outcome's so y
> ou must " "specify `nvars' new " "variables`oscmd'.{p_end}"
      }
      exit c(rc)
      }
      }
      }
    - sreturn clear
    - sreturn local varlist `varlist'
    = sreturn local varlist ww1 ww2 ww3 ww4 ww5
    - sreturn local typlist `typlist'
    = sreturn local typlist float float float float float
    - sreturn local stub `stub'
    = sreturn local stub 1
    -------------------------------------------------------------------- end _stubstar2names ---
  - local vars `s(varlist)'
  = local vars ww1 ww2 ww3 ww4 ww5
  - if `s(stub)' {
  = if 1 {
  - local vars ""
  - local vlist : subinstr local vlist "*" ""
  - forvalues i = 1/`=e(ngoods)' {
  = forvalues i = 1/5 {
  - local vars `vars' `vlist'_`i'
  = local vars  ww_1
  - }
  - local vars `vars' `vlist'_`i'
  = local vars ww_1 ww_2
  - }
  - local vars `vars' `vlist'_`i'
  = local vars ww_1 ww_2 ww_3
  - }
  - local vars `vars' `vlist'_`i'
  = local vars ww_1 ww_2 ww_3 ww_4
  - }
  - local vars `vars' `vlist'_`i'
  = local vars ww_1 ww_2 ww_3 ww_4 ww_5
  - }
  - }
  - forvalues i = 1/`=e(ngoods)' {
  = forvalues i = 1/5 {
  - local v : word `i' of `vars'
  = local v : word 1 of ww_1 ww_2 ww_3 ww_4 ww_5
  - tempvar vlist_`i'
  = tempvar vlist_1
  - gen `v' =0
  = gen ww_1 =0
  - lab var `v' "Predicted expenditure share: good `i'"
  = lab var ww_1 "Predicted expenditure share: good 1"
    ------------------------------------------------------------------------------ begin lab ---
    - label `0'
    = label var ww_1 "Predicted expenditure share: good 1"
    -------------------------------------------------------------------------------- end lab ---
  - }
  - local v : word `i' of `vars'
  = local v : word 2 of ww_1 ww_2 ww_3 ww_4 ww_5
  - tempvar vlist_`i'
  = tempvar vlist_2
  - gen `v' =0
  = gen ww_2 =0
  - lab var `v' "Predicted expenditure share: good `i'"
  = lab var ww_2 "Predicted expenditure share: good 2"
    ------------------------------------------------------------------------------ begin lab ---
    - label `0'
    = label var ww_2 "Predicted expenditure share: good 2"
    -------------------------------------------------------------------------------- end lab ---
  - }
  - local v : word `i' of `vars'
  = local v : word 3 of ww_1 ww_2 ww_3 ww_4 ww_5
  - tempvar vlist_`i'
  = tempvar vlist_3
  - gen `v' =0
  = gen ww_3 =0
  - lab var `v' "Predicted expenditure share: good `i'"
  = lab var ww_3 "Predicted expenditure share: good 3"
    ------------------------------------------------------------------------------ begin lab ---
    - label `0'
    = label var ww_3 "Predicted expenditure share: good 3"
    -------------------------------------------------------------------------------- end lab ---
  - }
  - local v : word `i' of `vars'
  = local v : word 4 of ww_1 ww_2 ww_3 ww_4 ww_5
  - tempvar vlist_`i'
  = tempvar vlist_4
  - gen `v' =0
  = gen ww_4 =0
  - lab var `v' "Predicted expenditure share: good `i'"
  = lab var ww_4 "Predicted expenditure share: good 4"
    ------------------------------------------------------------------------------ begin lab ---
    - label `0'
    = label var ww_4 "Predicted expenditure share: good 4"
    -------------------------------------------------------------------------------- end lab ---
  - }
  - local v : word `i' of `vars'
  = local v : word 5 of ww_1 ww_2 ww_3 ww_4 ww_5
  - tempvar vlist_`i'
  = tempvar vlist_5
  - gen `v' =0
  = gen ww_5 =0
  - lab var `v' "Predicted expenditure share: good `i'"
  = lab var ww_5 "Predicted expenditure share: good 5"
    ------------------------------------------------------------------------------ begin lab ---
    - label `0'
    = label var ww_5 "Predicted expenditure share: good 5"
    -------------------------------------------------------------------------------- end lab ---
  - }
  - if "`e(lnprices)'" != "" {
  = if "" != "" {
    local i 1
    foreach var of varlist `e(lnprices)' {
    local lnp`i' `var'
    local `++i'
    }
    }
  - else {
  - local i 1
  - foreach var of varlist `e(prices)' {
  = foreach var of varlist p1 p2 p3 p4 p5 {
  - tempvar lnp`i'
  = tempvar lnp1
  - gen double `lnp`i'' = ln(`var')
  = gen double __000006 = ln(p1)
  - local `++i'
  = local 2
  - }
  - tempvar lnp`i'
  = tempvar lnp2
  - gen double `lnp`i'' = ln(`var')
  = gen double __000007 = ln(p2)
  - local `++i'
  = local 3
  - }
  - tempvar lnp`i'
  = tempvar lnp3
  - gen double `lnp`i'' = ln(`var')
  = gen double __000008 = ln(p3)
  - local `++i'
  = local 4
  - }
  - tempvar lnp`i'
  = tempvar lnp4
  - gen double `lnp`i'' = ln(`var')
  = gen double __000009 = ln(p4)
  - local `++i'
  = local 5
  - }
  - tempvar lnp`i'
  = tempvar lnp5
  - gen double `lnp`i'' = ln(`var')
  = gen double __00000A = ln(p5)
  - local `++i'
  = local 6
  - }
  - }
  - if "`e(lnexpenditure)'" != "" {
  = if "" != "" {
    local lnexp `e(lnexpenditure)'
    }
  - else {
  - tempvar exp
  - gen double `exp' = ln(`e(expenditure)')
  = gen double __00000B = ln(expfd)
  - local lnexp `exp'
  = local lnexp __00000B
  - }
  - local ndemo = `e(ndemos)'
  = local ndemo = 1
  - if `ndemo' > 0 {
  = if 1 > 0 {
  - foreach var of varlist `e(demographics)' {
  = foreach var of varlist income {
  - tempvar d_`var'
  = tempvar d_income
  - gen double `d_`var'' = `var'
  = gen double __00000C = income
  - }
  - }
  - if "`e(lhs)'" != "" {
  = if "w1 w2 w3 w4 w5" != "" {
  - local i 1
  - foreach var of varlist `e(lhs)' {
  = foreach var of varlist w1 w2 w3 w4 w5 {
  - local w`i' `var'
  = local w1 w1
  - local `++i'
  = local 2
  - }
  - local w`i' `var'
  = local w2 w2
  - local `++i'
  = local 3
  - }
  - local w`i' `var'
  = local w3 w3
  - local `++i'
  = local 4
  - }
  - local w`i' `var'
  = local w4 w4
  - local `++i'
  = local 5
  - }
  - local w`i' `var'
  = local w5 w5
  - local `++i'
  = local 6
  - }
  - }
  - tempname alpha beta gamma lambda delta eta rho tau
  - mat alpha = e(alpha)
  - mat beta = e(beta)
  - mat gamma = e(gamma)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    mat lambda = e(lambda)
    }
  - local ndemo = `e(ndemos)'
  = local ndemo = 1
  - if `ndemo' > 0 {
  = if 1 > 0 {
  - mat eta = e(eta)
  - mat rho = e(rho)
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - mat delta = e(delta)
  - mat tau = e(tau)
  - }
  - tempname lnpindex
  - gen `lnpindex'= `e(anot)'
  = gen __00000L= 10
  - forvalue i=1/`=e(ngoods)' {
  = forvalue i=1/5 {
  - replace `lnpindex'= `lnpindex' + alpha[1,`i']*`lnp`i''
  = replace __00000L= __00000L + alpha[1,1]*__000006
(4,046 real changes made)
  - forvalue j=1/`e(ngoods)' {
  = forvalue j=1/5 {
  - if `j'>=`i' {
  = if 1>=1 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[1,1]*(__000006*__000006))
(4,039 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 2>=1 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[2,1]*(__000006*__000007))
(4,044 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 3>=1 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[3,1]*(__000006*__000008))
(4,036 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 4>=1 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[4,1]*(__000006*__000009))
(4,044 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 5>=1 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,1]*(__000006*__00000A))
(4,045 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - }
  - replace `lnpindex'= `lnpindex' + alpha[1,`i']*`lnp`i''
  = replace __00000L= __00000L + alpha[1,2]*__000007
(4,046 real changes made)
  - forvalue j=1/`e(ngoods)' {
  = forvalue j=1/5 {
  - if `j'>=`i' {
  = if 1>=2 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[2,1]*(__000007*__000006))
(4,044 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 2>=2 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[2,2]*(__000007*__000007))
(4,043 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 3>=2 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[3,2]*(__000007*__000008))
(4,036 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 4>=2 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[4,2]*(__000007*__000009))
(4,044 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 5>=2 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,2]*(__000007*__00000A))
(4,046 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - }
  - replace `lnpindex'= `lnpindex' + alpha[1,`i']*`lnp`i''
  = replace __00000L= __00000L + alpha[1,3]*__000008
(4,038 real changes made)
  - forvalue j=1/`e(ngoods)' {
  = forvalue j=1/5 {
  - if `j'>=`i' {
  = if 1>=3 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[3,1]*(__000008*__000006))
(4,036 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 2>=3 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[3,2]*(__000008*__000007))
(4,036 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 3>=3 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[3,3]*(__000008*__000008))
(4,023 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 4>=3 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[4,3]*(__000008*__000009))
(4,036 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 5>=3 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,3]*(__000008*__00000A))
(4,037 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - }
  - replace `lnpindex'= `lnpindex' + alpha[1,`i']*`lnp`i''
  = replace __00000L= __00000L + alpha[1,4]*__000009
(4,046 real changes made)
  - forvalue j=1/`e(ngoods)' {
  = forvalue j=1/5 {
  - if `j'>=`i' {
  = if 1>=4 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[4,1]*(__000009*__000006))
(4,044 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 2>=4 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[4,2]*(__000009*__000007))
(4,044 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 3>=4 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[4,3]*(__000009*__000008))
(4,036 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 4>=4 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[4,4]*(__000009*__000009))
(4,039 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - if `j'>=`i' {
  = if 5>=4 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,4]*(__000009*__00000A))
(4,046 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - }
  - replace `lnpindex'= `lnpindex' + alpha[1,`i']*`lnp`i''
  = replace __00000L= __00000L + alpha[1,5]*__00000A
(4,048 real changes made)
  - forvalue j=1/`e(ngoods)' {
  = forvalue j=1/5 {
  - if `j'>=`i' {
  = if 1>=5 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,1]*(__00000A*__000006))
(4,045 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 2>=5 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,2]*(__00000A*__000007))
(4,046 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 3>=5 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,3]*(__00000A*__000008))
(4,037 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 4>=5 {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
    }
  - else {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,4]*(__00000A*__000009))
(4,046 real changes made)
  - }
  - }
  - if `j'>=`i' {
  = if 5>=5 {
  - replace `lnpindex'= `lnpindex' + 0.5*(gamma[`j',`i']*(`lnp`i''*`lnp`j''))
  = replace __00000L= __00000L + 0.5*(gamma[5,5]*(__00000A*__00000A))
(4,046 real changes made)
  - }
  - else {
    replace `lnpindex'= `lnpindex' + 0.5*(gamma[`i',`j']*(`lnp`i''*`lnp`j''))
    }
  - }
  - }
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    tempvar bofp
    gen `bofp'= beta[1,1]*`lnp1'
    forvalues i = 2/`=e(ngoods)' {
    replace `bofp'= `bofp' + beta[1,`i']*`lnp`i''
    }
    }
  - if `ndemo' > 0 {
  = if 1 > 0 {
  - tempvar cofp mbar
  - gen `cofp'= 1
  = gen __00000M= 1
  - gen double `mbar'= 1
  = gen double __00000N= 1
  - foreach var of varlist `e(demographics)' {
  = foreach var of varlist income {
  - local n_demo= 1
  - forvalue i=1/`=e(ngoods)' {
  = forvalue i=1/5 {
  - replace `cofp'= `cofp'*(`d_`var''*eta[`n_demo',`i']*`lnp`i'')
  = replace __00000M= __00000M*(__00000C*eta[1,1]*__000006)
(4,048 real changes made)
  - tempvar betanz`i'
  = tempvar betanz1
  - gen `betanz`i''=0
  = gen __00000O=0
  - replace `betanz`i''=beta[1,`i']+(`d_`var''*eta[`n_demo',`i'])
  = replace __00000O=beta[1,1]+(__00000C*eta[1,1])
(4,048 real changes made)
  - }
  - replace `cofp'= `cofp'*(`d_`var''*eta[`n_demo',`i']*`lnp`i'')
  = replace __00000M= __00000M*(__00000C*eta[1,2]*__000007)
(4,046 real changes made)
  - tempvar betanz`i'
  = tempvar betanz2
  - gen `betanz`i''=0
  = gen __00000P=0
  - replace `betanz`i''=beta[1,`i']+(`d_`var''*eta[`n_demo',`i'])
  = replace __00000P=beta[1,2]+(__00000C*eta[1,2])
(4,048 real changes made)
  - }
  - replace `cofp'= `cofp'*(`d_`var''*eta[`n_demo',`i']*`lnp`i'')
  = replace __00000M= __00000M*(__00000C*eta[1,3]*__000008)
(4,044 real changes made)
  - tempvar betanz`i'
  = tempvar betanz3
  - gen `betanz`i''=0
  = gen __00000Q=0
  - replace `betanz`i''=beta[1,`i']+(`d_`var''*eta[`n_demo',`i'])
  = replace __00000Q=beta[1,3]+(__00000C*eta[1,3])
(4,048 real changes made)
  - }
  - replace `cofp'= `cofp'*(`d_`var''*eta[`n_demo',`i']*`lnp`i'')
  = replace __00000M= __00000M*(__00000C*eta[1,4]*__000009)
(4,035 real changes made)
  - tempvar betanz`i'
  = tempvar betanz4
  - gen `betanz`i''=0
  = gen __00000R=0
  - replace `betanz`i''=beta[1,`i']+(`d_`var''*eta[`n_demo',`i'])
  = replace __00000R=beta[1,4]+(__00000C*eta[1,4])
(4,048 real changes made)
  - }
  - replace `cofp'= `cofp'*(`d_`var''*eta[`n_demo',`i']*`lnp`i'')
  = replace __00000M= __00000M*(__00000C*eta[1,5]*__00000A)
(4,033 real changes made)
  - tempvar betanz`i'
  = tempvar betanz5
  - gen `betanz`i''=0
  = gen __00000S=0
  - replace `betanz`i''=beta[1,`i']+(`d_`var''*eta[`n_demo',`i'])
  = replace __00000S=beta[1,5]+(__00000C*eta[1,5])
(4,048 real changes made)
  - }
  - replace `mbar'= `mbar' + (rho[1,`n_demo']*`d_`var'')
  = replace __00000N= __00000N + (rho[1,1]*__00000C)
(4,048 real changes made)
  - local n_demo= `n_demo' + 1
  = local n_demo= 1 + 1
  - }
  - }
  - forvalues i = 1/`=e(ngoods)' {
  = forvalues i = 1/5 {
  - forvalues j = 1/`=e(ngoods)' {
  = forvalues j = 1/5 {
  - local v : word `i' of `vars'
  = local v : word 1 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_1 = alpha[1,1]+__00000O*(__00000B-__00000L-ln(__00000N))+gamma[1,1]*__000006
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_1 = ww_1*cdfw1 + delta[1,1]*pdfw1
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_1 = 0 if w1 == 0
(793 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_1 = 0 if ww_1 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 1 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_1 = alpha[1,1]+__00000O*(__00000B-__00000L-ln(__00000N))+gamma[1,2]*__000006
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_1 = ww_1*cdfw1 + delta[1,1]*pdfw1
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_1 = 0 if w1 == 0
(793 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_1 = 0 if ww_1 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 1 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_1 = alpha[1,1]+__00000O*(__00000B-__00000L-ln(__00000N))+gamma[1,3]*__000006
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_1 = ww_1*cdfw1 + delta[1,1]*pdfw1
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_1 = 0 if w1 == 0
(793 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_1 = 0 if ww_1 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 1 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_1 = alpha[1,1]+__00000O*(__00000B-__00000L-ln(__00000N))+gamma[1,4]*__000006
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_1 = ww_1*cdfw1 + delta[1,1]*pdfw1
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_1 = 0 if w1 == 0
(793 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_1 = 0 if ww_1 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 1 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_1 = alpha[1,1]+__00000O*(__00000B-__00000L-ln(__00000N))+gamma[1,5]*__000006
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_1 = ww_1*cdfw1 + delta[1,1]*pdfw1
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_1 = 0 if w1 == 0
(793 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_1 = 0 if ww_1 < 0
(0 real changes made)
  - }
  - }
  - forvalues j = 1/`=e(ngoods)' {
  = forvalues j = 1/5 {
  - local v : word `i' of `vars'
  = local v : word 2 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_2 = alpha[1,2]+__00000P*(__00000B-__00000L-ln(__00000N))+gamma[2,1]*__000007
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_2 = ww_2*cdfw2 + delta[1,2]*pdfw2
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_2 = 0 if w2 == 0
(864 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_2 = 0 if ww_2 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 2 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_2 = alpha[1,2]+__00000P*(__00000B-__00000L-ln(__00000N))+gamma[2,2]*__000007
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_2 = ww_2*cdfw2 + delta[1,2]*pdfw2
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_2 = 0 if w2 == 0
(864 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_2 = 0 if ww_2 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 2 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_2 = alpha[1,2]+__00000P*(__00000B-__00000L-ln(__00000N))+gamma[2,3]*__000007
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_2 = ww_2*cdfw2 + delta[1,2]*pdfw2
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_2 = 0 if w2 == 0
(864 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_2 = 0 if ww_2 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 2 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_2 = alpha[1,2]+__00000P*(__00000B-__00000L-ln(__00000N))+gamma[2,4]*__000007
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_2 = ww_2*cdfw2 + delta[1,2]*pdfw2
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_2 = 0 if w2 == 0
(864 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_2 = 0 if ww_2 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 2 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_2 = alpha[1,2]+__00000P*(__00000B-__00000L-ln(__00000N))+gamma[2,5]*__000007
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_2 = ww_2*cdfw2 + delta[1,2]*pdfw2
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_2 = 0 if w2 == 0
(864 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_2 = 0 if ww_2 < 0
(0 real changes made)
  - }
  - }
  - forvalues j = 1/`=e(ngoods)' {
  = forvalues j = 1/5 {
  - local v : word `i' of `vars'
  = local v : word 3 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_3 = alpha[1,3]+__00000Q*(__00000B-__00000L-ln(__00000N))+gamma[3,1]*__000008
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_3 = ww_3*cdfw3 + delta[1,3]*pdfw3
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_3 = 0 if w3 == 0
(858 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_3 = 0 if ww_3 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 3 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_3 = alpha[1,3]+__00000Q*(__00000B-__00000L-ln(__00000N))+gamma[3,2]*__000008
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_3 = ww_3*cdfw3 + delta[1,3]*pdfw3
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_3 = 0 if w3 == 0
(858 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_3 = 0 if ww_3 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 3 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_3 = alpha[1,3]+__00000Q*(__00000B-__00000L-ln(__00000N))+gamma[3,3]*__000008
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_3 = ww_3*cdfw3 + delta[1,3]*pdfw3
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_3 = 0 if w3 == 0
(858 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_3 = 0 if ww_3 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 3 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_3 = alpha[1,3]+__00000Q*(__00000B-__00000L-ln(__00000N))+gamma[3,4]*__000008
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_3 = ww_3*cdfw3 + delta[1,3]*pdfw3
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_3 = 0 if w3 == 0
(858 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_3 = 0 if ww_3 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 3 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_3 = alpha[1,3]+__00000Q*(__00000B-__00000L-ln(__00000N))+gamma[3,5]*__000008
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_3 = ww_3*cdfw3 + delta[1,3]*pdfw3
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_3 = 0 if w3 == 0
(858 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_3 = 0 if ww_3 < 0
(0 real changes made)
  - }
  - }
  - forvalues j = 1/`=e(ngoods)' {
  = forvalues j = 1/5 {
  - local v : word `i' of `vars'
  = local v : word 4 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_4 = alpha[1,4]+__00000R*(__00000B-__00000L-ln(__00000N))+gamma[4,1]*__000009
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_4 = ww_4*cdfw4 + delta[1,4]*pdfw4
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_4 = 0 if w4 == 0
(806 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_4 = 0 if ww_4 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 4 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_4 = alpha[1,4]+__00000R*(__00000B-__00000L-ln(__00000N))+gamma[4,2]*__000009
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_4 = ww_4*cdfw4 + delta[1,4]*pdfw4
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_4 = 0 if w4 == 0
(806 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_4 = 0 if ww_4 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 4 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_4 = alpha[1,4]+__00000R*(__00000B-__00000L-ln(__00000N))+gamma[4,3]*__000009
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_4 = ww_4*cdfw4 + delta[1,4]*pdfw4
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_4 = 0 if w4 == 0
(806 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_4 = 0 if ww_4 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 4 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_4 = alpha[1,4]+__00000R*(__00000B-__00000L-ln(__00000N))+gamma[4,4]*__000009
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_4 = ww_4*cdfw4 + delta[1,4]*pdfw4
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_4 = 0 if w4 == 0
(806 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_4 = 0 if ww_4 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 4 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_4 = alpha[1,4]+__00000R*(__00000B-__00000L-ln(__00000N))+gamma[4,5]*__000009
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_4 = ww_4*cdfw4 + delta[1,4]*pdfw4
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_4 = 0 if w4 == 0
(806 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_4 = 0 if ww_4 < 0
(0 real changes made)
  - }
  - }
  - forvalues j = 1/`=e(ngoods)' {
  = forvalues j = 1/5 {
  - local v : word `i' of `vars'
  = local v : word 5 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_5 = alpha[1,5]+__00000S*(__00000B-__00000L-ln(__00000N))+gamma[5,1]*__00000A
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_5 = ww_5*cdfw5 + delta[1,5]*pdfw5
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_5 = 0 if w5 == 0
(1,658 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_5 = 0 if ww_5 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 5 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_5 = alpha[1,5]+__00000S*(__00000B-__00000L-ln(__00000N))+gamma[5,2]*__00000A
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_5 = ww_5*cdfw5 + delta[1,5]*pdfw5
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_5 = 0 if w5 == 0
(1,658 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_5 = 0 if ww_5 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 5 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_5 = alpha[1,5]+__00000S*(__00000B-__00000L-ln(__00000N))+gamma[5,3]*__00000A
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_5 = ww_5*cdfw5 + delta[1,5]*pdfw5
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_5 = 0 if w5 == 0
(1,658 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_5 = 0 if ww_5 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 5 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_5 = alpha[1,5]+__00000S*(__00000B-__00000L-ln(__00000N))+gamma[5,4]*__00000A
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_5 = ww_5*cdfw5 + delta[1,5]*pdfw5
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_5 = 0 if w5 == 0
(1,658 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_5 = 0 if ww_5 < 0
(0 real changes made)
  - }
  - local v : word `i' of `vars'
  = local v : word 5 of ww_1 ww_2 ww_3 ww_4 ww_5
  - if `ndemo' == 0 {
  = if 1 == 0 {
    replace `v' = alpha[1,`i']+beta[1,`i']*(`lnexp'-`lnpindex')+gamma[`i',`j']*`lnp`i''
    if "`e(quadratic)'" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp'))*(`lnexp'-`lnpindex')^2
    }
    }
  - else {
  - replace `v' = alpha[1,`i']+`betanz`i''*(`lnexp'-`lnpindex'-ln(`mbar'))+gamma[`i',`j']*`lnp`i
> ''
  = replace ww_5 = alpha[1,5]+__00000S*(__00000B-__00000L-ln(__00000N))+gamma[5,5]*__00000A
(4,048 real changes made)
  - if "`e(quadratic)'" == "quadratic" {
  = if "noquadratic" == "quadratic" {
    replace `v' = `v'+ (lambda[1,`i']/exp(`bofp')/exp(`cofp'))*(`lnexp'-`lnpindex'-ln(`mbar'))^2
    }
  - }
  - if "`e(censor)'" == "censor" {
  = if "censor" == "censor" {
  - replace `v' = `v'*cdfw`i' + delta[1,`i']*pdfw`i'
  = replace ww_5 = ww_5*cdfw5 + delta[1,5]*pdfw5
(4,048 real changes made)
  - replace `v' = 0 if `w`i'' == 0
  = replace ww_5 = 0 if w5 == 0
(1,658 real changes made)
  - }
  - replace `v' = 0 if `v' < 0
  = replace ww_5 = 0 if ww_5 < 0
(0 real changes made)
  - }
  - }
  --------------------------------------------------------------------------- end quaidsce_p ---
- }
-------------------------------------------------------------------------------- end predict ---

. sum w* ww*

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
          w1 |      4,048    .3231007    .2035154          0   .9206853
          w2 |      4,048    .1907995    .1365984          0     .82085
          w3 |      4,048    .0820114    .0666517          0   .4984845
          w4 |      4,048    .2057715    .1417814          0          1
          w5 |      4,048    .1983168    .2332956          0          1
-------------+---------------------------------------------------------
        ww_1 |      4,048    .1943408    .0964312          0   .4448918
        ww_2 |      4,048    .2061356     .107878          0   .3044053
        ww_3 |      4,048    .0690292    .0367665          0   .1231073
        ww_4 |      4,048    .1846792    .0921512          0    .248224
        ww_5 |      4,048    .1129844    .0943145          0   .3038355
-------------+---------------------------------------------------------
        ww_1 |      4,048    .1943408    .0964312          0   .4448918
        ww_2 |      4,048    .2061356     .107878          0   .3044053
        ww_3 |      4,048    .0690292    .0367665          0   .1231073
        ww_4 |      4,048    .1846792    .0921512          0    .248224
        ww_5 |      4,048    .1129844    .0943145          0   .3038355

. mat li e(b)
------------------------------------------------------------------------- begin _matrix_cmds ---
- version 11.0
- gettoken sub rest : 0, parse(" ,")
- local lsub : length local sub
- if "`sub'" == substr("list",1,max(1,`lsub')) {
= if "li" == substr("list",1,max(1,2)) {
- List `rest'
= List  e(b)
  ------------------------------------------------------------------ begin _matrix_cmds.List ---
  - version 11
  - syntax anything(id="matrix name" name=mname) [, noBlank noHAlf noHeader noNames Format(strin
> g) TItle(string) nodotz ]
  - confirm matrix `mname'
  = confirm matrix e(b)
  - if `"`format'"' != "" {
  = if `""' != "" {
    confirm numeric format `format'
    }
  - local bl = "`blank'" == ""
  = local bl = "" == ""
  - local ha = "`half'" == ""
  = local ha = "" == ""
  - local he = "`header'" == ""
  = local he = "" == ""
  - local na = "`names'" == ""
  = local na = "" == ""
  - local dz = "`dotz'" == ""
  = local dz = "" == ""
  - local title : list clean title
  - mata: st_matrix_list( "`mname'", "`format'", `"`title'"', `bl',`ha',`he',`na',`dz')
  = mata: st_matrix_list( "e(b)", "", `""', 1,1,1,1,1)

e(b)[1,76]
           alpha:        alpha:        alpha:        alpha:        alpha:         beta:
         alpha_1       alpha_2       alpha_3       alpha_4       alpha_5        beta_1
y1     -.1071668     .26752213     .50123363     .55566641     .54300199     .01879587

            beta:         beta:         beta:         beta:        gamma:        gamma:
          beta_2        beta_3        beta_4        beta_5     gamma_1_1     gamma_2_1
y1    -.02142575    -.00264912     .00584855    -.00225003     .12221927    -.04224118

           gamma:        gamma:        gamma:        gamma:        gamma:        gamma:
       gamma_3_1     gamma_4_1     gamma_5_1     gamma_2_2     gamma_3_2     gamma_4_2
y1    -.04356931    -.04275848      .0063497     .06836061     .00721364    -.01257029

           gamma:        gamma:        gamma:        gamma:        gamma:        gamma:
       gamma_5_2     gamma_3_3     gamma_4_3     gamma_5_3     gamma_4_4     gamma_5_4
y1    -.02076279     .04913357    -.01064376    -.00213414     .05549362     .01047891

           gamma:        delta:        delta:        delta:        delta:        delta:
       gamma_5_5       delta_1       delta_2       delta_3       delta_4       delta_5
y1     .00606831     1.4517517     -.2299098    -1.0993614    -.60941382    -.62561475

             eta:          eta:          eta:          eta:          eta:          rho:
    eta_income_1  eta_income_2  eta_income_3  eta_income_4  eta_income_5    rho_income
y1    -.00001504    -.00004016    -.00015477    -.00020899     .00041896    -.01774263

             tau:          tau:          tau:          tau:          tau:          tau:
            p1_1          p2_1          p3_1          p4_1          p5_1           M_1
y1    -.00085461     .01796795    -.02054544    -.10222802    -.00555271    -.00365389

             tau:          tau:          tau:          tau:          tau:          tau:
        income_1        cons_1          p1_2          p2_2          p3_2          p4_2
y1     .00509588     .81683921    -.06034865     .09974797     .06774701    -.04913085

             tau:          tau:          tau:          tau:          tau:          tau:
            p5_2           M_2      income_2        cons_2          p1_3          p2_3
y1    -.01190062     .05157819    -.00449222     .67666408     .03924632    -.21495763

             tau:          tau:          tau:          tau:          tau:          tau:
            p3_3          p4_3          p5_3           M_3      income_3        cons_3
y1    -.06843537    -.01081267     .04126641     .01893106    -.00484262     .55880298

             tau:          tau:          tau:          tau:          tau:          tau:
            p1_4          p2_4          p3_4          p4_4          p5_4           M_4
y1    -.00221431    -.02449723     .05087546    -.03065156     .05373935    -.01143646

             tau:          tau:          tau:          tau:          tau:          tau:
        income_4        cons_4          p1_5          p2_5          p3_5          p4_5
y1    -.00593049     .80430872     -.0176705     .03973809    -.03087729      .0303323

             tau:          tau:          tau:          tau:
            p5_5           M_5      income_5        cons_5
y1    -.03719137     .00892917    -.00310901      .3065806
  -------------------------------------------------------------------- end _matrix_cmds.List ---
- exit
--------------------------------------------------------------------------- end _matrix_cmds ---

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. estat exp
-------------------------------------------------------------------------------- begin estat ---
- version 9
- local ver : di "version " string(_caller()) ", missing :"
- if `"`e(cmd)'"' == "" {
= if `"quaidsce"' == "" {
  error 301
  }
- if `"`e(estat_cmd)'"' != "" {
= if `"quaidsce_estat"' != "" {
- `ver' `e(estat_cmd)' `0'
= version 16, missing : quaidsce_estat exp
  --------------------------------------------------------------------- begin quaidsce_estat ---
  - version 12
  - if "`e(cmd)'" != "quaidsce" {
  = if "quaidsce" != "quaidsce" {
    exit 301
    }
  - gettoken key 0 : 0, parse(", ")
  - local lkey = length(`"`key'"')
  = local lkey = length(`"exp"')
  - if `"`key'"' == substr("expenditure", 1, max(3, `lkey')) {
  = if `"exp"' == substr("expenditure", 1, max(3, 3)) {
  - DoExp `0'
  = DoExp 
    ------------------------------------------------------------- begin quaidsce_estat.DoExp ---
    - syntax [if] [in]
    - marksample touse
    - if "`e(lnprices)'" != "" {
    = if "" != "" {
      local i 1
      tempname lnpr
      local lnpr ""
      foreach var of varlist `e(lnprices)' {
      local lnp`i' `var'
      local lnpr `lnpr' `lnp`i''
      local `++i'
      }
      }
    - else {
    - local i 1
    - tempname lnpr
    - local lnpr ""
    - foreach var of varlist `e(prices)' {
    = foreach var of varlist p1 p2 p3 p4 p5 {
    - tempvar lnp`i'
    = tempvar lnp1
    - gen double `lnp`i'' = ln(`var')
    = gen double __000002 = ln(p1)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr  __000002
    - local `++i'
    = local 2
    - }
    - tempvar lnp`i'
    = tempvar lnp2
    - gen double `lnp`i'' = ln(`var')
    = gen double __000003 = ln(p2)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003
    - local `++i'
    = local 3
    - }
    - tempvar lnp`i'
    = tempvar lnp3
    - gen double `lnp`i'' = ln(`var')
    = gen double __000004 = ln(p3)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004
    - local `++i'
    = local 4
    - }
    - tempvar lnp`i'
    = tempvar lnp4
    - gen double `lnp`i'' = ln(`var')
    = gen double __000005 = ln(p4)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005
    - local `++i'
    = local 5
    - }
    - tempvar lnp`i'
    = tempvar lnp5
    - gen double `lnp`i'' = ln(`var')
    = gen double __000006 = ln(p5)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005 __000006
    - local `++i'
    = local 6
    - }
    - }
    - if "`e(lnexpenditure)'" != "" {
    = if "" != "" {
      local lnexp `e(lnexpenditure)'
      }
    - else {
    - tempvar exp
    - gen double `exp' = ln(`e(expenditure)')
    = gen double __000007 = ln(expfd)
    - local lnexp `exp'
    = local lnexp __000007
    - }
    - if "`e(lhs)'" != "" {
    = if "w1 w2 w3 w4 w5" != "" {
    - local i 1
    - foreach var of varlist `e(lhs)' {
    = foreach var of varlist w1 w2 w3 w4 w5 {
    - local w`i' `var'
    = local w1 w1
    - local `++i'
    = local 2
    - }
    - local w`i' `var'
    = local w2 w2
    - local `++i'
    = local 3
    - }
    - local w`i' `var'
    = local w3 w3
    - local `++i'
    = local 4
    - }
    - local w`i' `var'
    = local w4 w4
    - local `++i'
    = local 5
    - }
    - local w`i' `var'
    = local w5 w5
    - local `++i'
    = local 6
    - }
    - }
    - local ndemo = `e(ndemos)'
    = local ndemo = 1
    - quietly {
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - foreach x of varlist w* `lnpr' cdfw* pdfw* lnexp duw* `e(demographics)' {
    = foreach x of varlist w* __000002 __000003 __000004 __000005 __000006 cdfw* pdfw* lnexp duw
> * income {
    - sum `x'
    = sum w1
    - scalar `x'm=r(mean)
    = scalar w1m=r(mean)
    - }
    - sum `x'
    = sum w2
    - scalar `x'm=r(mean)
    = scalar w2m=r(mean)
    - }
    - sum `x'
    = sum w3
    - scalar `x'm=r(mean)
    = scalar w3m=r(mean)
    - }
    - sum `x'
    = sum w4
    - scalar `x'm=r(mean)
    = scalar w4m=r(mean)
    - }
    - sum `x'
    = sum w5
    - scalar `x'm=r(mean)
    = scalar w5m=r(mean)
    - }
    - sum `x'
    = sum ww_1
    - scalar `x'm=r(mean)
    = scalar ww_1m=r(mean)
    - }
    - sum `x'
    = sum ww_2
    - scalar `x'm=r(mean)
    = scalar ww_2m=r(mean)
    - }
    - sum `x'
    = sum ww_3
    - scalar `x'm=r(mean)
    = scalar ww_3m=r(mean)
    - }
    - sum `x'
    = sum ww_4
    - scalar `x'm=r(mean)
    = scalar ww_4m=r(mean)
    - }
    - sum `x'
    = sum ww_5
    - scalar `x'm=r(mean)
    = scalar ww_5m=r(mean)
    - }
    - sum `x'
    = sum __000002
    - scalar `x'm=r(mean)
    = scalar __000002m=r(mean)
    - }
    - sum `x'
    = sum __000003
    - scalar `x'm=r(mean)
    = scalar __000003m=r(mean)
    - }
    - sum `x'
    = sum __000004
    - scalar `x'm=r(mean)
    = scalar __000004m=r(mean)
    - }
    - sum `x'
    = sum __000005
    - scalar `x'm=r(mean)
    = scalar __000005m=r(mean)
    - }
    - sum `x'
    = sum __000006
    - scalar `x'm=r(mean)
    = scalar __000006m=r(mean)
    - }
    - sum `x'
    = sum cdfw1
    - scalar `x'm=r(mean)
    = scalar cdfw1m=r(mean)
    - }
    - sum `x'
    = sum cdfw2
    - scalar `x'm=r(mean)
    = scalar cdfw2m=r(mean)
    - }
    - sum `x'
    = sum cdfw3
    - scalar `x'm=r(mean)
    = scalar cdfw3m=r(mean)
    - }
    - sum `x'
    = sum cdfw4
    - scalar `x'm=r(mean)
    = scalar cdfw4m=r(mean)
    - }
    - sum `x'
    = sum cdfw5
    - scalar `x'm=r(mean)
    = scalar cdfw5m=r(mean)
    - }
    - sum `x'
    = sum pdfw1
    - scalar `x'm=r(mean)
    = scalar pdfw1m=r(mean)
    - }
    - sum `x'
    = sum pdfw2
    - scalar `x'm=r(mean)
    = scalar pdfw2m=r(mean)
    - }
    - sum `x'
    = sum pdfw3
    - scalar `x'm=r(mean)
    = scalar pdfw3m=r(mean)
    - }
    - sum `x'
    = sum pdfw4
    - scalar `x'm=r(mean)
    = scalar pdfw4m=r(mean)
    - }
    - sum `x'
    = sum pdfw5
    - scalar `x'm=r(mean)
    = scalar pdfw5m=r(mean)
    - }
    - sum `x'
    = sum lnexp
    - scalar `x'm=r(mean)
    = scalar lnexpm=r(mean)
    - }
    - sum `x'
    = sum duw1
    - scalar `x'm=r(mean)
    = scalar duw1m=r(mean)
    - }
    - sum `x'
    = sum duw2
    - scalar `x'm=r(mean)
    = scalar duw2m=r(mean)
    - }
    - sum `x'
    = sum duw3
    - scalar `x'm=r(mean)
    = scalar duw3m=r(mean)
    - }
    - sum `x'
    = sum duw4
    - scalar `x'm=r(mean)
    = scalar duw4m=r(mean)
    - }
    - sum `x'
    = sum duw5
    - scalar `x'm=r(mean)
    = scalar duw5m=r(mean)
    - }
    - sum `x'
    = sum income
    - scalar `x'm=r(mean)
    = scalar incomem=r(mean)
    - }
    - }
    - else {
      foreach x of varlist w* `lnpr' lnexp `e(demographics)' {
      sum `x'
      scalar `x'm=r(mean)
      }
      }
    - tempname lnpindex
    - scalar `lnpindex'= `e(anot)'
    = scalar __000008= 10
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_1]*__000002m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_1_1]*(__000002m*__000002m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000002m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000002m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000002m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000002m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_2]*__000003m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000003m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_2]*(__000003m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000003m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000003m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000003m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_3]*__000004m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000004m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000004m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_3]*(__000004m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000004m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000004m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_4]*__000005m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000005m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000005m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000005m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_4]*(__000005m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000005m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_5]*__000006m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000006m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000006m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000006m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000006m*__000005m))
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_5]*(__000006m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - tempname gsum`i'
    = tempname gsum1
    - local gsum`i' = 0
    = local gsum1 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = 0+_b[gamma:gamma_1_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0591535938405046+_b[gamma:gamma_2_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0387090477223783+_b[gamma:gamma_3_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0176216913007004+_b[gamma:gamma_4_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = -.0030732281789807+_b[gamma:gamma_5_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum2
    - local gsum`i' = 0
    = local gsum2 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum2 = 0+_b[gamma:gamma_2_1]*__000003m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = .0277222105949546+_b[gamma:gamma_2_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0171417662329056+_b[gamma:gamma_3_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0218759630132105+_b[gamma:gamma_4_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0136262845713008+_b[gamma:gamma_5_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum3
    - local gsum`i' = 0
    = local gsum3 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = 0+_b[gamma:gamma_3_1]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = -.0128063801117631+_b[gamma:gamma_3_2]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = -.0106860661635694+_b[gamma:gamma_3_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0037558222561715+_b[gamma:gamma_4_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0006272890983304+_b[gamma:gamma_5_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum4
    - local gsum`i' = 0
    = local gsum4 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = 0+_b[gamma:gamma_4_1]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0254535866849024+_b[gamma:gamma_4_2]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0329365201319483+_b[gamma:gamma_4_3]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .0392726162880456+_b[gamma:gamma_4_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .006237960913345+_b[gamma:gamma_5_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum5
    - local gsum`i' = 0
    = local gsum5 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = 0+_b[gamma:gamma_5_1]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = .0066241956441079+_b[gamma:gamma_5_2]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0150361515478514+_b[gamma:gamma_5_3]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0172625445820406+_b[gamma:gamma_5_4]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum5 = -.006330642161351+_b[gamma:gamma_5_5]*__000006m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      tempname bofp
      scalar `bofp'= _b[beta:beta_1]*`lnp1'm
      forvalues i = 2/`=e(ngoods)' {
      scalar `bofp'= `bofp' + _b[beta:beta_`i']*`lnp`i''m
      }
      }
    - if `ndemo' > 0 {
    = if 1 > 0 {
    - tempname cofp mbar
    - scalar `cofp'= 1
    = scalar __00000E= 1
    - scalar `mbar'= 1
    = scalar __00000F= 1
    - foreach var of varlist `e(demographics)' {
    = foreach var of varlist income {
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_1]*__000002m)
    - tempname betanz`i'
    = tempname betanz1
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000G=_b[beta:beta_1]+(incomem*_b[eta:eta_income_1])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_2]*__000003m)
    - tempname betanz`i'
    = tempname betanz2
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000H=_b[beta:beta_2]+(incomem*_b[eta:eta_income_2])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_3]*__000004m)
    - tempname betanz`i'
    = tempname betanz3
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000I=_b[beta:beta_3]+(incomem*_b[eta:eta_income_3])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_4]*__000005m)
    - tempname betanz`i'
    = tempname betanz4
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000J=_b[beta:beta_4]+(incomem*_b[eta:eta_income_4])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_5]*__000006m)
    - tempname betanz`i'
    = tempname betanz5
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000K=_b[beta:beta_5]+(incomem*_b[eta:eta_income_5])
    - }
    - scalar `mbar'= `mbar' + (_b[rho:rho_`var']*`var'm)
    = scalar __00000F= __00000F + (_b[rho:rho_income]*incomem)
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we1 = _b[alpha:alpha_1]+__00000G*(lnexpm-__000008-ln(__00000F)) + 3.94649590785e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we1 = we1*cdfw1m + _b[delta:delta_1]*pdfw1m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we2 = _b[alpha:alpha_2]+__00000H*(lnexpm-__000008-ln(__00000F)) + 3.46944695195e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we2 = we2*cdfw2m + _b[delta:delta_2]*pdfw2m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we3 = _b[alpha:alpha_3]+__00000I*(lnexpm-__000008-ln(__00000F)) + -1.07119174642e-1
> 6
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we3 = we3*cdfw3m + _b[delta:delta_3]*pdfw3m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we4 = _b[alpha:alpha_4]+__00000J*(lnexpm-__000008-ln(__00000F)) + -3.12250225676e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we4 = we4*cdfw4m + _b[delta:delta_4]*pdfw4m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we5 = _b[alpha:alpha_5]+__00000K*(lnexpm-__000008-ln(__00000F)) + -7.89299181569e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we5 = we5*cdfw5m + _b[delta:delta_5]*pdfw5m
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie1 "(1+__00000G/we1)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie1 "((1+__00000G/we1)*cdfw1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/
> we1)"
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie2 "(1+__00000H/we2)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie2 "((1+__00000H/we2)*cdfw2m + (_b[tau:M_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/
> we2)"
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie3 "(1+__00000I/we3)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie3 "((1+__00000I/we3)*cdfw3m + (_b[tau:M_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/
> we3)"
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie4 "(1+__00000J/we4)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie4 "((1+__00000J/we4)*cdfw4m + (_b[tau:M_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/
> we4)"
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie5 "(1+__00000K/we5)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie5 "((1+__00000K/we5)*cdfw5m + (_b[tau:M_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/
> we5)"
    - }
    - }
    - tempname elasi sei
    - mat `elasi'=J(1,`e(ngoods)',0)
    = mat __00000L=J(1,5,0)
    - mat `sei'=J(1,`e(ngoods)',0)
    = mat __00000M=J(1,5,0)
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - qui nlcom(${ie`i'})
    = qui nlcom(((1+__00000G/we1)*cdfw1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we
> 1))
    - mat elasi[1,`i'] = r(b)
    = mat elasi[1,1] = r(b)
matrix elasi not found
      mat sei[1,`i'] = r(V)
      mat sei[1,`i'] = sqrt(sei[1,`i'])
      }
      ret mat elas_i elasi
      ret mat se_elas_i sei
    --------------------------------------------------------------- end quaidsce_estat.DoExp ---
    }
  ----------------------------------------------------------------------- end quaidsce_estat ---
  return add
  exit
  }
---------------------------------------------------------------------------------- end estat ---
r(111);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. set trace off

. estat exp
program error:  matching close brace not found
r(198);

. set trace on

. set tracedepth 3

. estat exp
-------------------------------------------------------------------------------- begin estat ---
- version 9
- local ver : di "version " string(_caller()) ", missing :"
- if `"`e(cmd)'"' == "" {
= if `"quaidsce"' == "" {
  error 301
  }
- if `"`e(estat_cmd)'"' != "" {
= if `"quaidsce_estat"' != "" {
- `ver' `e(estat_cmd)' `0'
= version 16, missing : quaidsce_estat exp
  --------------------------------------------------------------------- begin quaidsce_estat ---
  - version 12
  - if "`e(cmd)'" != "quaidsce" {
  = if "quaidsce" != "quaidsce" {
    exit 301
    }
  - gettoken key 0 : 0, parse(", ")
  - local lkey = length(`"`key'"')
  = local lkey = length(`"exp"')
  - if `"`key'"' == substr("expenditure", 1, max(3, `lkey')) {
  = if `"exp"' == substr("expenditure", 1, max(3, 3)) {
  - DoExp `0'
  = DoExp 
    ------------------------------------------------------------- begin quaidsce_estat.DoExp ---
    - syntax [if] [in]
    - marksample touse
    - if "`e(lnprices)'" != "" {
    = if "" != "" {
      local i 1
      tempname lnpr
      local lnpr ""
      foreach var of varlist `e(lnprices)' {
      local lnp`i' `var'
      local lnpr `lnpr' `lnp`i''
      local `++i'
      }
      }
    - else {
    - local i 1
    - tempname lnpr
    - local lnpr ""
    - foreach var of varlist `e(prices)' {
    = foreach var of varlist p1 p2 p3 p4 p5 {
    - tempvar lnp`i'
    = tempvar lnp1
    - gen double `lnp`i'' = ln(`var')
    = gen double __000002 = ln(p1)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr  __000002
    - local `++i'
    = local 2
    - }
    - tempvar lnp`i'
    = tempvar lnp2
    - gen double `lnp`i'' = ln(`var')
    = gen double __000003 = ln(p2)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003
    - local `++i'
    = local 3
    - }
    - tempvar lnp`i'
    = tempvar lnp3
    - gen double `lnp`i'' = ln(`var')
    = gen double __000004 = ln(p3)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004
    - local `++i'
    = local 4
    - }
    - tempvar lnp`i'
    = tempvar lnp4
    - gen double `lnp`i'' = ln(`var')
    = gen double __000005 = ln(p4)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005
    - local `++i'
    = local 5
    - }
    - tempvar lnp`i'
    = tempvar lnp5
    - gen double `lnp`i'' = ln(`var')
    = gen double __000006 = ln(p5)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005 __000006
    - local `++i'
    = local 6
    - }
    - }
    - if "`e(lnexpenditure)'" != "" {
    = if "" != "" {
      local lnexp `e(lnexpenditure)'
      }
    - else {
    - tempvar exp
    - gen double `exp' = ln(`e(expenditure)')
    = gen double __000007 = ln(expfd)
    - local lnexp `exp'
    = local lnexp __000007
    - }
    - if "`e(lhs)'" != "" {
    = if "w1 w2 w3 w4 w5" != "" {
    - local i 1
    - foreach var of varlist `e(lhs)' {
    = foreach var of varlist w1 w2 w3 w4 w5 {
    - local w`i' `var'
    = local w1 w1
    - local `++i'
    = local 2
    - }
    - local w`i' `var'
    = local w2 w2
    - local `++i'
    = local 3
    - }
    - local w`i' `var'
    = local w3 w3
    - local `++i'
    = local 4
    - }
    - local w`i' `var'
    = local w4 w4
    - local `++i'
    = local 5
    - }
    - local w`i' `var'
    = local w5 w5
    - local `++i'
    = local 6
    - }
    - }
    - local ndemo = `e(ndemos)'
    = local ndemo = 1
    - quietly {
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - foreach x of varlist w* `lnpr' cdfw* pdfw* lnexp duw* `e(demographics)' {
    = foreach x of varlist w* __000002 __000003 __000004 __000005 __000006 cdfw* pdfw* lnexp duw
> * income {
    - sum `x'
    = sum w1
    - scalar `x'm=r(mean)
    = scalar w1m=r(mean)
    - }
    - sum `x'
    = sum w2
    - scalar `x'm=r(mean)
    = scalar w2m=r(mean)
    - }
    - sum `x'
    = sum w3
    - scalar `x'm=r(mean)
    = scalar w3m=r(mean)
    - }
    - sum `x'
    = sum w4
    - scalar `x'm=r(mean)
    = scalar w4m=r(mean)
    - }
    - sum `x'
    = sum w5
    - scalar `x'm=r(mean)
    = scalar w5m=r(mean)
    - }
    - sum `x'
    = sum ww_1
    - scalar `x'm=r(mean)
    = scalar ww_1m=r(mean)
    - }
    - sum `x'
    = sum ww_2
    - scalar `x'm=r(mean)
    = scalar ww_2m=r(mean)
    - }
    - sum `x'
    = sum ww_3
    - scalar `x'm=r(mean)
    = scalar ww_3m=r(mean)
    - }
    - sum `x'
    = sum ww_4
    - scalar `x'm=r(mean)
    = scalar ww_4m=r(mean)
    - }
    - sum `x'
    = sum ww_5
    - scalar `x'm=r(mean)
    = scalar ww_5m=r(mean)
    - }
    - sum `x'
    = sum __000002
    - scalar `x'm=r(mean)
    = scalar __000002m=r(mean)
    - }
    - sum `x'
    = sum __000003
    - scalar `x'm=r(mean)
    = scalar __000003m=r(mean)
    - }
    - sum `x'
    = sum __000004
    - scalar `x'm=r(mean)
    = scalar __000004m=r(mean)
    - }
    - sum `x'
    = sum __000005
    - scalar `x'm=r(mean)
    = scalar __000005m=r(mean)
    - }
    - sum `x'
    = sum __000006
    - scalar `x'm=r(mean)
    = scalar __000006m=r(mean)
    - }
    - sum `x'
    = sum cdfw1
    - scalar `x'm=r(mean)
    = scalar cdfw1m=r(mean)
    - }
    - sum `x'
    = sum cdfw2
    - scalar `x'm=r(mean)
    = scalar cdfw2m=r(mean)
    - }
    - sum `x'
    = sum cdfw3
    - scalar `x'm=r(mean)
    = scalar cdfw3m=r(mean)
    - }
    - sum `x'
    = sum cdfw4
    - scalar `x'm=r(mean)
    = scalar cdfw4m=r(mean)
    - }
    - sum `x'
    = sum cdfw5
    - scalar `x'm=r(mean)
    = scalar cdfw5m=r(mean)
    - }
    - sum `x'
    = sum pdfw1
    - scalar `x'm=r(mean)
    = scalar pdfw1m=r(mean)
    - }
    - sum `x'
    = sum pdfw2
    - scalar `x'm=r(mean)
    = scalar pdfw2m=r(mean)
    - }
    - sum `x'
    = sum pdfw3
    - scalar `x'm=r(mean)
    = scalar pdfw3m=r(mean)
    - }
    - sum `x'
    = sum pdfw4
    - scalar `x'm=r(mean)
    = scalar pdfw4m=r(mean)
    - }
    - sum `x'
    = sum pdfw5
    - scalar `x'm=r(mean)
    = scalar pdfw5m=r(mean)
    - }
    - sum `x'
    = sum lnexp
    - scalar `x'm=r(mean)
    = scalar lnexpm=r(mean)
    - }
    - sum `x'
    = sum duw1
    - scalar `x'm=r(mean)
    = scalar duw1m=r(mean)
    - }
    - sum `x'
    = sum duw2
    - scalar `x'm=r(mean)
    = scalar duw2m=r(mean)
    - }
    - sum `x'
    = sum duw3
    - scalar `x'm=r(mean)
    = scalar duw3m=r(mean)
    - }
    - sum `x'
    = sum duw4
    - scalar `x'm=r(mean)
    = scalar duw4m=r(mean)
    - }
    - sum `x'
    = sum duw5
    - scalar `x'm=r(mean)
    = scalar duw5m=r(mean)
    - }
    - sum `x'
    = sum income
    - scalar `x'm=r(mean)
    = scalar incomem=r(mean)
    - }
    - }
    - else {
      foreach x of varlist w* `lnpr' lnexp `e(demographics)' {
      sum `x'
      scalar `x'm=r(mean)
      }
      }
    - tempname lnpindex
    - scalar `lnpindex'= `e(anot)'
    = scalar __000008= 10
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_1]*__000002m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_1_1]*(__000002m*__000002m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000002m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000002m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000002m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000002m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_2]*__000003m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000003m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_2]*(__000003m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000003m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000003m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000003m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_3]*__000004m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000004m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000004m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_3]*(__000004m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000004m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000004m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_4]*__000005m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000005m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000005m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000005m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_4]*(__000005m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000005m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_5]*__000006m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000006m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000006m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000006m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000006m*__000005m))
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_5]*(__000006m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - tempname gsum`i'
    = tempname gsum1
    - local gsum`i' = 0
    = local gsum1 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = 0+_b[gamma:gamma_1_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0591535938405046+_b[gamma:gamma_2_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0387090477223783+_b[gamma:gamma_3_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0176216913007004+_b[gamma:gamma_4_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = -.0030732281789807+_b[gamma:gamma_5_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum2
    - local gsum`i' = 0
    = local gsum2 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum2 = 0+_b[gamma:gamma_2_1]*__000003m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = .0277222105949546+_b[gamma:gamma_2_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0171417662329056+_b[gamma:gamma_3_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0218759630132105+_b[gamma:gamma_4_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0136262845713008+_b[gamma:gamma_5_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum3
    - local gsum`i' = 0
    = local gsum3 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = 0+_b[gamma:gamma_3_1]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = -.0128063801117631+_b[gamma:gamma_3_2]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = -.0106860661635694+_b[gamma:gamma_3_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0037558222561715+_b[gamma:gamma_4_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0006272890983304+_b[gamma:gamma_5_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum4
    - local gsum`i' = 0
    = local gsum4 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = 0+_b[gamma:gamma_4_1]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0254535866849024+_b[gamma:gamma_4_2]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0329365201319483+_b[gamma:gamma_4_3]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .0392726162880456+_b[gamma:gamma_4_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .006237960913345+_b[gamma:gamma_5_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum5
    - local gsum`i' = 0
    = local gsum5 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = 0+_b[gamma:gamma_5_1]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = .0066241956441079+_b[gamma:gamma_5_2]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0150361515478514+_b[gamma:gamma_5_3]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0172625445820406+_b[gamma:gamma_5_4]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum5 = -.006330642161351+_b[gamma:gamma_5_5]*__000006m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      tempname bofp
      scalar `bofp'= _b[beta:beta_1]*`lnp1'm
      forvalues i = 2/`=e(ngoods)' {
      scalar `bofp'= `bofp' + _b[beta:beta_`i']*`lnp`i''m
      }
      }
    - if `ndemo' > 0 {
    = if 1 > 0 {
    - tempname cofp mbar
    - scalar `cofp'= 1
    = scalar __00000E= 1
    - scalar `mbar'= 1
    = scalar __00000F= 1
    - foreach var of varlist `e(demographics)' {
    = foreach var of varlist income {
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_1]*__000002m)
    - tempname betanz`i'
    = tempname betanz1
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000G=_b[beta:beta_1]+(incomem*_b[eta:eta_income_1])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_2]*__000003m)
    - tempname betanz`i'
    = tempname betanz2
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000H=_b[beta:beta_2]+(incomem*_b[eta:eta_income_2])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_3]*__000004m)
    - tempname betanz`i'
    = tempname betanz3
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000I=_b[beta:beta_3]+(incomem*_b[eta:eta_income_3])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_4]*__000005m)
    - tempname betanz`i'
    = tempname betanz4
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000J=_b[beta:beta_4]+(incomem*_b[eta:eta_income_4])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_5]*__000006m)
    - tempname betanz`i'
    = tempname betanz5
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000K=_b[beta:beta_5]+(incomem*_b[eta:eta_income_5])
    - }
    - scalar `mbar'= `mbar' + (_b[rho:rho_`var']*`var'm)
    = scalar __00000F= __00000F + (_b[rho:rho_income]*incomem)
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we1 = _b[alpha:alpha_1]+__00000G*(lnexpm-__000008-ln(__00000F)) + 3.94649590785e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we1 = we1*cdfw1m + _b[delta:delta_1]*pdfw1m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we2 = _b[alpha:alpha_2]+__00000H*(lnexpm-__000008-ln(__00000F)) + 3.46944695195e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we2 = we2*cdfw2m + _b[delta:delta_2]*pdfw2m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we3 = _b[alpha:alpha_3]+__00000I*(lnexpm-__000008-ln(__00000F)) + -1.07119174642e-1
> 6
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we3 = we3*cdfw3m + _b[delta:delta_3]*pdfw3m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we4 = _b[alpha:alpha_4]+__00000J*(lnexpm-__000008-ln(__00000F)) + -3.12250225676e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we4 = we4*cdfw4m + _b[delta:delta_4]*pdfw4m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we5 = _b[alpha:alpha_5]+__00000K*(lnexpm-__000008-ln(__00000F)) + -7.89299181569e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we5 = we5*cdfw5m + _b[delta:delta_5]*pdfw5m
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie1 "(1+__00000G/we1)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie1 "((1+__00000G/we1)*cdfw1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/
> we1)"
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie2 "(1+__00000H/we2)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie2 "((1+__00000H/we2)*cdfw2m + (_b[tau:M_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/
> we2)"
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie3 "(1+__00000I/we3)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie3 "((1+__00000I/we3)*cdfw3m + (_b[tau:M_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/
> we3)"
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie4 "(1+__00000J/we4)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie4 "((1+__00000J/we4)*cdfw4m + (_b[tau:M_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/
> we4)"
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      global ie`i' "(1+_b[beta:beta_`i']/we`i')"
      if "`e(quadratic)'" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(_b[beta:beta_`i']+(2*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexp
> m-`lnpindex')))"
      }
      }
    - else {
    - global ie`i' "(1+`betanz`i''/we`i')"
    = global ie5 "(1+__00000K/we5)"
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      global ie`i' "(1+(1/we`i')*(`betanz`i''+(2*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*
> (lnexpm-`lnpindex'-ln(`mbar'))))"
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ie`i' "(${ie`i'}*cdfw`i'm + (_b[tau:M_`i']*pdfw`i'm*(w`i'm-_b[delta:delta_`i']*duw`
> i'm))/we`i')"
    = global ie5 "((1+__00000K/we5)*cdfw5m + (_b[tau:M_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/
> we5)"
    - }
    - }
    - tempname elasi sei
    - mat elasi=J(1,`e(ngoods)',0)
    = mat elasi=J(1,5,0)
    - mat sei=J(1,`e(ngoods)',0)
    = mat sei=J(1,5,0)
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - qui nlcom(${ie`i'})
    = qui nlcom(((1+__00000G/we1)*cdfw1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we
> 1))
    - mat elasi[1,`i'] = r(b)
    = mat elasi[1,1] = r(b)
    - mat sei[1,`i'] = r(V)
    = mat sei[1,1] = r(V)
    - mat sei[1,`i'] = sqrt(sei[1,`i'])
    = mat sei[1,1] = sqrt(sei[1,1])
    - }
    - qui nlcom(${ie`i'})
    = qui nlcom(((1+__00000H/we2)*cdfw2m + (_b[tau:M_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we
> 2))
    - mat elasi[1,`i'] = r(b)
    = mat elasi[1,2] = r(b)
    - mat sei[1,`i'] = r(V)
    = mat sei[1,2] = r(V)
    - mat sei[1,`i'] = sqrt(sei[1,`i'])
    = mat sei[1,2] = sqrt(sei[1,2])
    - }
    - qui nlcom(${ie`i'})
    = qui nlcom(((1+__00000I/we3)*cdfw3m + (_b[tau:M_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we
> 3))
    - mat elasi[1,`i'] = r(b)
    = mat elasi[1,3] = r(b)
    - mat sei[1,`i'] = r(V)
    = mat sei[1,3] = r(V)
    - mat sei[1,`i'] = sqrt(sei[1,`i'])
    = mat sei[1,3] = sqrt(sei[1,3])
    - }
    - qui nlcom(${ie`i'})
    = qui nlcom(((1+__00000J/we4)*cdfw4m + (_b[tau:M_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we
> 4))
    - mat elasi[1,`i'] = r(b)
    = mat elasi[1,4] = r(b)
    - mat sei[1,`i'] = r(V)
    = mat sei[1,4] = r(V)
    - mat sei[1,`i'] = sqrt(sei[1,`i'])
    = mat sei[1,4] = sqrt(sei[1,4])
    - }
    - qui nlcom(${ie`i'})
    = qui nlcom(((1+__00000K/we5)*cdfw5m + (_b[tau:M_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we
> 5))
    - mat elasi[1,`i'] = r(b)
    = mat elasi[1,5] = r(b)
    - mat sei[1,`i'] = r(V)
    = mat sei[1,5] = r(V)
    - mat sei[1,`i'] = sqrt(sei[1,`i'])
    = mat sei[1,5] = sqrt(sei[1,5])
    - }
    - ret mat elas_i elasi
    - ret mat se_elas_i sei
program error:  matching close brace not found
    --------------------------------------------------------------- end quaidsce_estat.DoExp ---
    }
  ----------------------------------------------------------------------- end quaidsce_estat ---
  return add
  exit
  }
---------------------------------------------------------------------------------- end estat ---
r(198);

. return list all

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. set trace off

. estat exp

. return list all

matrices:
          r(se_elas_i) :  1 x 5
             r(elas_i) :  1 x 5

. estat uncomp

equation lambda not found
r(111);

. set trace on

. estat uncomp
-------------------------------------------------------------------------------- begin estat ---
- version 9
- local ver : di "version " string(_caller()) ", missing :"
- if `"`e(cmd)'"' == "" {
= if `"quaidsce"' == "" {
  error 301
  }
- if `"`e(estat_cmd)'"' != "" {
= if `"quaidsce_estat"' != "" {
- `ver' `e(estat_cmd)' `0'
= version 16, missing : quaidsce_estat uncomp
  --------------------------------------------------------------------- begin quaidsce_estat ---
  - version 12
  - if "`e(cmd)'" != "quaidsce" {
  = if "quaidsce" != "quaidsce" {
    exit 301
    }
  - gettoken key 0 : 0, parse(", ")
  - local lkey = length(`"`key'"')
  = local lkey = length(`"uncomp"')
  - if `"`key'"' == substr("expenditure", 1, max(3, `lkey')) {
  = if `"uncomp"' == substr("expenditure", 1, max(3, 6)) {
    DoExp `0'
    }
  - else if `"`key'"' == substr("uncompensated", 1, max(6, `lkey')) {
  = else if `"uncomp"' == substr("uncompensated", 1, max(6, 6)) {
  - DoUncomp `0'
  = DoUncomp 
    ---------------------------------------------------------- begin quaidsce_estat.DoUncomp ---
    - syntax [if] [in]
    - marksample touse
    - if "`e(lnprices)'" != "" {
    = if "" != "" {
      local i 1
      tempname lnpr
      local lnpr ""
      foreach var of varlist `e(lnprices)' {
      local lnp`i' `var'
      local lnpr `lnpr' `lnp`i''
      local `++i'
      }
      }
    - else {
    - local i 1
    - tempname lnpr
    - local lnpr ""
    - foreach var of varlist `e(prices)' {
    = foreach var of varlist p1 p2 p3 p4 p5 {
    - tempvar lnp`i'
    = tempvar lnp1
    - gen double `lnp`i'' = ln(`var')
    = gen double __000002 = ln(p1)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr  __000002
    - local `++i'
    = local 2
    - }
    - tempvar lnp`i'
    = tempvar lnp2
    - gen double `lnp`i'' = ln(`var')
    = gen double __000003 = ln(p2)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003
    - local `++i'
    = local 3
    - }
    - tempvar lnp`i'
    = tempvar lnp3
    - gen double `lnp`i'' = ln(`var')
    = gen double __000004 = ln(p3)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004
    - local `++i'
    = local 4
    - }
    - tempvar lnp`i'
    = tempvar lnp4
    - gen double `lnp`i'' = ln(`var')
    = gen double __000005 = ln(p4)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005
    - local `++i'
    = local 5
    - }
    - tempvar lnp`i'
    = tempvar lnp5
    - gen double `lnp`i'' = ln(`var')
    = gen double __000006 = ln(p5)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005 __000006
    - local `++i'
    = local 6
    - }
    - }
    - if "`e(lnexpenditure)'" != "" {
    = if "" != "" {
      local lnexp `e(lnexpenditure)'
      }
    - else {
    - tempvar exp
    - gen double `exp' = ln(`e(expenditure)')
    = gen double __000007 = ln(expfd)
    - local lnexp `exp'
    = local lnexp __000007
    - }
    - if "`e(lhs)'" != "" {
    = if "w1 w2 w3 w4 w5" != "" {
    - local i 1
    - foreach var of varlist `e(lhs)' {
    = foreach var of varlist w1 w2 w3 w4 w5 {
    - local w`i' `var'
    = local w1 w1
    - local `++i'
    = local 2
    - }
    - local w`i' `var'
    = local w2 w2
    - local `++i'
    = local 3
    - }
    - local w`i' `var'
    = local w3 w3
    - local `++i'
    = local 4
    - }
    - local w`i' `var'
    = local w4 w4
    - local `++i'
    = local 5
    - }
    - local w`i' `var'
    = local w5 w5
    - local `++i'
    = local 6
    - }
    - }
    - local ndemo = `e(ndemos)'
    = local ndemo = 1
    - quietly {
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - foreach x of varlist w* `lnpr' cdfw* pdfw* lnexp duw* `e(demographics)' {
    = foreach x of varlist w* __000002 __000003 __000004 __000005 __000006 cdfw* pdfw* lnexp duw
> * income {
    - sum `x'
    = sum w1
    - scalar `x'm=r(mean)
    = scalar w1m=r(mean)
    - }
    - sum `x'
    = sum w2
    - scalar `x'm=r(mean)
    = scalar w2m=r(mean)
    - }
    - sum `x'
    = sum w3
    - scalar `x'm=r(mean)
    = scalar w3m=r(mean)
    - }
    - sum `x'
    = sum w4
    - scalar `x'm=r(mean)
    = scalar w4m=r(mean)
    - }
    - sum `x'
    = sum w5
    - scalar `x'm=r(mean)
    = scalar w5m=r(mean)
    - }
    - sum `x'
    = sum ww_1
    - scalar `x'm=r(mean)
    = scalar ww_1m=r(mean)
    - }
    - sum `x'
    = sum ww_2
    - scalar `x'm=r(mean)
    = scalar ww_2m=r(mean)
    - }
    - sum `x'
    = sum ww_3
    - scalar `x'm=r(mean)
    = scalar ww_3m=r(mean)
    - }
    - sum `x'
    = sum ww_4
    - scalar `x'm=r(mean)
    = scalar ww_4m=r(mean)
    - }
    - sum `x'
    = sum ww_5
    - scalar `x'm=r(mean)
    = scalar ww_5m=r(mean)
    - }
    - sum `x'
    = sum __000002
    - scalar `x'm=r(mean)
    = scalar __000002m=r(mean)
    - }
    - sum `x'
    = sum __000003
    - scalar `x'm=r(mean)
    = scalar __000003m=r(mean)
    - }
    - sum `x'
    = sum __000004
    - scalar `x'm=r(mean)
    = scalar __000004m=r(mean)
    - }
    - sum `x'
    = sum __000005
    - scalar `x'm=r(mean)
    = scalar __000005m=r(mean)
    - }
    - sum `x'
    = sum __000006
    - scalar `x'm=r(mean)
    = scalar __000006m=r(mean)
    - }
    - sum `x'
    = sum cdfw1
    - scalar `x'm=r(mean)
    = scalar cdfw1m=r(mean)
    - }
    - sum `x'
    = sum cdfw2
    - scalar `x'm=r(mean)
    = scalar cdfw2m=r(mean)
    - }
    - sum `x'
    = sum cdfw3
    - scalar `x'm=r(mean)
    = scalar cdfw3m=r(mean)
    - }
    - sum `x'
    = sum cdfw4
    - scalar `x'm=r(mean)
    = scalar cdfw4m=r(mean)
    - }
    - sum `x'
    = sum cdfw5
    - scalar `x'm=r(mean)
    = scalar cdfw5m=r(mean)
    - }
    - sum `x'
    = sum pdfw1
    - scalar `x'm=r(mean)
    = scalar pdfw1m=r(mean)
    - }
    - sum `x'
    = sum pdfw2
    - scalar `x'm=r(mean)
    = scalar pdfw2m=r(mean)
    - }
    - sum `x'
    = sum pdfw3
    - scalar `x'm=r(mean)
    = scalar pdfw3m=r(mean)
    - }
    - sum `x'
    = sum pdfw4
    - scalar `x'm=r(mean)
    = scalar pdfw4m=r(mean)
    - }
    - sum `x'
    = sum pdfw5
    - scalar `x'm=r(mean)
    = scalar pdfw5m=r(mean)
    - }
    - sum `x'
    = sum lnexp
    - scalar `x'm=r(mean)
    = scalar lnexpm=r(mean)
    - }
    - sum `x'
    = sum duw1
    - scalar `x'm=r(mean)
    = scalar duw1m=r(mean)
    - }
    - sum `x'
    = sum duw2
    - scalar `x'm=r(mean)
    = scalar duw2m=r(mean)
    - }
    - sum `x'
    = sum duw3
    - scalar `x'm=r(mean)
    = scalar duw3m=r(mean)
    - }
    - sum `x'
    = sum duw4
    - scalar `x'm=r(mean)
    = scalar duw4m=r(mean)
    - }
    - sum `x'
    = sum duw5
    - scalar `x'm=r(mean)
    = scalar duw5m=r(mean)
    - }
    - sum `x'
    = sum income
    - scalar `x'm=r(mean)
    = scalar incomem=r(mean)
    - }
    - }
    - else {
      foreach x of varlist w* `lnpr' lnexp `e(demographics)' {
      sum `x'
      scalar `x'm=r(mean)
      }
      }
    - }
    - tempname lnpindex
    - scalar `lnpindex'= `e(anot)'
    = scalar __000008= 10
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_1]*__000002m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_1_1]*(__000002m*__000002m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000002m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000002m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000002m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000002m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_2]*__000003m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000003m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_2]*(__000003m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000003m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000003m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000003m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_3]*__000004m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000004m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000004m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_3]*(__000004m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000004m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000004m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_4]*__000005m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000005m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000005m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000005m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_4]*(__000005m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000005m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_5]*__000006m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000006m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000006m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000006m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000006m*__000005m))
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_5]*(__000006m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - tempname gsum`i'
    = tempname gsum1
    - local gsum`i' = 0
    = local gsum1 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = 0+_b[gamma:gamma_1_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0591535938405046+_b[gamma:gamma_2_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0387090477223783+_b[gamma:gamma_3_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0176216913007004+_b[gamma:gamma_4_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = -.0030732281789807+_b[gamma:gamma_5_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum2
    - local gsum`i' = 0
    = local gsum2 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum2 = 0+_b[gamma:gamma_2_1]*__000003m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = .0277222105949546+_b[gamma:gamma_2_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0171417662329056+_b[gamma:gamma_3_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0218759630132105+_b[gamma:gamma_4_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0136262845713008+_b[gamma:gamma_5_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum3
    - local gsum`i' = 0
    = local gsum3 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = 0+_b[gamma:gamma_3_1]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = -.0128063801117631+_b[gamma:gamma_3_2]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = -.0106860661635694+_b[gamma:gamma_3_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0037558222561715+_b[gamma:gamma_4_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0006272890983304+_b[gamma:gamma_5_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum4
    - local gsum`i' = 0
    = local gsum4 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = 0+_b[gamma:gamma_4_1]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0254535866849024+_b[gamma:gamma_4_2]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0329365201319483+_b[gamma:gamma_4_3]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .0392726162880456+_b[gamma:gamma_4_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .006237960913345+_b[gamma:gamma_5_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum5
    - local gsum`i' = 0
    = local gsum5 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = 0+_b[gamma:gamma_5_1]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = .0066241956441079+_b[gamma:gamma_5_2]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0150361515478514+_b[gamma:gamma_5_3]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0172625445820406+_b[gamma:gamma_5_4]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum5 = -.006330642161351+_b[gamma:gamma_5_5]*__000006m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      tempname bofp
      scalar `bofp'= _b[beta:beta_1]*`lnp1'm
      forvalues i = 2/`=e(ngoods)' {
      scalar `bofp'= `bofp' + _b[beta:beta_`i']*`lnp`i''m
      }
      }
    - if `ndemo' > 0 {
    = if 1 > 0 {
    - tempname cofp mbar
    - scalar `cofp'= 1
    = scalar __00000E= 1
    - scalar `mbar'= 1
    = scalar __00000F= 1
    - foreach var of varlist `e(demographics)' {
    = foreach var of varlist income {
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_1]*__000002m)
    - tempname betanz`i'
    = tempname betanz1
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000G=_b[beta:beta_1]+(incomem*_b[eta:eta_income_1])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_2]*__000003m)
    - tempname betanz`i'
    = tempname betanz2
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000H=_b[beta:beta_2]+(incomem*_b[eta:eta_income_2])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_3]*__000004m)
    - tempname betanz`i'
    = tempname betanz3
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000I=_b[beta:beta_3]+(incomem*_b[eta:eta_income_3])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_4]*__000005m)
    - tempname betanz`i'
    = tempname betanz4
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000J=_b[beta:beta_4]+(incomem*_b[eta:eta_income_4])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_5]*__000006m)
    - tempname betanz`i'
    = tempname betanz5
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000K=_b[beta:beta_5]+(incomem*_b[eta:eta_income_5])
    - }
    - scalar `mbar'= `mbar' + (_b[rho:rho_`var']*`var'm)
    = scalar __00000F= __00000F + (_b[rho:rho_income]*incomem)
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we1 = _b[alpha:alpha_1]+__00000G*(lnexpm-__000008-ln(__00000F)) + 3.94649590785e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we1 = we1*cdfw1m + _b[delta:delta_1]*pdfw1m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we2 = _b[alpha:alpha_2]+__00000H*(lnexpm-__000008-ln(__00000F)) + 3.46944695195e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we2 = we2*cdfw2m + _b[delta:delta_2]*pdfw2m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we3 = _b[alpha:alpha_3]+__00000I*(lnexpm-__000008-ln(__00000F)) + -1.07119174642e-1
> 6
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we3 = we3*cdfw3m + _b[delta:delta_3]*pdfw3m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we4 = _b[alpha:alpha_4]+__00000J*(lnexpm-__000008-ln(__00000F)) + -3.12250225676e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we4 = we4*cdfw4m + _b[delta:delta_4]*pdfw4m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we5 = _b[alpha:alpha_5]+__00000K*(lnexpm-__000008-ln(__00000F)) + -7.89299181569e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we5 = we5*cdfw5m + _b[delta:delta_5]*pdfw5m
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue11 "((((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000H+(2*_b[lambda:lambda_1]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_1]+6.93889390391e-17)-(__
> 00000H*_b[lambda:lambda_1]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cdf
> w1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_1]*pdfw1m*(w1
> m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/w
> e1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue12 "((((-0+(1/we1)*(_b[gamma:gamma_2_1]-(__00000H+(2*_b[lambda:lambda_1]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_1]+6.93889390391e-17)-(__
> 00000H*_b[lambda:lambda_1]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cdf
> w1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_2]*pdfw1m*(w1
> m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_2]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/w
> e1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue13 "((((-0+(1/we1)*(_b[gamma:gamma_3_1]-(__00000H+(2*_b[lambda:lambda_1]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_1]+6.93889390391e-17)-(__
> 00000H*_b[lambda:lambda_1]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cdf
> w1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_3]*pdfw1m*(w1
> m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_3]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/w
> e1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue14 "((((-0+(1/we1)*(_b[gamma:gamma_4_1]-(__00000H+(2*_b[lambda:lambda_1]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_1]+6.93889390391e-17)-(__
> 00000H*_b[lambda:lambda_1]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cdf
> w1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_4]*pdfw1m*(w1
> m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_4]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/w
> e1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue15 "((((-0+(1/we1)*(_b[gamma:gamma_5_1]-(__00000H+(2*_b[lambda:lambda_1]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_1]+6.93889390391e-17)-(__
> 00000H*_b[lambda:lambda_1]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cdf
> w1m + (_b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_5]*pdfw1m*(w1
> m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_5]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/w
> e1)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue21 "((((-0+(1/we2)*(_b[gamma:gamma_2_1]-(__00000I+(2*_b[lambda:lambda_2]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_2]+-2.77555756156e-17)-(_
> _00000I*_b[lambda:lambda_2]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw2m + (_b[tau:M_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_1]*pdfw2m*(w
> 2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_1]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/
> we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue22 "((((-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000I+(2*_b[lambda:lambda_2]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_2]+-2.77555756156e-17)-(_
> _00000I*_b[lambda:lambda_2]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw2m + (_b[tau:M_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_2]*pdfw2m*(w
> 2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/
> we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue23 "((((-0+(1/we2)*(_b[gamma:gamma_3_2]-(__00000I+(2*_b[lambda:lambda_2]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_2]+-2.77555756156e-17)-(_
> _00000I*_b[lambda:lambda_2]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw2m + (_b[tau:M_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_3]*pdfw2m*(w
> 2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_3]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/
> we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue24 "((((-0+(1/we2)*(_b[gamma:gamma_4_2]-(__00000I+(2*_b[lambda:lambda_2]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_2]+-2.77555756156e-17)-(_
> _00000I*_b[lambda:lambda_2]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw2m + (_b[tau:M_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_4]*pdfw2m*(w
> 2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_4]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/
> we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue25 "((((-0+(1/we2)*(_b[gamma:gamma_5_2]-(__00000I+(2*_b[lambda:lambda_2]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_2]+-2.77555756156e-17)-(_
> _00000I*_b[lambda:lambda_2]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw2m + (_b[tau:M_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_5]*pdfw2m*(w
> 2m-_b[delta:delta_2]*duw2m))/we2)*cdfw2m + (_b[tau:2_5]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/
> we2)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue31 "((((-0+(1/we3)*(_b[gamma:gamma_3_1]-(__00000J+(2*_b[lambda:lambda_3]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_3]+-5.20417042793e-17)-(_
> _00000J*_b[lambda:lambda_3]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw3m + (_b[tau:M_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_1]*pdfw3m*(w
> 3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_1]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/
> we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue32 "((((-0+(1/we3)*(_b[gamma:gamma_3_2]-(__00000J+(2*_b[lambda:lambda_3]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_3]+-5.20417042793e-17)-(_
> _00000J*_b[lambda:lambda_3]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw3m + (_b[tau:M_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_2]*pdfw3m*(w
> 3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_2]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/
> we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue33 "((((-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000J+(2*_b[lambda:lambda_3]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_3]+-5.20417042793e-17)-(_
> _00000J*_b[lambda:lambda_3]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw3m + (_b[tau:M_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_3]*pdfw3m*(w
> 3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/
> we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue34 "((((-0+(1/we3)*(_b[gamma:gamma_4_3]-(__00000J+(2*_b[lambda:lambda_3]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_3]+-5.20417042793e-17)-(_
> _00000J*_b[lambda:lambda_3]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw3m + (_b[tau:M_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_4]*pdfw3m*(w
> 3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_4]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/
> we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue35 "((((-0+(1/we3)*(_b[gamma:gamma_5_3]-(__00000J+(2*_b[lambda:lambda_3]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_3]+-5.20417042793e-17)-(_
> _00000J*_b[lambda:lambda_3]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw3m + (_b[tau:M_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_5]*pdfw3m*(w
> 3m-_b[delta:delta_3]*duw3m))/we3)*cdfw3m + (_b[tau:3_5]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/
> we3)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue41 "((((-0+(1/we4)*(_b[gamma:gamma_4_1]-(__00000K+(2*_b[lambda:lambda_4]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_4]+-3.81639164715e-17)-(_
> _00000K*_b[lambda:lambda_4]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw4m + (_b[tau:M_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_1]*pdfw4m*(w
> 4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_1]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/
> we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue42 "((((-0+(1/we4)*(_b[gamma:gamma_4_2]-(__00000K+(2*_b[lambda:lambda_4]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_4]+-3.81639164715e-17)-(_
> _00000K*_b[lambda:lambda_4]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw4m + (_b[tau:M_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_2]*pdfw4m*(w
> 4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_2]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/
> we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue43 "((((-0+(1/we4)*(_b[gamma:gamma_4_3]-(__00000K+(2*_b[lambda:lambda_4]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_4]+-3.81639164715e-17)-(_
> _00000K*_b[lambda:lambda_4]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw4m + (_b[tau:M_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_3]*pdfw4m*(w
> 4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_3]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/
> we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue44 "((((-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000K+(2*_b[lambda:lambda_4]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_4]+-3.81639164715e-17)-(_
> _00000K*_b[lambda:lambda_4]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw4m + (_b[tau:M_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_4]*pdfw4m*(w
> 4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/
> we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue45 "((((-0+(1/we4)*(_b[gamma:gamma_5_4]-(__00000K+(2*_b[lambda:lambda_4]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_4]+-3.81639164715e-17)-(_
> _00000K*_b[lambda:lambda_4]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw4m + (_b[tau:M_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_5]*pdfw4m*(w
> 4m-_b[delta:delta_4]*duw4m))/we4)*cdfw4m + (_b[tau:4_5]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/
> we4)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue51 "((((-0+(1/we5)*(_b[gamma:gamma_5_1]-(__00000L+(2*_b[lambda:lambda_5]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_5]+-1.42247325030e-16)-(_
> _00000L*_b[lambda:lambda_5]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw5m + (_b[tau:M_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_1]*pdfw5m*(w
> 5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_1]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/
> we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue52 "((((-0+(1/we5)*(_b[gamma:gamma_5_2]-(__00000L+(2*_b[lambda:lambda_5]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_5]+-1.42247325030e-16)-(_
> _00000L*_b[lambda:lambda_5]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw5m + (_b[tau:M_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_2]*pdfw5m*(w
> 5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_2]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/
> we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue53 "((((-0+(1/we5)*(_b[gamma:gamma_5_3]-(__00000L+(2*_b[lambda:lambda_5]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_5]+-1.42247325030e-16)-(_
> _00000L*_b[lambda:lambda_5]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw5m + (_b[tau:M_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_3]*pdfw5m*(w
> 5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_3]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/
> we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue54 "((((-0+(1/we5)*(_b[gamma:gamma_5_4]-(__00000L+(2*_b[lambda:lambda_5]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_5]+-1.42247325030e-16)-(_
> _00000L*_b[lambda:lambda_5]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw5m + (_b[tau:M_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_4]*pdfw5m*(w
> 5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_4]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/
> we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i'')-(_b[beta:beta_`i'
> ]*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar')))*(_b[alpha:alpha_`i']+`gsum`i''
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue55 "((((-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000L+(2*_b[lambda:lambda_5]/exp(__00
> 0009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_5]+-1.42247325030e-16)-(_
> _00000L*_b[lambda:lambda_5]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cd
> fw5m + (_b[tau:M_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_5]*pdfw5m*(w
> 5m-_b[delta:delta_5]*duw5m))/we5)*cdfw5m + (_b[tau:5_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/
> we5)"
    - }
    - }
    - }
    - tempname elasu seu
    - mat elasu=J(`e(ngoods)',`e(ngoods)',0)
    = mat elasu=J(5,5,0)
    - mat seu=J(`e(ngoods)',`e(ngoods)',0)
    = mat seu=J(5,5,0)
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - nlcom(${ue`i'`j'})
    = nlcom(((((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000H+(2*_b[lambda:lambda_1]/exp(__000009)/e
> xp(__00000A))*(lnexpm-__000008-ln(__00000B)))*(_b[alpha:alpha_1]+6.93889390391e-17)-(__00000H*
> _b[lambda:lambda_1]/exp(__000009)/exp(__00000A))*(lnexpm-__000008-ln(__00000B))^2))*cdfw1m + (
> _b[tau:M_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_1]*pdfw1m*(w1m-_b[de
> lta:delta_1]*duw1m))/we1)*cdfw1m + (_b[tau:1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))

equation lambda not found
      mat elasu[`i',`j'] = r(b)
      mat seu[`i',`j'] = r(V)
      mat seu[`i',`j'] = sqrt(seu[`i',`j'])
      }
      }
    ------------------------------------------------------------ end quaidsce_estat.DoUncomp ---
    }
  ----------------------------------------------------------------------- end quaidsce_estat ---
  return add
  exit
  }
---------------------------------------------------------------------------------- end estat ---
r(111);

. mat li e(b)
------------------------------------------------------------------------- begin _matrix_cmds ---
- version 11.0
- gettoken sub rest : 0, parse(" ,")
- local lsub : length local sub
- if "`sub'" == substr("list",1,max(1,`lsub')) {
= if "li" == substr("list",1,max(1,2)) {
- List `rest'
= List  e(b)
  ------------------------------------------------------------------ begin _matrix_cmds.List ---
  - version 11
  - syntax anything(id="matrix name" name=mname) [, noBlank noHAlf noHeader noNames Format(strin
> g) TItle(string) nodotz ]
  - confirm matrix `mname'
  = confirm matrix e(b)
  - if `"`format'"' != "" {
  = if `""' != "" {
    confirm numeric format `format'
    }
  - local bl = "`blank'" == ""
  = local bl = "" == ""
  - local ha = "`half'" == ""
  = local ha = "" == ""
  - local he = "`header'" == ""
  = local he = "" == ""
  - local na = "`names'" == ""
  = local na = "" == ""
  - local dz = "`dotz'" == ""
  = local dz = "" == ""
  - local title : list clean title
  - mata: st_matrix_list( "`mname'", "`format'", `"`title'"', `bl',`ha',`he',`na',`dz')
  = mata: st_matrix_list( "e(b)", "", `""', 1,1,1,1,1)

e(b)[1,76]
           alpha:        alpha:        alpha:        alpha:        alpha:         beta:
         alpha_1       alpha_2       alpha_3       alpha_4       alpha_5        beta_1
y1     -.1071668     .26752213     .50123363     .55566641     .54300199     .01879587

            beta:         beta:         beta:         beta:        gamma:        gamma:
          beta_2        beta_3        beta_4        beta_5     gamma_1_1     gamma_2_1
y1    -.02142575    -.00264912     .00584855    -.00225003     .12221927    -.04224118

           gamma:        gamma:        gamma:        gamma:        gamma:        gamma:
       gamma_3_1     gamma_4_1     gamma_5_1     gamma_2_2     gamma_3_2     gamma_4_2
y1    -.04356931    -.04275848      .0063497     .06836061     .00721364    -.01257029

           gamma:        gamma:        gamma:        gamma:        gamma:        gamma:
       gamma_5_2     gamma_3_3     gamma_4_3     gamma_5_3     gamma_4_4     gamma_5_4
y1    -.02076279     .04913357    -.01064376    -.00213414     .05549362     .01047891

           gamma:        delta:        delta:        delta:        delta:        delta:
       gamma_5_5       delta_1       delta_2       delta_3       delta_4       delta_5
y1     .00606831     1.4517517     -.2299098    -1.0993614    -.60941382    -.62561475

             eta:          eta:          eta:          eta:          eta:          rho:
    eta_income_1  eta_income_2  eta_income_3  eta_income_4  eta_income_5    rho_income
y1    -.00001504    -.00004016    -.00015477    -.00020899     .00041896    -.01774263

             tau:          tau:          tau:          tau:          tau:          tau:
            p1_1          p2_1          p3_1          p4_1          p5_1           M_1
y1    -.00085461     .01796795    -.02054544    -.10222802    -.00555271    -.00365389

             tau:          tau:          tau:          tau:          tau:          tau:
        income_1        cons_1          p1_2          p2_2          p3_2          p4_2
y1     .00509588     .81683921    -.06034865     .09974797     .06774701    -.04913085

             tau:          tau:          tau:          tau:          tau:          tau:
            p5_2           M_2      income_2        cons_2          p1_3          p2_3
y1    -.01190062     .05157819    -.00449222     .67666408     .03924632    -.21495763

             tau:          tau:          tau:          tau:          tau:          tau:
            p3_3          p4_3          p5_3           M_3      income_3        cons_3
y1    -.06843537    -.01081267     .04126641     .01893106    -.00484262     .55880298

             tau:          tau:          tau:          tau:          tau:          tau:
            p1_4          p2_4          p3_4          p4_4          p5_4           M_4
y1    -.00221431    -.02449723     .05087546    -.03065156     .05373935    -.01143646

             tau:          tau:          tau:          tau:          tau:          tau:
        income_4        cons_4          p1_5          p2_5          p3_5          p4_5
y1    -.00593049     .80430872     -.0176705     .03973809    -.03087729      .0303323

             tau:          tau:          tau:          tau:
            p5_5           M_5      income_5        cons_5
y1    -.03719137     .00892917    -.00310901      .3065806
  -------------------------------------------------------------------- end _matrix_cmds.List ---
- exit
--------------------------------------------------------------------------- end _matrix_cmds ---

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. estat uncomp
-------------------------------------------------------------------------------- begin estat ---
- version 9
- local ver : di "version " string(_caller()) ", missing :"
- if `"`e(cmd)'"' == "" {
= if `"quaidsce"' == "" {
  error 301
  }
- if `"`e(estat_cmd)'"' != "" {
= if `"quaidsce_estat"' != "" {
- `ver' `e(estat_cmd)' `0'
= version 16, missing : quaidsce_estat uncomp
  --------------------------------------------------------------------- begin quaidsce_estat ---
  - version 12
  - if "`e(cmd)'" != "quaidsce" {
  = if "quaidsce" != "quaidsce" {
    exit 301
    }
  - gettoken key 0 : 0, parse(", ")
  - local lkey = length(`"`key'"')
  = local lkey = length(`"uncomp"')
  - if `"`key'"' == substr("expenditure", 1, max(3, `lkey')) {
  = if `"uncomp"' == substr("expenditure", 1, max(3, 6)) {
    DoExp `0'
    }
  - else if `"`key'"' == substr("uncompensated", 1, max(6, `lkey')) {
  = else if `"uncomp"' == substr("uncompensated", 1, max(6, 6)) {
  - DoUncomp `0'
  = DoUncomp 
    ---------------------------------------------------------- begin quaidsce_estat.DoUncomp ---
    - syntax [if] [in]
    - marksample touse
    - if "`e(lnprices)'" != "" {
    = if "" != "" {
      local i 1
      tempname lnpr
      local lnpr ""
      foreach var of varlist `e(lnprices)' {
      local lnp`i' `var'
      local lnpr `lnpr' `lnp`i''
      local `++i'
      }
      }
    - else {
    - local i 1
    - tempname lnpr
    - local lnpr ""
    - foreach var of varlist `e(prices)' {
    = foreach var of varlist p1 p2 p3 p4 p5 {
    - tempvar lnp`i'
    = tempvar lnp1
    - gen double `lnp`i'' = ln(`var')
    = gen double __000002 = ln(p1)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr  __000002
    - local `++i'
    = local 2
    - }
    - tempvar lnp`i'
    = tempvar lnp2
    - gen double `lnp`i'' = ln(`var')
    = gen double __000003 = ln(p2)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003
    - local `++i'
    = local 3
    - }
    - tempvar lnp`i'
    = tempvar lnp3
    - gen double `lnp`i'' = ln(`var')
    = gen double __000004 = ln(p3)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004
    - local `++i'
    = local 4
    - }
    - tempvar lnp`i'
    = tempvar lnp4
    - gen double `lnp`i'' = ln(`var')
    = gen double __000005 = ln(p4)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005
    - local `++i'
    = local 5
    - }
    - tempvar lnp`i'
    = tempvar lnp5
    - gen double `lnp`i'' = ln(`var')
    = gen double __000006 = ln(p5)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005 __000006
    - local `++i'
    = local 6
    - }
    - }
    - if "`e(lnexpenditure)'" != "" {
    = if "" != "" {
      local lnexp `e(lnexpenditure)'
      }
    - else {
    - tempvar exp
    - gen double `exp' = ln(`e(expenditure)')
    = gen double __000007 = ln(expfd)
    - local lnexp `exp'
    = local lnexp __000007
    - }
    - if "`e(lhs)'" != "" {
    = if "w1 w2 w3 w4 w5" != "" {
    - local i 1
    - foreach var of varlist `e(lhs)' {
    = foreach var of varlist w1 w2 w3 w4 w5 {
    - local w`i' `var'
    = local w1 w1
    - local `++i'
    = local 2
    - }
    - local w`i' `var'
    = local w2 w2
    - local `++i'
    = local 3
    - }
    - local w`i' `var'
    = local w3 w3
    - local `++i'
    = local 4
    - }
    - local w`i' `var'
    = local w4 w4
    - local `++i'
    = local 5
    - }
    - local w`i' `var'
    = local w5 w5
    - local `++i'
    = local 6
    - }
    - }
    - local ndemo = `e(ndemos)'
    = local ndemo = 1
    - quietly {
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - foreach x of varlist w* `lnpr' cdfw* pdfw* lnexp duw* `e(demographics)' {
    = foreach x of varlist w* __000002 __000003 __000004 __000005 __000006 cdfw* pdfw* lnexp duw
> * income {
    - sum `x'
    = sum w1
    - scalar `x'm=r(mean)
    = scalar w1m=r(mean)
    - }
    - sum `x'
    = sum w2
    - scalar `x'm=r(mean)
    = scalar w2m=r(mean)
    - }
    - sum `x'
    = sum w3
    - scalar `x'm=r(mean)
    = scalar w3m=r(mean)
    - }
    - sum `x'
    = sum w4
    - scalar `x'm=r(mean)
    = scalar w4m=r(mean)
    - }
    - sum `x'
    = sum w5
    - scalar `x'm=r(mean)
    = scalar w5m=r(mean)
    - }
    - sum `x'
    = sum ww_1
    - scalar `x'm=r(mean)
    = scalar ww_1m=r(mean)
    - }
    - sum `x'
    = sum ww_2
    - scalar `x'm=r(mean)
    = scalar ww_2m=r(mean)
    - }
    - sum `x'
    = sum ww_3
    - scalar `x'm=r(mean)
    = scalar ww_3m=r(mean)
    - }
    - sum `x'
    = sum ww_4
    - scalar `x'm=r(mean)
    = scalar ww_4m=r(mean)
    - }
    - sum `x'
    = sum ww_5
    - scalar `x'm=r(mean)
    = scalar ww_5m=r(mean)
    - }
    - sum `x'
    = sum __000002
    - scalar `x'm=r(mean)
    = scalar __000002m=r(mean)
    - }
    - sum `x'
    = sum __000003
    - scalar `x'm=r(mean)
    = scalar __000003m=r(mean)
    - }
    - sum `x'
    = sum __000004
    - scalar `x'm=r(mean)
    = scalar __000004m=r(mean)
    - }
    - sum `x'
    = sum __000005
    - scalar `x'm=r(mean)
    = scalar __000005m=r(mean)
    - }
    - sum `x'
    = sum __000006
    - scalar `x'm=r(mean)
    = scalar __000006m=r(mean)
    - }
    - sum `x'
    = sum cdfw1
    - scalar `x'm=r(mean)
    = scalar cdfw1m=r(mean)
    - }
    - sum `x'
    = sum cdfw2
    - scalar `x'm=r(mean)
    = scalar cdfw2m=r(mean)
    - }
    - sum `x'
    = sum cdfw3
    - scalar `x'm=r(mean)
    = scalar cdfw3m=r(mean)
    - }
    - sum `x'
    = sum cdfw4
    - scalar `x'm=r(mean)
    = scalar cdfw4m=r(mean)
    - }
    - sum `x'
    = sum cdfw5
    - scalar `x'm=r(mean)
    = scalar cdfw5m=r(mean)
    - }
    - sum `x'
    = sum pdfw1
    - scalar `x'm=r(mean)
    = scalar pdfw1m=r(mean)
    - }
    - sum `x'
    = sum pdfw2
    - scalar `x'm=r(mean)
    = scalar pdfw2m=r(mean)
    - }
    - sum `x'
    = sum pdfw3
    - scalar `x'm=r(mean)
    = scalar pdfw3m=r(mean)
    - }
    - sum `x'
    = sum pdfw4
    - scalar `x'm=r(mean)
    = scalar pdfw4m=r(mean)
    - }
    - sum `x'
    = sum pdfw5
    - scalar `x'm=r(mean)
    = scalar pdfw5m=r(mean)
    - }
    - sum `x'
    = sum lnexp
    - scalar `x'm=r(mean)
    = scalar lnexpm=r(mean)
    - }
    - sum `x'
    = sum duw1
    - scalar `x'm=r(mean)
    = scalar duw1m=r(mean)
    - }
    - sum `x'
    = sum duw2
    - scalar `x'm=r(mean)
    = scalar duw2m=r(mean)
    - }
    - sum `x'
    = sum duw3
    - scalar `x'm=r(mean)
    = scalar duw3m=r(mean)
    - }
    - sum `x'
    = sum duw4
    - scalar `x'm=r(mean)
    = scalar duw4m=r(mean)
    - }
    - sum `x'
    = sum duw5
    - scalar `x'm=r(mean)
    = scalar duw5m=r(mean)
    - }
    - sum `x'
    = sum income
    - scalar `x'm=r(mean)
    = scalar incomem=r(mean)
    - }
    - }
    - else {
      foreach x of varlist w* `lnpr' lnexp `e(demographics)' {
      sum `x'
      scalar `x'm=r(mean)
      }
      }
    - }
    - tempname lnpindex
    - scalar `lnpindex'= `e(anot)'
    = scalar __000008= 10
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_1]*__000002m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_1_1]*(__000002m*__000002m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000002m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000002m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000002m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000002m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_2]*__000003m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000003m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_2]*(__000003m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000003m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000003m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000003m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_3]*__000004m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000004m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000004m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_3]*(__000004m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000004m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000004m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_4]*__000005m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000005m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000005m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000005m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_4]*(__000005m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000005m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_5]*__000006m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000006m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000006m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000006m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000006m*__000005m))
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_5]*(__000006m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - tempname gsum`i'
    = tempname gsum1
    - local gsum`i' = 0
    = local gsum1 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = 0+_b[gamma:gamma_1_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0591535938405046+_b[gamma:gamma_2_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0387090477223783+_b[gamma:gamma_3_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0176216913007004+_b[gamma:gamma_4_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = -.0030732281789807+_b[gamma:gamma_5_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum2
    - local gsum`i' = 0
    = local gsum2 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum2 = 0+_b[gamma:gamma_2_1]*__000003m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = .0277222105949546+_b[gamma:gamma_2_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0171417662329056+_b[gamma:gamma_3_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0218759630132105+_b[gamma:gamma_4_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0136262845713008+_b[gamma:gamma_5_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum3
    - local gsum`i' = 0
    = local gsum3 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = 0+_b[gamma:gamma_3_1]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = -.0128063801117631+_b[gamma:gamma_3_2]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = -.0106860661635694+_b[gamma:gamma_3_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0037558222561715+_b[gamma:gamma_4_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0006272890983304+_b[gamma:gamma_5_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum4
    - local gsum`i' = 0
    = local gsum4 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = 0+_b[gamma:gamma_4_1]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0254535866849024+_b[gamma:gamma_4_2]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0329365201319483+_b[gamma:gamma_4_3]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .0392726162880456+_b[gamma:gamma_4_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .006237960913345+_b[gamma:gamma_5_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum5
    - local gsum`i' = 0
    = local gsum5 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = 0+_b[gamma:gamma_5_1]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = .0066241956441079+_b[gamma:gamma_5_2]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0150361515478514+_b[gamma:gamma_5_3]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0172625445820406+_b[gamma:gamma_5_4]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum5 = -.006330642161351+_b[gamma:gamma_5_5]*__000006m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      tempname bofp
      scalar `bofp'= _b[beta:beta_1]*`lnp1'm
      forvalues i = 2/`=e(ngoods)' {
      scalar `bofp'= `bofp' + _b[beta:beta_`i']*`lnp`i''m
      }
      }
    - if `ndemo' > 0 {
    = if 1 > 0 {
    - tempname cofp mbar
    - scalar `cofp'= 1
    = scalar __00000E= 1
    - scalar `mbar'= 1
    = scalar __00000F= 1
    - foreach var of varlist `e(demographics)' {
    = foreach var of varlist income {
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_1]*__000002m)
    - tempname betanz`i'
    = tempname betanz1
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000G=_b[beta:beta_1]+(incomem*_b[eta:eta_income_1])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_2]*__000003m)
    - tempname betanz`i'
    = tempname betanz2
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000H=_b[beta:beta_2]+(incomem*_b[eta:eta_income_2])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_3]*__000004m)
    - tempname betanz`i'
    = tempname betanz3
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000I=_b[beta:beta_3]+(incomem*_b[eta:eta_income_3])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_4]*__000005m)
    - tempname betanz`i'
    = tempname betanz4
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000J=_b[beta:beta_4]+(incomem*_b[eta:eta_income_4])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_5]*__000006m)
    - tempname betanz`i'
    = tempname betanz5
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000K=_b[beta:beta_5]+(incomem*_b[eta:eta_income_5])
    - }
    - scalar `mbar'= `mbar' + (_b[rho:rho_`var']*`var'm)
    = scalar __00000F= __00000F + (_b[rho:rho_income]*incomem)
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we1 = _b[alpha:alpha_1]+__00000G*(lnexpm-__000008-ln(__00000F)) + 3.94649590785e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we1 = we1*cdfw1m + _b[delta:delta_1]*pdfw1m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we2 = _b[alpha:alpha_2]+__00000H*(lnexpm-__000008-ln(__00000F)) + 3.46944695195e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we2 = we2*cdfw2m + _b[delta:delta_2]*pdfw2m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we3 = _b[alpha:alpha_3]+__00000I*(lnexpm-__000008-ln(__00000F)) + -1.07119174642e-1
> 6
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we3 = we3*cdfw3m + _b[delta:delta_3]*pdfw3m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we4 = _b[alpha:alpha_4]+__00000J*(lnexpm-__000008-ln(__00000F)) + -3.12250225676e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we4 = we4*cdfw4m + _b[delta:delta_4]*pdfw4m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we5 = _b[alpha:alpha_5]+__00000K*(lnexpm-__000008-ln(__00000F)) + -7.89299181569e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we5 = we5*cdfw5m + _b[delta:delta_5]*pdfw5m
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue11 "(-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue11 "((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17)))*cdfw1m + (_b[tau:1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue12 "(-0+(1/we1)*(_b[gamma:gamma_1_2]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue12 "((-0+(1/we1)*(_b[gamma:gamma_1_2]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17)))*cdfw1m + (_b[tau:1_2]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue13 "(-0+(1/we1)*(_b[gamma:gamma_1_3]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue13 "((-0+(1/we1)*(_b[gamma:gamma_1_3]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17)))*cdfw1m + (_b[tau:1_3]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue14 "(-0+(1/we1)*(_b[gamma:gamma_1_4]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue14 "((-0+(1/we1)*(_b[gamma:gamma_1_4]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17)))*cdfw1m + (_b[tau:1_4]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue15 "(-0+(1/we1)*(_b[gamma:gamma_1_5]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue15 "((-0+(1/we1)*(_b[gamma:gamma_1_5]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17)))*cdfw1m + (_b[tau:1_5]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=2 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue21 "(-0+(1/we2)*(_b[gamma:gamma_1_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue21 "((-0+(1/we2)*(_b[gamma:gamma_1_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17)))*cdfw2m + (_b[tau:2_1]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue22 "(-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue22 "((-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17)))*cdfw2m + (_b[tau:2_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue23 "(-0+(1/we2)*(_b[gamma:gamma_2_3]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue23 "((-0+(1/we2)*(_b[gamma:gamma_2_3]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17)))*cdfw2m + (_b[tau:2_3]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue24 "(-0+(1/we2)*(_b[gamma:gamma_2_4]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue24 "((-0+(1/we2)*(_b[gamma:gamma_2_4]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17)))*cdfw2m + (_b[tau:2_4]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue25 "(-0+(1/we2)*(_b[gamma:gamma_2_5]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue25 "((-0+(1/we2)*(_b[gamma:gamma_2_5]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17)))*cdfw2m + (_b[tau:2_5]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=3 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue31 "(-0+(1/we3)*(_b[gamma:gamma_1_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue31 "((-0+(1/we3)*(_b[gamma:gamma_1_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16)))*cdfw3m + (_b[tau:3_1]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=3 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue32 "(-0+(1/we3)*(_b[gamma:gamma_2_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue32 "((-0+(1/we3)*(_b[gamma:gamma_2_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16)))*cdfw3m + (_b[tau:3_2]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue33 "(-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue33 "((-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16)))*cdfw3m + (_b[tau:3_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue34 "(-0+(1/we3)*(_b[gamma:gamma_3_4]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue34 "((-0+(1/we3)*(_b[gamma:gamma_3_4]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16)))*cdfw3m + (_b[tau:3_4]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue35 "(-0+(1/we3)*(_b[gamma:gamma_3_5]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue35 "((-0+(1/we3)*(_b[gamma:gamma_3_5]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16)))*cdfw3m + (_b[tau:3_5]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue41 "(-0+(1/we4)*(_b[gamma:gamma_1_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue41 "((-0+(1/we4)*(_b[gamma:gamma_1_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17)))*cdfw4m + (_b[tau:4_1]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue42 "(-0+(1/we4)*(_b[gamma:gamma_2_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue42 "((-0+(1/we4)*(_b[gamma:gamma_2_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17)))*cdfw4m + (_b[tau:4_2]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue43 "(-0+(1/we4)*(_b[gamma:gamma_3_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue43 "((-0+(1/we4)*(_b[gamma:gamma_3_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17)))*cdfw4m + (_b[tau:4_3]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=4 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue44 "(-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue44 "((-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17)))*cdfw4m + (_b[tau:4_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=4 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue45 "(-0+(1/we4)*(_b[gamma:gamma_4_5]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue45 "((-0+(1/we4)*(_b[gamma:gamma_4_5]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17)))*cdfw4m + (_b[tau:4_5]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue51 "(-0+(1/we5)*(_b[gamma:gamma_1_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue51 "((-0+(1/we5)*(_b[gamma:gamma_1_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17)))*cdfw5m + (_b[tau:5_1]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue52 "(-0+(1/we5)*(_b[gamma:gamma_2_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue52 "((-0+(1/we5)*(_b[gamma:gamma_2_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17)))*cdfw5m + (_b[tau:5_2]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue53 "(-0+(1/we5)*(_b[gamma:gamma_3_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue53 "((-0+(1/we5)*(_b[gamma:gamma_3_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17)))*cdfw5m + (_b[tau:5_3]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue54 "(-0+(1/we5)*(_b[gamma:gamma_4_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17)))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue54 "((-0+(1/we5)*(_b[gamma:gamma_4_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17)))*cdfw5m + (_b[tau:5_4]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i'')))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=5 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
    = global ue55 "(-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17)))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i'')))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_`
> i']*duw`i'm))/we`i')"
    = global ue55 "((-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17)))*cdfw5m + (_b[tau:5_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - }
    - tempname elasu seu
    - mat elasu=J(`e(ngoods)',`e(ngoods)',0)
    = mat elasu=J(5,5,0)
    - mat seu=J(`e(ngoods)',`e(ngoods)',0)
    = mat seu=J(5,5,0)
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - nlcom(${ue`i'`j'})
    = nlcom(((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17)))*
> cdfw1m + (_b[tau:1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))
parentheses unbalanced
      mat elasu[`i',`j'] = r(b)
      mat seu[`i',`j'] = r(V)
      mat seu[`i',`j'] = sqrt(seu[`i',`j'])
      }
      }
    ------------------------------------------------------------ end quaidsce_estat.DoUncomp ---
    }
  ----------------------------------------------------------------------- end quaidsce_estat ---
  return add
  exit
  }
---------------------------------------------------------------------------------- end estat ---
r(132);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. set trace off

. estat uncomp

[tau:1_1] not found
r(111);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. estat uncomp

       _nl_1:  ((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17)
> )))*cdfw1m + (_b[tau:p1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.3789146   .0793551    -4.77   0.000    -.5344477   -.2233815
------------------------------------------------------------------------------

[gamma:gamma_1_2] not found
r(111);

. set trace on

. estat uncomp
-------------------------------------------------------------------------------- begin estat ---
- version 9
- local ver : di "version " string(_caller()) ", missing :"
- if `"`e(cmd)'"' == "" {
= if `"quaidsce"' == "" {
  error 301
  }
- if `"`e(estat_cmd)'"' != "" {
= if `"quaidsce_estat"' != "" {
- `ver' `e(estat_cmd)' `0'
= version 16, missing : quaidsce_estat uncomp
  --------------------------------------------------------------------- begin quaidsce_estat ---
  - version 12
  - if "`e(cmd)'" != "quaidsce" {
  = if "quaidsce" != "quaidsce" {
    exit 301
    }
  - gettoken key 0 : 0, parse(", ")
  - local lkey = length(`"`key'"')
  = local lkey = length(`"uncomp"')
  - if `"`key'"' == substr("expenditure", 1, max(3, `lkey')) {
  = if `"uncomp"' == substr("expenditure", 1, max(3, 6)) {
    DoExp `0'
    }
  - else if `"`key'"' == substr("uncompensated", 1, max(6, `lkey')) {
  = else if `"uncomp"' == substr("uncompensated", 1, max(6, 6)) {
  - DoUncomp `0'
  = DoUncomp 
    ---------------------------------------------------------- begin quaidsce_estat.DoUncomp ---
    - syntax [if] [in]
    - marksample touse
    - if "`e(lnprices)'" != "" {
    = if "" != "" {
      local i 1
      tempname lnpr
      local lnpr ""
      foreach var of varlist `e(lnprices)' {
      local lnp`i' `var'
      local lnpr `lnpr' `lnp`i''
      local `++i'
      }
      }
    - else {
    - local i 1
    - tempname lnpr
    - local lnpr ""
    - foreach var of varlist `e(prices)' {
    = foreach var of varlist p1 p2 p3 p4 p5 {
    - tempvar lnp`i'
    = tempvar lnp1
    - gen double `lnp`i'' = ln(`var')
    = gen double __000002 = ln(p1)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr  __000002
    - local `++i'
    = local 2
    - }
    - tempvar lnp`i'
    = tempvar lnp2
    - gen double `lnp`i'' = ln(`var')
    = gen double __000003 = ln(p2)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003
    - local `++i'
    = local 3
    - }
    - tempvar lnp`i'
    = tempvar lnp3
    - gen double `lnp`i'' = ln(`var')
    = gen double __000004 = ln(p3)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004
    - local `++i'
    = local 4
    - }
    - tempvar lnp`i'
    = tempvar lnp4
    - gen double `lnp`i'' = ln(`var')
    = gen double __000005 = ln(p4)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005
    - local `++i'
    = local 5
    - }
    - tempvar lnp`i'
    = tempvar lnp5
    - gen double `lnp`i'' = ln(`var')
    = gen double __000006 = ln(p5)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005 __000006
    - local `++i'
    = local 6
    - }
    - }
    - if "`e(lnexpenditure)'" != "" {
    = if "" != "" {
      local lnexp `e(lnexpenditure)'
      }
    - else {
    - tempvar exp
    - gen double `exp' = ln(`e(expenditure)')
    = gen double __000007 = ln(expfd)
    - local lnexp `exp'
    = local lnexp __000007
    - }
    - if "`e(lhs)'" != "" {
    = if "w1 w2 w3 w4 w5" != "" {
    - local i 1
    - foreach var of varlist `e(lhs)' {
    = foreach var of varlist w1 w2 w3 w4 w5 {
    - local w`i' `var'
    = local w1 w1
    - local `++i'
    = local 2
    - }
    - local w`i' `var'
    = local w2 w2
    - local `++i'
    = local 3
    - }
    - local w`i' `var'
    = local w3 w3
    - local `++i'
    = local 4
    - }
    - local w`i' `var'
    = local w4 w4
    - local `++i'
    = local 5
    - }
    - local w`i' `var'
    = local w5 w5
    - local `++i'
    = local 6
    - }
    - }
    - local ndemo = `e(ndemos)'
    = local ndemo = 1
    - quietly {
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - foreach x of varlist w* `lnpr' cdfw* pdfw* lnexp duw* `e(demographics)' {
    = foreach x of varlist w* __000002 __000003 __000004 __000005 __000006 cdfw* pdfw* lnexp duw
> * income {
    - sum `x'
    = sum w1
    - scalar `x'm=r(mean)
    = scalar w1m=r(mean)
    - }
    - sum `x'
    = sum w2
    - scalar `x'm=r(mean)
    = scalar w2m=r(mean)
    - }
    - sum `x'
    = sum w3
    - scalar `x'm=r(mean)
    = scalar w3m=r(mean)
    - }
    - sum `x'
    = sum w4
    - scalar `x'm=r(mean)
    = scalar w4m=r(mean)
    - }
    - sum `x'
    = sum w5
    - scalar `x'm=r(mean)
    = scalar w5m=r(mean)
    - }
    - sum `x'
    = sum ww_1
    - scalar `x'm=r(mean)
    = scalar ww_1m=r(mean)
    - }
    - sum `x'
    = sum ww_2
    - scalar `x'm=r(mean)
    = scalar ww_2m=r(mean)
    - }
    - sum `x'
    = sum ww_3
    - scalar `x'm=r(mean)
    = scalar ww_3m=r(mean)
    - }
    - sum `x'
    = sum ww_4
    - scalar `x'm=r(mean)
    = scalar ww_4m=r(mean)
    - }
    - sum `x'
    = sum ww_5
    - scalar `x'm=r(mean)
    = scalar ww_5m=r(mean)
    - }
    - sum `x'
    = sum __000002
    - scalar `x'm=r(mean)
    = scalar __000002m=r(mean)
    - }
    - sum `x'
    = sum __000003
    - scalar `x'm=r(mean)
    = scalar __000003m=r(mean)
    - }
    - sum `x'
    = sum __000004
    - scalar `x'm=r(mean)
    = scalar __000004m=r(mean)
    - }
    - sum `x'
    = sum __000005
    - scalar `x'm=r(mean)
    = scalar __000005m=r(mean)
    - }
    - sum `x'
    = sum __000006
    - scalar `x'm=r(mean)
    = scalar __000006m=r(mean)
    - }
    - sum `x'
    = sum cdfw1
    - scalar `x'm=r(mean)
    = scalar cdfw1m=r(mean)
    - }
    - sum `x'
    = sum cdfw2
    - scalar `x'm=r(mean)
    = scalar cdfw2m=r(mean)
    - }
    - sum `x'
    = sum cdfw3
    - scalar `x'm=r(mean)
    = scalar cdfw3m=r(mean)
    - }
    - sum `x'
    = sum cdfw4
    - scalar `x'm=r(mean)
    = scalar cdfw4m=r(mean)
    - }
    - sum `x'
    = sum cdfw5
    - scalar `x'm=r(mean)
    = scalar cdfw5m=r(mean)
    - }
    - sum `x'
    = sum pdfw1
    - scalar `x'm=r(mean)
    = scalar pdfw1m=r(mean)
    - }
    - sum `x'
    = sum pdfw2
    - scalar `x'm=r(mean)
    = scalar pdfw2m=r(mean)
    - }
    - sum `x'
    = sum pdfw3
    - scalar `x'm=r(mean)
    = scalar pdfw3m=r(mean)
    - }
    - sum `x'
    = sum pdfw4
    - scalar `x'm=r(mean)
    = scalar pdfw4m=r(mean)
    - }
    - sum `x'
    = sum pdfw5
    - scalar `x'm=r(mean)
    = scalar pdfw5m=r(mean)
    - }
    - sum `x'
    = sum lnexp
    - scalar `x'm=r(mean)
    = scalar lnexpm=r(mean)
    - }
    - sum `x'
    = sum duw1
    - scalar `x'm=r(mean)
    = scalar duw1m=r(mean)
    - }
    - sum `x'
    = sum duw2
    - scalar `x'm=r(mean)
    = scalar duw2m=r(mean)
    - }
    - sum `x'
    = sum duw3
    - scalar `x'm=r(mean)
    = scalar duw3m=r(mean)
    - }
    - sum `x'
    = sum duw4
    - scalar `x'm=r(mean)
    = scalar duw4m=r(mean)
    - }
    - sum `x'
    = sum duw5
    - scalar `x'm=r(mean)
    = scalar duw5m=r(mean)
    - }
    - sum `x'
    = sum income
    - scalar `x'm=r(mean)
    = scalar incomem=r(mean)
    - }
    - }
    - else {
      foreach x of varlist w* `lnpr' lnexp `e(demographics)' {
      sum `x'
      scalar `x'm=r(mean)
      }
      }
    - }
    - tempname lnpindex
    - scalar `lnpindex'= `e(anot)'
    = scalar __000008= 10
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_1]*__000002m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_1_1]*(__000002m*__000002m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000002m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000002m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000002m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000002m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_2]*__000003m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000003m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_2]*(__000003m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000003m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000003m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000003m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_3]*__000004m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000004m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000004m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_3]*(__000004m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000004m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000004m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_4]*__000005m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000005m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000005m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000005m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_4]*(__000005m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000005m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_5]*__000006m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000006m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000006m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000006m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000006m*__000005m))
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_5]*(__000006m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - tempname gsum`i'
    = tempname gsum1
    - local gsum`i' = 0
    = local gsum1 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = 0+_b[gamma:gamma_1_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0591535938405046+_b[gamma:gamma_2_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0387090477223783+_b[gamma:gamma_3_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0176216913007004+_b[gamma:gamma_4_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = -.0030732281789807+_b[gamma:gamma_5_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum2
    - local gsum`i' = 0
    = local gsum2 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum2 = 0+_b[gamma:gamma_2_1]*__000003m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = .0277222105949546+_b[gamma:gamma_2_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0171417662329056+_b[gamma:gamma_3_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0218759630132105+_b[gamma:gamma_4_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0136262845713008+_b[gamma:gamma_5_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum3
    - local gsum`i' = 0
    = local gsum3 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = 0+_b[gamma:gamma_3_1]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = -.0128063801117631+_b[gamma:gamma_3_2]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = -.0106860661635694+_b[gamma:gamma_3_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0037558222561715+_b[gamma:gamma_4_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0006272890983304+_b[gamma:gamma_5_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum4
    - local gsum`i' = 0
    = local gsum4 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = 0+_b[gamma:gamma_4_1]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0254535866849024+_b[gamma:gamma_4_2]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0329365201319483+_b[gamma:gamma_4_3]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .0392726162880456+_b[gamma:gamma_4_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .006237960913345+_b[gamma:gamma_5_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum5
    - local gsum`i' = 0
    = local gsum5 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = 0+_b[gamma:gamma_5_1]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = .0066241956441079+_b[gamma:gamma_5_2]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0150361515478514+_b[gamma:gamma_5_3]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0172625445820406+_b[gamma:gamma_5_4]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum5 = -.006330642161351+_b[gamma:gamma_5_5]*__000006m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      tempname bofp
      scalar `bofp'= _b[beta:beta_1]*`lnp1'm
      forvalues i = 2/`=e(ngoods)' {
      scalar `bofp'= `bofp' + _b[beta:beta_`i']*`lnp`i''m
      }
      }
    - if `ndemo' > 0 {
    = if 1 > 0 {
    - tempname cofp mbar
    - scalar `cofp'= 1
    = scalar __00000E= 1
    - scalar `mbar'= 1
    = scalar __00000F= 1
    - foreach var of varlist `e(demographics)' {
    = foreach var of varlist income {
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_1]*__000002m)
    - tempname betanz`i'
    = tempname betanz1
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000G=_b[beta:beta_1]+(incomem*_b[eta:eta_income_1])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_2]*__000003m)
    - tempname betanz`i'
    = tempname betanz2
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000H=_b[beta:beta_2]+(incomem*_b[eta:eta_income_2])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_3]*__000004m)
    - tempname betanz`i'
    = tempname betanz3
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000I=_b[beta:beta_3]+(incomem*_b[eta:eta_income_3])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_4]*__000005m)
    - tempname betanz`i'
    = tempname betanz4
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000J=_b[beta:beta_4]+(incomem*_b[eta:eta_income_4])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_5]*__000006m)
    - tempname betanz`i'
    = tempname betanz5
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000K=_b[beta:beta_5]+(incomem*_b[eta:eta_income_5])
    - }
    - scalar `mbar'= `mbar' + (_b[rho:rho_`var']*`var'm)
    = scalar __00000F= __00000F + (_b[rho:rho_income]*incomem)
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we1 = _b[alpha:alpha_1]+__00000G*(lnexpm-__000008-ln(__00000F)) + 3.94649590785e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we1 = we1*cdfw1m + _b[delta:delta_1]*pdfw1m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we2 = _b[alpha:alpha_2]+__00000H*(lnexpm-__000008-ln(__00000F)) + 3.46944695195e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we2 = we2*cdfw2m + _b[delta:delta_2]*pdfw2m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we3 = _b[alpha:alpha_3]+__00000I*(lnexpm-__000008-ln(__00000F)) + -1.07119174642e-1
> 6
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we3 = we3*cdfw3m + _b[delta:delta_3]*pdfw3m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we4 = _b[alpha:alpha_4]+__00000J*(lnexpm-__000008-ln(__00000F)) + -3.12250225676e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we4 = we4*cdfw4m + _b[delta:delta_4]*pdfw4m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we5 = _b[alpha:alpha_5]+__00000K*(lnexpm-__000008-ln(__00000F)) + -7.89299181569e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we5 = we5*cdfw5m + _b[delta:delta_5]*pdfw5m
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue11 "(-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue11 "((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue12 "(-0+(1/we1)*(_b[gamma:gamma_1_2]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue12 "((-0+(1/we1)*(_b[gamma:gamma_1_2]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_2]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue13 "(-0+(1/we1)*(_b[gamma:gamma_1_3]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue13 "((-0+(1/we1)*(_b[gamma:gamma_1_3]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_3]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue14 "(-0+(1/we1)*(_b[gamma:gamma_1_4]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue14 "((-0+(1/we1)*(_b[gamma:gamma_1_4]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_4]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue15 "(-0+(1/we1)*(_b[gamma:gamma_1_5]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue15 "((-0+(1/we1)*(_b[gamma:gamma_1_5]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_5]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=2 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue21 "(-0+(1/we2)*(_b[gamma:gamma_1_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue21 "((-0+(1/we2)*(_b[gamma:gamma_1_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_1]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue22 "(-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue22 "((-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue23 "(-0+(1/we2)*(_b[gamma:gamma_2_3]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue23 "((-0+(1/we2)*(_b[gamma:gamma_2_3]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_3]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue24 "(-0+(1/we2)*(_b[gamma:gamma_2_4]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue24 "((-0+(1/we2)*(_b[gamma:gamma_2_4]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_4]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue25 "(-0+(1/we2)*(_b[gamma:gamma_2_5]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue25 "((-0+(1/we2)*(_b[gamma:gamma_2_5]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_5]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=3 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue31 "(-0+(1/we3)*(_b[gamma:gamma_1_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue31 "((-0+(1/we3)*(_b[gamma:gamma_1_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_1]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=3 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue32 "(-0+(1/we3)*(_b[gamma:gamma_2_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue32 "((-0+(1/we3)*(_b[gamma:gamma_2_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_2]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue33 "(-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue33 "((-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue34 "(-0+(1/we3)*(_b[gamma:gamma_3_4]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue34 "((-0+(1/we3)*(_b[gamma:gamma_3_4]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_4]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue35 "(-0+(1/we3)*(_b[gamma:gamma_3_5]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue35 "((-0+(1/we3)*(_b[gamma:gamma_3_5]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_5]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue41 "(-0+(1/we4)*(_b[gamma:gamma_1_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue41 "((-0+(1/we4)*(_b[gamma:gamma_1_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_1]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue42 "(-0+(1/we4)*(_b[gamma:gamma_2_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue42 "((-0+(1/we4)*(_b[gamma:gamma_2_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_2]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue43 "(-0+(1/we4)*(_b[gamma:gamma_3_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue43 "((-0+(1/we4)*(_b[gamma:gamma_3_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_3]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=4 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue44 "(-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue44 "((-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=4 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue45 "(-0+(1/we4)*(_b[gamma:gamma_4_5]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue45 "((-0+(1/we4)*(_b[gamma:gamma_4_5]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_5]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue51 "(-0+(1/we5)*(_b[gamma:gamma_1_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue51 "((-0+(1/we5)*(_b[gamma:gamma_1_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_1]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue52 "(-0+(1/we5)*(_b[gamma:gamma_2_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue52 "((-0+(1/we5)*(_b[gamma:gamma_2_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_2]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue53 "(-0+(1/we5)*(_b[gamma:gamma_3_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue53 "((-0+(1/we5)*(_b[gamma:gamma_3_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_3]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue54 "(-0+(1/we5)*(_b[gamma:gamma_4_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue54 "((-0+(1/we5)*(_b[gamma:gamma_4_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_4]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=5 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue55 "(-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue55 "((-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - }
    - tempname elasu seu
    - mat elasu=J(`e(ngoods)',`e(ngoods)',0)
    = mat elasu=J(5,5,0)
    - mat seu=J(`e(ngoods)',`e(ngoods)',0)
    = mat seu=J(5,5,0)
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - nlcom(${ue`i'`j'})
    = nlcom(((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17))))
> *cdfw1m + (_b[tau:p1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))

       _nl_1:  ((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17)
> )))*cdfw1m + (_b[tau:p1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.3789146   .0793551    -4.77   0.000    -.5344477   -.2233815
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[1,1] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[1,1] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[1,1] = sqrt(seu[1,1])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we1)*(_b[gamma:gamma_1_2]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17))))
> *cdfw1m + (_b[tau:p1_2]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))

[gamma:gamma_1_2] not found
      mat elasu[`i',`j'] = r(b)
      mat seu[`i',`j'] = r(V)
      mat seu[`i',`j'] = sqrt(seu[`i',`j'])
      }
      }
    ------------------------------------------------------------ end quaidsce_estat.DoUncomp ---
    }
  ----------------------------------------------------------------------- end quaidsce_estat ---
  return add
  exit
  }
---------------------------------------------------------------------------------- end estat ---
r(111);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. estat uncomp
-------------------------------------------------------------------------------- begin estat ---
- version 9
- local ver : di "version " string(_caller()) ", missing :"
- if `"`e(cmd)'"' == "" {
= if `"quaidsce"' == "" {
  error 301
  }
- if `"`e(estat_cmd)'"' != "" {
= if `"quaidsce_estat"' != "" {
- `ver' `e(estat_cmd)' `0'
= version 16, missing : quaidsce_estat uncomp
  --------------------------------------------------------------------- begin quaidsce_estat ---
  - version 12
  - if "`e(cmd)'" != "quaidsce" {
  = if "quaidsce" != "quaidsce" {
    exit 301
    }
  - gettoken key 0 : 0, parse(", ")
  - local lkey = length(`"`key'"')
  = local lkey = length(`"uncomp"')
  - if `"`key'"' == substr("expenditure", 1, max(3, `lkey')) {
  = if `"uncomp"' == substr("expenditure", 1, max(3, 6)) {
    DoExp `0'
    }
  - else if `"`key'"' == substr("uncompensated", 1, max(6, `lkey')) {
  = else if `"uncomp"' == substr("uncompensated", 1, max(6, 6)) {
  - DoUncomp `0'
  = DoUncomp 
    ---------------------------------------------------------- begin quaidsce_estat.DoUncomp ---
    - syntax [if] [in]
    - marksample touse
    - if "`e(lnprices)'" != "" {
    = if "" != "" {
      local i 1
      tempname lnpr
      local lnpr ""
      foreach var of varlist `e(lnprices)' {
      local lnp`i' `var'
      local lnpr `lnpr' `lnp`i''
      local `++i'
      }
      }
    - else {
    - local i 1
    - tempname lnpr
    - local lnpr ""
    - foreach var of varlist `e(prices)' {
    = foreach var of varlist p1 p2 p3 p4 p5 {
    - tempvar lnp`i'
    = tempvar lnp1
    - gen double `lnp`i'' = ln(`var')
    = gen double __000002 = ln(p1)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr  __000002
    - local `++i'
    = local 2
    - }
    - tempvar lnp`i'
    = tempvar lnp2
    - gen double `lnp`i'' = ln(`var')
    = gen double __000003 = ln(p2)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003
    - local `++i'
    = local 3
    - }
    - tempvar lnp`i'
    = tempvar lnp3
    - gen double `lnp`i'' = ln(`var')
    = gen double __000004 = ln(p3)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004
    - local `++i'
    = local 4
    - }
    - tempvar lnp`i'
    = tempvar lnp4
    - gen double `lnp`i'' = ln(`var')
    = gen double __000005 = ln(p4)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005
    - local `++i'
    = local 5
    - }
    - tempvar lnp`i'
    = tempvar lnp5
    - gen double `lnp`i'' = ln(`var')
    = gen double __000006 = ln(p5)
    - local lnpr `lnpr' `lnp`i''
    = local lnpr __000002 __000003 __000004 __000005 __000006
    - local `++i'
    = local 6
    - }
    - }
    - if "`e(lnexpenditure)'" != "" {
    = if "" != "" {
      local lnexp `e(lnexpenditure)'
      }
    - else {
    - tempvar exp
    - gen double `exp' = ln(`e(expenditure)')
    = gen double __000007 = ln(expfd)
    - local lnexp `exp'
    = local lnexp __000007
    - }
    - if "`e(lhs)'" != "" {
    = if "w1 w2 w3 w4 w5" != "" {
    - local i 1
    - foreach var of varlist `e(lhs)' {
    = foreach var of varlist w1 w2 w3 w4 w5 {
    - local w`i' `var'
    = local w1 w1
    - local `++i'
    = local 2
    - }
    - local w`i' `var'
    = local w2 w2
    - local `++i'
    = local 3
    - }
    - local w`i' `var'
    = local w3 w3
    - local `++i'
    = local 4
    - }
    - local w`i' `var'
    = local w4 w4
    - local `++i'
    = local 5
    - }
    - local w`i' `var'
    = local w5 w5
    - local `++i'
    = local 6
    - }
    - }
    - local ndemo = `e(ndemos)'
    = local ndemo = 1
    - quietly {
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - foreach x of varlist w* `lnpr' cdfw* pdfw* lnexp duw* `e(demographics)' {
    = foreach x of varlist w* __000002 __000003 __000004 __000005 __000006 cdfw* pdfw* lnexp duw
> * income {
    - sum `x'
    = sum w1
    - scalar `x'm=r(mean)
    = scalar w1m=r(mean)
    - }
    - sum `x'
    = sum w2
    - scalar `x'm=r(mean)
    = scalar w2m=r(mean)
    - }
    - sum `x'
    = sum w3
    - scalar `x'm=r(mean)
    = scalar w3m=r(mean)
    - }
    - sum `x'
    = sum w4
    - scalar `x'm=r(mean)
    = scalar w4m=r(mean)
    - }
    - sum `x'
    = sum w5
    - scalar `x'm=r(mean)
    = scalar w5m=r(mean)
    - }
    - sum `x'
    = sum ww_1
    - scalar `x'm=r(mean)
    = scalar ww_1m=r(mean)
    - }
    - sum `x'
    = sum ww_2
    - scalar `x'm=r(mean)
    = scalar ww_2m=r(mean)
    - }
    - sum `x'
    = sum ww_3
    - scalar `x'm=r(mean)
    = scalar ww_3m=r(mean)
    - }
    - sum `x'
    = sum ww_4
    - scalar `x'm=r(mean)
    = scalar ww_4m=r(mean)
    - }
    - sum `x'
    = sum ww_5
    - scalar `x'm=r(mean)
    = scalar ww_5m=r(mean)
    - }
    - sum `x'
    = sum __000002
    - scalar `x'm=r(mean)
    = scalar __000002m=r(mean)
    - }
    - sum `x'
    = sum __000003
    - scalar `x'm=r(mean)
    = scalar __000003m=r(mean)
    - }
    - sum `x'
    = sum __000004
    - scalar `x'm=r(mean)
    = scalar __000004m=r(mean)
    - }
    - sum `x'
    = sum __000005
    - scalar `x'm=r(mean)
    = scalar __000005m=r(mean)
    - }
    - sum `x'
    = sum __000006
    - scalar `x'm=r(mean)
    = scalar __000006m=r(mean)
    - }
    - sum `x'
    = sum cdfw1
    - scalar `x'm=r(mean)
    = scalar cdfw1m=r(mean)
    - }
    - sum `x'
    = sum cdfw2
    - scalar `x'm=r(mean)
    = scalar cdfw2m=r(mean)
    - }
    - sum `x'
    = sum cdfw3
    - scalar `x'm=r(mean)
    = scalar cdfw3m=r(mean)
    - }
    - sum `x'
    = sum cdfw4
    - scalar `x'm=r(mean)
    = scalar cdfw4m=r(mean)
    - }
    - sum `x'
    = sum cdfw5
    - scalar `x'm=r(mean)
    = scalar cdfw5m=r(mean)
    - }
    - sum `x'
    = sum pdfw1
    - scalar `x'm=r(mean)
    = scalar pdfw1m=r(mean)
    - }
    - sum `x'
    = sum pdfw2
    - scalar `x'm=r(mean)
    = scalar pdfw2m=r(mean)
    - }
    - sum `x'
    = sum pdfw3
    - scalar `x'm=r(mean)
    = scalar pdfw3m=r(mean)
    - }
    - sum `x'
    = sum pdfw4
    - scalar `x'm=r(mean)
    = scalar pdfw4m=r(mean)
    - }
    - sum `x'
    = sum pdfw5
    - scalar `x'm=r(mean)
    = scalar pdfw5m=r(mean)
    - }
    - sum `x'
    = sum lnexp
    - scalar `x'm=r(mean)
    = scalar lnexpm=r(mean)
    - }
    - sum `x'
    = sum duw1
    - scalar `x'm=r(mean)
    = scalar duw1m=r(mean)
    - }
    - sum `x'
    = sum duw2
    - scalar `x'm=r(mean)
    = scalar duw2m=r(mean)
    - }
    - sum `x'
    = sum duw3
    - scalar `x'm=r(mean)
    = scalar duw3m=r(mean)
    - }
    - sum `x'
    = sum duw4
    - scalar `x'm=r(mean)
    = scalar duw4m=r(mean)
    - }
    - sum `x'
    = sum duw5
    - scalar `x'm=r(mean)
    = scalar duw5m=r(mean)
    - }
    - sum `x'
    = sum income
    - scalar `x'm=r(mean)
    = scalar incomem=r(mean)
    - }
    - }
    - else {
      foreach x of varlist w* `lnpr' lnexp `e(demographics)' {
      sum `x'
      scalar `x'm=r(mean)
      }
      }
    - }
    - tempname lnpindex
    - scalar `lnpindex'= `e(anot)'
    = scalar __000008= 10
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_1]*__000002m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_1_1]*(__000002m*__000002m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000002m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000002m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000002m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000002m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_2]*__000003m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_1]*(__000003m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_2_2]*(__000003m*__000003m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000003m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000003m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000003m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_3]*__000004m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_1]*(__000004m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_2]*(__000004m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_3_3]*(__000004m*__000004m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000004m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000004m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_4]*__000005m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_1]*(__000005m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_2]*(__000005m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_3]*(__000005m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_4_4]*(__000005m*__000005m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000005m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - scalar `lnpindex'= `lnpindex' + _b[alpha:alpha_`i']*`lnp`i''m
    = scalar __000008= __000008 + _b[alpha:alpha_5]*__000006m
    - forvalue j=1/`e(ngoods)' {
    = forvalue j=1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_1]*(__000006m*__000002m))
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_2]*(__000006m*__000003m))
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_3]*(__000006m*__000004m))
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
      }
    - else {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_4]*(__000006m*__000005m))
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`j'_`i']*(`lnp`i''m*`lnp`j''m))
    = scalar __000008= __000008 + 0.5*(_b[gamma:gamma_5_5]*(__000006m*__000006m))
    - }
    - else {
      scalar `lnpindex'= `lnpindex' + 0.5*(_b[gamma:gamma_`i'_`j']*(`lnp`i''m*`lnp`j''m))
      }
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - tempname gsum`i'
    = tempname gsum1
    - local gsum`i' = 0
    = local gsum1 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = 0+_b[gamma:gamma_1_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 2>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0591535938405046+_b[gamma:gamma_2_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0387090477223783+_b[gamma:gamma_3_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = .0176216913007004+_b[gamma:gamma_4_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=1 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum1 = -.0030732281789807+_b[gamma:gamma_5_1]*__000002m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum2
    - local gsum`i' = 0
    = local gsum2 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=2 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum2 = 0+_b[gamma:gamma_2_1]*__000003m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = .0277222105949546+_b[gamma:gamma_2_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 3>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0171417662329056+_b[gamma:gamma_3_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0218759630132105+_b[gamma:gamma_4_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=2 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum2 = -.0136262845713008+_b[gamma:gamma_5_2]*__000003m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum3
    - local gsum`i' = 0
    = local gsum3 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = 0+_b[gamma:gamma_3_1]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=3 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum3 = -.0128063801117631+_b[gamma:gamma_3_2]*__000004m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = -.0106860661635694+_b[gamma:gamma_3_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 4>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0037558222561715+_b[gamma:gamma_4_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=3 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum3 = .0006272890983304+_b[gamma:gamma_5_3]*__000004m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum4
    - local gsum`i' = 0
    = local gsum4 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = 0+_b[gamma:gamma_4_1]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0254535866849024+_b[gamma:gamma_4_2]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=4 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum4 = .0329365201319483+_b[gamma:gamma_4_3]*__000005m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .0392726162880456+_b[gamma:gamma_4_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - if `j'>=`i' {
    = if 5>=4 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum4 = .006237960913345+_b[gamma:gamma_5_4]*__000005m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - tempname gsum`i'
    = tempname gsum5
    - local gsum`i' = 0
    = local gsum5 = 0
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - if `j'>=`i' {
    = if 1>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = 0+_b[gamma:gamma_5_1]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 2>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = .0066241956441079+_b[gamma:gamma_5_2]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 3>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0150361515478514+_b[gamma:gamma_5_3]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 4>=5 {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
      }
    - else {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
    = local gsum5 = -.0172625445820406+_b[gamma:gamma_5_4]*__000006m
    - }
    - }
    - if `j'>=`i' {
    = if 5>=5 {
    - local gsum`i' = `gsum`i''+_b[gamma:gamma_`j'_`i']*`lnp`i''m
    = local gsum5 = -.006330642161351+_b[gamma:gamma_5_5]*__000006m
    - }
    - else {
      local gsum`i' = `gsum`i''+_b[gamma:gamma_`i'_`j']*`lnp`i''m
      }
    - }
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      tempname bofp
      scalar `bofp'= _b[beta:beta_1]*`lnp1'm
      forvalues i = 2/`=e(ngoods)' {
      scalar `bofp'= `bofp' + _b[beta:beta_`i']*`lnp`i''m
      }
      }
    - if `ndemo' > 0 {
    = if 1 > 0 {
    - tempname cofp mbar
    - scalar `cofp'= 1
    = scalar __00000E= 1
    - scalar `mbar'= 1
    = scalar __00000F= 1
    - foreach var of varlist `e(demographics)' {
    = foreach var of varlist income {
    - forvalue i=1/`=e(ngoods)' {
    = forvalue i=1/5 {
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_1]*__000002m)
    - tempname betanz`i'
    = tempname betanz1
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000G=_b[beta:beta_1]+(incomem*_b[eta:eta_income_1])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_2]*__000003m)
    - tempname betanz`i'
    = tempname betanz2
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000H=_b[beta:beta_2]+(incomem*_b[eta:eta_income_2])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_3]*__000004m)
    - tempname betanz`i'
    = tempname betanz3
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000I=_b[beta:beta_3]+(incomem*_b[eta:eta_income_3])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_4]*__000005m)
    - tempname betanz`i'
    = tempname betanz4
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000J=_b[beta:beta_4]+(incomem*_b[eta:eta_income_4])
    - }
    - scalar `cofp'= `cofp'*(`var'm*_b[eta:eta_`var'_`i']*`lnp`i''m)
    = scalar __00000E= __00000E*(incomem*_b[eta:eta_income_5]*__000006m)
    - tempname betanz`i'
    = tempname betanz5
    - scalar `betanz`i''=_b[beta:beta_`i']+(`var'm*_b[eta:eta_`var'_`i'])
    = scalar __00000K=_b[beta:beta_5]+(incomem*_b[eta:eta_income_5])
    - }
    - scalar `mbar'= `mbar' + (_b[rho:rho_`var']*`var'm)
    = scalar __00000F= __00000F + (_b[rho:rho_income]*incomem)
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we1 = _b[alpha:alpha_1]+__00000G*(lnexpm-__000008-ln(__00000F)) + 3.94649590785e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we1 = we1*cdfw1m + _b[delta:delta_1]*pdfw1m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we2 = _b[alpha:alpha_2]+__00000H*(lnexpm-__000008-ln(__00000F)) + 3.46944695195e-17
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we2 = we2*cdfw2m + _b[delta:delta_2]*pdfw2m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we3 = _b[alpha:alpha_3]+__00000I*(lnexpm-__000008-ln(__00000F)) + -1.07119174642e-1
> 6
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we3 = we3*cdfw3m + _b[delta:delta_3]*pdfw3m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we4 = _b[alpha:alpha_4]+__00000J*(lnexpm-__000008-ln(__00000F)) + -3.12250225676e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we4 = we4*cdfw4m + _b[delta:delta_4]*pdfw4m
    - }
    - }
    - if `ndemo' == 0 {
    = if 1 == 0 {
      scalar we`i' = _b[alpha:alpha_`i']+_b[beta:beta_`i']*(lnexpm-`lnpindex') + `gsum`i''
      if "`e(quadratic)'" == "quadratic" {
      scalar we`i' = we`i' + (lambda[1,`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2
      }
      }
    - else {
    - scalar we`i' = _b[alpha:alpha_`i']+`betanz`i''*(lnexpm-`lnpindex'-ln(`mbar')) + `gsum`i''
    = scalar we5 = _b[alpha:alpha_5]+__00000K*(lnexpm-__000008-ln(__00000F)) + -7.89299181569e-1
> 7
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      scalar we`i' = we`i' + (_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-
> ln(`mbar'))^2
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - scalar we`i' = we`i'*cdfw`i'm + _b[delta:delta_`i']*pdfw`i'm
    = scalar we5 = we5*cdfw5m + _b[delta:delta_5]*pdfw5m
    - }
    - }
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue11 "(-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue11 "((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue12 "(-0+(1/we1)*(_b[gamma:gamma_2_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue12 "((-0+(1/we1)*(_b[gamma:gamma_2_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_2]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue13 "(-0+(1/we1)*(_b[gamma:gamma_3_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue13 "((-0+(1/we1)*(_b[gamma:gamma_3_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_3]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue14 "(-0+(1/we1)*(_b[gamma:gamma_4_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue14 "((-0+(1/we1)*(_b[gamma:gamma_4_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_4]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(1==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=1 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue15 "(-0+(1/we1)*(_b[gamma:gamma_5_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue15 "((-0+(1/we1)*(_b[gamma:gamma_5_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e
> -17))))*cdfw1m + (_b[tau:p1_5]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=2 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue21 "(-0+(1/we2)*(_b[gamma:gamma_2_1]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue21 "((-0+(1/we2)*(_b[gamma:gamma_2_1]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_1]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue22 "(-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue22 "((-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue23 "(-0+(1/we2)*(_b[gamma:gamma_3_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue23 "((-0+(1/we2)*(_b[gamma:gamma_3_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_3]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue24 "(-0+(1/we2)*(_b[gamma:gamma_4_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue24 "((-0+(1/we2)*(_b[gamma:gamma_4_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_4]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(2==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=2 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue25 "(-0+(1/we2)*(_b[gamma:gamma_5_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-
> 17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue25 "((-0+(1/we2)*(_b[gamma:gamma_5_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e
> -17))))*cdfw2m + (_b[tau:p2_5]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=3 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue31 "(-0+(1/we3)*(_b[gamma:gamma_3_1]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue31 "((-0+(1/we3)*(_b[gamma:gamma_3_1]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_1]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=3 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue32 "(-0+(1/we3)*(_b[gamma:gamma_3_2]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue32 "((-0+(1/we3)*(_b[gamma:gamma_3_2]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_2]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue33 "(-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue33 "((-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue34 "(-0+(1/we3)*(_b[gamma:gamma_4_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue34 "((-0+(1/we3)*(_b[gamma:gamma_4_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_4]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(3==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=3 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue35 "(-0+(1/we3)*(_b[gamma:gamma_5_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e
> -16))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue35 "((-0+(1/we3)*(_b[gamma:gamma_5_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642
> e-16))))*cdfw3m + (_b[tau:p3_5]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue41 "(-0+(1/we4)*(_b[gamma:gamma_4_1]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue41 "((-0+(1/we4)*(_b[gamma:gamma_4_1]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_1]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue42 "(-0+(1/we4)*(_b[gamma:gamma_4_2]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue42 "((-0+(1/we4)*(_b[gamma:gamma_4_2]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_2]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=4 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue43 "(-0+(1/we4)*(_b[gamma:gamma_4_3]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue43 "((-0+(1/we4)*(_b[gamma:gamma_4_3]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_3]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=4 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue44 "(-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue44 "((-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(4==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=4 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue45 "(-0+(1/we4)*(_b[gamma:gamma_5_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e
> -17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue45 "((-0+(1/we4)*(_b[gamma:gamma_5_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676
> e-17))))*cdfw4m + (_b[tau:p4_5]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)"
    - }
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==1,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 1>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue51 "(-0+(1/we5)*(_b[gamma:gamma_5_1]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue51 "((-0+(1/we5)*(_b[gamma:gamma_5_1]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_1]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==2,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 2>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue52 "(-0+(1/we5)*(_b[gamma:gamma_5_2]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue52 "((-0+(1/we5)*(_b[gamma:gamma_5_2]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_2]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==3,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 3>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue53 "(-0+(1/we5)*(_b[gamma:gamma_5_3]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue53 "((-0+(1/we5)*(_b[gamma:gamma_5_3]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_3]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==4,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 4>=5 {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - else {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue54 "(-0+(1/we5)*(_b[gamma:gamma_5_4]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue54 "((-0+(1/we5)*(_b[gamma:gamma_5_4]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_4]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - local de=cond(`i'==`j',1,0)
    = local de=cond(5==5,1,0)
    - if `ndemo' == 0 {
    = if 1 == 0 {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']*(_b[alpha:al
> pha_`i']+`gsum`i''))))"
      }
      if "`e(quadratic)'" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(_b[beta:beta_`i']+(2*_b[lambda
> :lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`
> i']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      else {
      global ue`i'`j'"(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(_b[beta:beta_`i']+(2*_b[lambda:
> lambda_`i']/exp(`bofp')*(lnexpm-`lnpindex'))*(_b[alpha:alpha_`i']+`gsum`i''))-(_b[beta:beta_`i
> ']*_b[lambda:lambda_`i']/exp(`bofp'))*(lnexpm-`lnpindex')^2)))"
      }
      }
      }
    - else {
    - if `j'>=`i' {
    = if 5>=5 {
    - global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
    = global ue55 "(-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e
> -17))))"
    - }
    - else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''*(_b[alpha:alpha_`i
> ']+`gsum`i''))))"
      }
    - if "`e(quadratic)'" == "quadratic" {
    = if "noquadratic" == "quadratic" {
      if `j'>=`i' {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`i'_`j']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      else {
      global ue`i'`j' "(-`de'+(1/we`i')*(_b[gamma:gamma_`j'_`i']-(`betanz`i''+(2*_b[lambda:lambd
> a_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))*(_b[alpha:alpha_`i']+`gsum`i'')
> )-(`betanz`i''*_b[lambda:lambda_`i']/exp(`bofp')/exp(`cofp'))*(lnexpm-`lnpindex'-ln(`mbar'))^2
> ))"
      }
      }
    - }
    - if "`e(censor)'" == "censor" {
    = if "censor" == "censor" {
    - global ue`i'`j' "(${ue`i'`j'}*cdfw`i'm + (_b[tau:p`i'_`j']*pdfw`i'm*(w`i'm-_b[delta:delta_
> `i']*duw`i'm))/we`i')"
    = global ue55 "((-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569
> e-17))))*cdfw5m + (_b[tau:p5_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)"
    - }
    - }
    - }
    - tempname elasu seu
    - mat elasu=J(`e(ngoods)',`e(ngoods)',0)
    = mat elasu=J(5,5,0)
    - mat seu=J(`e(ngoods)',`e(ngoods)',0)
    = mat seu=J(5,5,0)
    - forvalues i = 1/`=e(ngoods)' {
    = forvalues i = 1/5 {
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - nlcom(${ue`i'`j'})
    = nlcom(((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17))))
> *cdfw1m + (_b[tau:p1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))

       _nl_1:  ((-1+(1/we1)*(_b[gamma:gamma_1_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17)
> )))*cdfw1m + (_b[tau:p1_1]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.3789146   .0793551    -4.77   0.000    -.5344477   -.2233815
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[1,1] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[1,1] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[1,1] = sqrt(seu[1,1])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we1)*(_b[gamma:gamma_2_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17))))
> *cdfw1m + (_b[tau:p1_2]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))

       _nl_1:  ((-0+(1/we1)*(_b[gamma:gamma_2_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17)
> )))*cdfw1m + (_b[tau:p1_2]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0711888   .0726418    -0.98   0.327    -.2135642    .0711866
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[1,2] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[1,2] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[1,2] = sqrt(seu[1,2])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we1)*(_b[gamma:gamma_3_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17))))
> *cdfw1m + (_b[tau:p1_3]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))

       _nl_1:  ((-0+(1/we1)*(_b[gamma:gamma_3_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17)
> )))*cdfw1m + (_b[tau:p1_3]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.1769621   .0713695    -2.48   0.013    -.3168437   -.0370805
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[1,3] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[1,3] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[1,3] = sqrt(seu[1,3])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we1)*(_b[gamma:gamma_4_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17))))
> *cdfw1m + (_b[tau:p1_4]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))

       _nl_1:  ((-0+(1/we1)*(_b[gamma:gamma_4_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17)
> )))*cdfw1m + (_b[tau:p1_4]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.1320792   .0737725    -1.79   0.073    -.2766707    .0125123
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[1,4] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[1,4] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[1,4] = sqrt(seu[1,4])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we1)*(_b[gamma:gamma_5_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17))))
> *cdfw1m + (_b[tau:p1_5]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1))

       _nl_1:  ((-0+(1/we1)*(_b[gamma:gamma_5_1]-(__00000G*(_b[alpha:alpha_1]+3.94649590785e-17)
> )))*cdfw1m + (_b[tau:p1_5]*pdfw1m*(w1m-_b[delta:delta_1]*duw1m))/we1)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0455441   .0667733     0.68   0.495    -.0853292    .1764174
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[1,5] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[1,5] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[1,5] = sqrt(seu[1,5])
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we2)*(_b[gamma:gamma_2_1]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17))))
> *cdfw2m + (_b[tau:p2_1]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2))

       _nl_1:  ((-0+(1/we2)*(_b[gamma:gamma_2_1]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17)
> )))*cdfw2m + (_b[tau:p2_1]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.1060714   .0369855    -2.87   0.004    -.1785617   -.0335811
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[2,1] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[2,1] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[2,1] = sqrt(seu[2,1])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17))))
> *cdfw2m + (_b[tau:p2_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2))

       _nl_1:  ((-1+(1/we2)*(_b[gamma:gamma_2_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17)
> )))*cdfw2m + (_b[tau:p2_2]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.5095879   .0381026   -13.37   0.000    -.5842675   -.4349082
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[2,2] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[2,2] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[2,2] = sqrt(seu[2,2])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we2)*(_b[gamma:gamma_3_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17))))
> *cdfw2m + (_b[tau:p2_3]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2))

       _nl_1:  ((-0+(1/we2)*(_b[gamma:gamma_3_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17)
> )))*cdfw2m + (_b[tau:p2_3]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0525789   .0330784    -1.59   0.112    -.1174113    .0122536
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[2,3] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[2,3] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[2,3] = sqrt(seu[2,3])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we2)*(_b[gamma:gamma_4_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17))))
> *cdfw2m + (_b[tau:p2_4]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2))

       _nl_1:  ((-0+(1/we2)*(_b[gamma:gamma_4_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17)
> )))*cdfw2m + (_b[tau:p2_4]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   -.031843   .0347955    -0.92   0.360     -.100041     .036355
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[2,4] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[2,4] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[2,4] = sqrt(seu[2,4])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we2)*(_b[gamma:gamma_5_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17))))
> *cdfw2m + (_b[tau:p2_5]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2))

       _nl_1:  ((-0+(1/we2)*(_b[gamma:gamma_5_2]-(__00000H*(_b[alpha:alpha_2]+3.46944695195e-17)
> )))*cdfw2m + (_b[tau:p2_5]*pdfw2m*(w2m-_b[delta:delta_2]*duw2m))/we2)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0295948   .0322666    -0.92   0.359    -.0928361    .0336466
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[2,5] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[2,5] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[2,5] = sqrt(seu[2,5])
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we3)*(_b[gamma:gamma_3_1]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16)))
> )*cdfw3m + (_b[tau:p3_1]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3))

       _nl_1:  ((-0+(1/we3)*(_b[gamma:gamma_3_1]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16
> ))))*cdfw3m + (_b[tau:p3_1]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.4399108   .1630362    -2.70   0.007    -.7594559   -.1203658
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[3,1] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[3,1] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[3,1] = sqrt(seu[3,1])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we3)*(_b[gamma:gamma_3_2]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16)))
> )*cdfw3m + (_b[tau:p3_2]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3))

       _nl_1:  ((-0+(1/we3)*(_b[gamma:gamma_3_2]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16
> ))))*cdfw3m + (_b[tau:p3_2]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .2926107   .1661287     1.76   0.078    -.0329957     .618217
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[3,2] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[3,2] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[3,2] = sqrt(seu[3,2])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16)))
> )*cdfw3m + (_b[tau:p3_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3))

       _nl_1:  ((-1+(1/we3)*(_b[gamma:gamma_3_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16
> ))))*cdfw3m + (_b[tau:p3_3]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.5475111   .1619164    -3.38   0.001    -.8648614   -.2301609
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[3,3] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[3,3] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[3,3] = sqrt(seu[3,3])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we3)*(_b[gamma:gamma_4_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16)))
> )*cdfw3m + (_b[tau:p3_4]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3))

       _nl_1:  ((-0+(1/we3)*(_b[gamma:gamma_4_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16
> ))))*cdfw3m + (_b[tau:p3_4]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0797906   .1610787     0.50   0.620    -.2359178     .395499
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[3,4] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[3,4] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[3,4] = sqrt(seu[3,4])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we3)*(_b[gamma:gamma_5_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16)))
> )*cdfw3m + (_b[tau:p3_5]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3))

       _nl_1:  ((-0+(1/we3)*(_b[gamma:gamma_5_3]-(__00000I*(_b[alpha:alpha_3]+-1.07119174642e-16
> ))))*cdfw3m + (_b[tau:p3_5]*pdfw3m*(w3m-_b[delta:delta_3]*duw3m))/we3)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.1023459   .1449722    -0.71   0.480    -.3864861    .1817944
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[3,5] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[3,5] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[3,5] = sqrt(seu[3,5])
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we4)*(_b[gamma:gamma_4_1]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17)))
> )*cdfw4m + (_b[tau:p4_1]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4))

       _nl_1:  ((-0+(1/we4)*(_b[gamma:gamma_4_1]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17
> ))))*cdfw4m + (_b[tau:p4_1]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.2397522   .0489267    -4.90   0.000    -.3356467   -.1438576
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[4,1] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[4,1] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[4,1] = sqrt(seu[4,1])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we4)*(_b[gamma:gamma_4_2]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17)))
> )*cdfw4m + (_b[tau:p4_2]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4))

       _nl_1:  ((-0+(1/we4)*(_b[gamma:gamma_4_2]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17
> ))))*cdfw4m + (_b[tau:p4_2]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0934862   .0471707    -1.98   0.047    -.1859392   -.0010333
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[4,2] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[4,2] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[4,2] = sqrt(seu[4,2])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we4)*(_b[gamma:gamma_4_3]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17)))
> )*cdfw4m + (_b[tau:p4_3]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4))

       _nl_1:  ((-0+(1/we4)*(_b[gamma:gamma_4_3]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17
> ))))*cdfw4m + (_b[tau:p4_3]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0543777   .0455646    -1.19   0.233    -.1436826    .0349273
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[4,3] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[4,3] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[4,3] = sqrt(seu[4,3])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17)))
> )*cdfw4m + (_b[tau:p4_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4))

       _nl_1:  ((-1+(1/we4)*(_b[gamma:gamma_4_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17
> ))))*cdfw4m + (_b[tau:p4_4]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.6383845   .0493397   -12.94   0.000    -.7350885   -.5416805
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[4,4] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[4,4] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[4,4] = sqrt(seu[4,4])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we4)*(_b[gamma:gamma_5_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17)))
> )*cdfw4m + (_b[tau:p4_5]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4))

       _nl_1:  ((-0+(1/we4)*(_b[gamma:gamma_5_4]-(__00000J*(_b[alpha:alpha_4]+-3.12250225676e-17
> ))))*cdfw4m + (_b[tau:p4_5]*pdfw4m*(w4m-_b[delta:delta_4]*duw4m))/we4)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0513681   .0433094     1.19   0.236    -.0335167    .1362529
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[4,5] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[4,5] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[4,5] = sqrt(seu[4,5])
    - }
    - }
    - forvalues j = 1/`=e(ngoods)' {
    = forvalues j = 1/5 {
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we5)*(_b[gamma:gamma_5_1]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17)))
> )*cdfw5m + (_b[tau:p5_1]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5))

       _nl_1:  ((-0+(1/we5)*(_b[gamma:gamma_5_1]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17
> ))))*cdfw5m + (_b[tau:p5_1]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0206632   .0581862     0.36   0.722    -.0933797    .1347061
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[5,1] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[5,1] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[5,1] = sqrt(seu[5,1])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we5)*(_b[gamma:gamma_5_2]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17)))
> )*cdfw5m + (_b[tau:p5_2]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5))

       _nl_1:  ((-0+(1/we5)*(_b[gamma:gamma_5_2]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17
> ))))*cdfw5m + (_b[tau:p5_2]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0908512    .054919    -1.65   0.098    -.1984905     .016788
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[5,2] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[5,2] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[5,2] = sqrt(seu[5,2])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we5)*(_b[gamma:gamma_5_3]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17)))
> )*cdfw5m + (_b[tau:p5_3]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5))

       _nl_1:  ((-0+(1/we5)*(_b[gamma:gamma_5_3]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17
> ))))*cdfw5m + (_b[tau:p5_3]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0355538   .0531708     0.67   0.504     -.068659    .1397667
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[5,3] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[5,3] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[5,3] = sqrt(seu[5,3])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-0+(1/we5)*(_b[gamma:gamma_5_4]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17)))
> )*cdfw5m + (_b[tau:p5_4]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5))

       _nl_1:  ((-0+(1/we5)*(_b[gamma:gamma_5_4]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17
> ))))*cdfw5m + (_b[tau:p5_4]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0971425   .0556346     1.75   0.081    -.0118993    .2061843
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[5,4] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[5,4] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[5,4] = sqrt(seu[5,4])
    - }
    - nlcom(${ue`i'`j'})
    = nlcom(((-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17)))
> )*cdfw5m + (_b[tau:p5_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5))

       _nl_1:  ((-1+(1/we5)*(_b[gamma:gamma_5_5]-(__00000K*(_b[alpha:alpha_5]+-7.89299181569e-17
> ))))*cdfw5m + (_b[tau:p5_5]*pdfw5m*(w5m-_b[delta:delta_5]*duw5m))/we5)

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.7352281   .0562424   -13.07   0.000    -.8454612    -.624995
------------------------------------------------------------------------------
    - mat elasu[`i',`j'] = r(b)
    = mat elasu[5,5] = r(b)
    - mat seu[`i',`j'] = r(V)
    = mat seu[5,5] = r(V)
    - mat seu[`i',`j'] = sqrt(seu[`i',`j'])
    = mat seu[5,5] = sqrt(seu[5,5])
    - }
    - }
    - ret mat elas_u elasu
    - ret mat se_elas_u seu
    ------------------------------------------------------------ end quaidsce_estat.DoUncomp ---
  - }
  - else if `"`key'"' == substr("compensated", 1, max(4, `lkey')) {
  = else if `"uncomp"' == substr("compensated", 1, max(4, 6)) {
    DoComp `0'
    }
  - else {
    di as error "invalid subcommand `key'"
    exit 321
    }
  ----------------------------------------------------------------------- end quaidsce_estat ---
- return add
- exit
---------------------------------------------------------------------------------- end estat ---

. set trace off

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. program drop _all

. 
end of do-file

. estat comp

. return list all

matrices:
          r(se_elas_c) :  5 x 5
             r(elas_c) :  5 x 5

. mat li r(elas_c)

r(elas_c)[5,5]
            c1          c2          c3          c4          c5
r1  -.17424068   .14355428  -.10189212   .06934167    .2049661
r2   .07092438  -.32388455    .0123394   .14233965   .10826854
r3  -.24453282   .49760058  -.47585067   .27206335   .04983546
r4  -.04920586   .10643426   .01551065  -.45086669   .19978602
r5    .1950805   .09214677   .09952637   .26878768   -.5993732

. mat li r(se_elas_c)

r(se_elas_c)[5,5]
           c1         c2         c3         c4         c5
r1  .07877214  .07333872  .07145648   .0743768  .06719184
r2  .03720156  .03846276  .03311701  .03501438  .03241362
r3  .16549279  .16965128  .16225324  .16393894  .14646545
r4  .04957416  .04791029   .0456587  .04987656  .04375438
r5  .05880755  .05564281  .05326279  .05626253  .05668956

. estat uncomp

. mat li r(elas_u)

r(elas_u)[5,5]
            c1          c2          c3          c4          c5
r1  -.37891457  -.07118883  -.17696213   -.1320792   .04554412
r2   -.1060714  -.50958788  -.05257887  -.03184302  -.02959475
r3  -.43991083   .29261069  -.54751115   .07979061  -.10234589
r4  -.23975217  -.09348623  -.05437766  -.63838451   .05136813
r5   .02066319  -.09085123   .03555383    .0971425  -.73522811

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1-w17, anot(10) prices(p1-p17) expenditure(total_exp) demographics(EA  x1-x8) nolog 
>  method(nls) 
variable w17 not found
r(111);

end of do-file

r(111);

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. use "C:\Users\jccaro\quaidsce\docs\DS_STATA_3_2__pci2sls_.dta", clear

. 
end of do-file

. do "C:\Users\jccaro\AppData\Local\Temp\STD1638_000000.tmp"

. quaidsce w1-w17, anot(10) prices(p1-p17) expenditure(total_exp) demographics(EA  x1-x8) nolog 
>  method(nls) 
(obs = 15,151)
Calculating NLS estimates...
